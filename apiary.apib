FORMAT: 1A
HOST: https://sandbox-api.mylimobiz.com/v0

# Operator API

## Overview

The Operator API allows custom applications to interact programmatically with Limo Anywhere. Using the Operator API you interact with resources allowing for actions such as:

- Operator Sign Up.
- Rate Lookup & Calculation.
- Reservation Creation/Modification/Cancellation.

The API accepts/returns JSON data and attempts to conform to the <a href="https://en.wikipedia.org/wiki/Representational_state_transfer">RESTful</a> design principles. You can interact with the resources exposed via the API by accessing resource collections and element URIs by using the HTTP verbs (GET, POST, PUT, and DELETE). 

## General Requirements

To use the Limo Anywhere Operator API  in your application, you must have an API authentication token from the token service. See the <a href="#reference/authentication">Authentication documentation</a> for the authorization guide.

<b>Before you can generate an access token, you must agree to the API Terms of Service and receive a Client ID and Client Secret from Limo Anywhere.</b> 

If you have not done this and would like to use the API, please email api@limoanywhere.com

## HTTP Status Codes

| Status Code | Label | Returned After|
|--------------------------|---------------------------|--------------------------------------------------------------------------------|
|200 | OK.| Operation worked as expected. |
|201 | Created. | Successful POST where a resource was created. |
|202 | Accepted. |Successful operation. |
|204 | No Content. | GET request where content doesn't exist. |
|400 | Bad request. | |
|401 | Unauthorized. | Request when API client credentials or operator credentials have not been validated. |
|403 | Forbidden. | Unauthorized requests such as improper OAuth 2.0 scopes or permissions issues. |
|404 | Not Found. |  Requested resource was not found. |
|409 | Conflict. | A conflict exists and needs to be resolved before the request can be made. |
|429 | Too Many Requests. | Rate limit has been reached. |
|500 | Internal Server Error. |  |

## Getting Started

Follow the below steps to complete some of the most popular actions.

<b> Get Authorization to use the Operator API before doing anything else.</b>

1. Contact api@limoanywhere.com and receive your Client ID & Client Secret.
2. Use Client ID & Client Secret to generate an access token as described <a href="/#reference/authentication">here.</a>

Once you have completed the above, choose a sub-section to follow:

<b> Create a Booking</b>

1. Call the <a href="/#reference/booking/rate-lookup/rate-lookup">Rate Lookup</a> method to get the pricing for your trip requirements. Choose the optimal pricing and hold the `Id` of this rate from the `results` array.
2. Use the <a href="/#reference/booking/booking/booking">Booking</a> method. In `search_result_id` parameter set the rate ID of the desired rate and provide additional necessary information: payment, passengers, optional rates etc.

<b> Create a Quote</b>

1. Call the <a href="/#reference/booking/rate-lookup/rate-lookup">Rate Lookup</a> method to get the pricing for your trip requirements. Choose the optimal pricing and hold the `Id` of this rate from the `results` array.
2. Use the <a href="/#reference/booking/rate-lookup/create-quote">Create Quote</a> method. In the `search_result_id` parameter, use the search result ID from the <a href="#reference/booking/rate-lookup/rate-lookup">Rate Lookup</a> method and provide additional necessary information (same as the <a href="#reference/booking/booking/booking">Booking</a> process)








## Group Authentication
The API uses the <a href="https://tools.ietf.org/html/rfc6749"> OAuth 2.0 </a> protocol for simple, but effective authentication and authorization.
All API endpoints require an OAuth access token, thus we have exposed a service that will provide the user with an OAuth 2 Access token.
This token should be provided in the header in all requests.




## GET Access Token [/get]

We support 2 ways of obtaining authorization:

- <b>Client Credentials Grant: </b>Authenticates as a general client. Allows access to general resources that do not need operator account authentication.
- <b>Resource Owner Credentials Grant: </b>Authenticates as a specific operator account. Allows access to operator account resources and general resources.

### Basic Steps for getting an 'access_token':

1. Choose one of the suitable methods of obtaining Authorization described above (Client or Resource Owner.)
2. Create the appropriate request. Parameter `grant_type` will depend on Authorization method:


### Client Credentials Grant [POST /oauth2/token]
`grant_type` = `client_credentials`

+ Request

    + `grant_type` (string) Required. String length: inclusive between 0 and 50.f
    + `client_id` (string) Required. String length: inclusive between 6 and 50.
    + `client_secret` (string) Required. String length: inclusive between 50 and 50.
 
    + Headers

            Content-Type: application/json

    + Body

            {
                "grant_type": "client_credentials",
                "client_id": "la_operator_test",
                "client_secret": "lcfLYzj7RaUgmRp8sVngt2fpD5GaBJ19Ptt2MrNSlF57GI5kAR",
            }

+ Response 200 (application/json)
    
    + Body

            {
                "access_token": "YE0W7CSdfVaQFmC8GTQ1",
                "token_type": "bearer",
                "expires_in": 3600,
            }

### Resource Owner Credentials Grant [POST /oauth2/token]
`grant_type` = `password`

+ Request

    + `grant_type` (string) Required. String length: inclusive between 0 and 50.
    + `client_id` (string) Required. String length: inclusive between 6 and 50.
    + `client_secret` (string) Required. String length: inclusive between 50 and 50.
    + `company_alias` (string) String length: inclusive between 0 and 50.
    + `username` (string) String length: inclusive between 0 and 50.
    + `password` (string) String length: inclusive between 0 and 50.
 
    + Headers

            Content-Type: application/json

    + Body

            {
                "grant_type": "password",
                "client_id": "la_operator_test",
                "client_secret": "lcfLYzj7RaUgmRp8sVngt2fpD5GaBJ19Ptt2MrNSlF57GI5kAR",
                "company_alias": "test_alias",
                "username": "passenger@test.com",
                "password": "password"
            }

+ Response 200 (application/json)
    
    + Body

            {
                "access_token": "YE0W7CSdfVaQFmC8GTQ1",
                "refresh_token": "yuMF7U7FHMCL2cuI5qKV",
                "token_type": "bearer",
                "expires_in": 3600
            }


## Refresh Access Token [/refresh]
Your access token will expire after a period of time and must be refreshed. Time until token expiration is provided in the `expired_in` parameter when receiving your token. <b>If you receive a 401 error, you may need to refresh your token.</b>


### Refresh [POST /oauth2/token]

+ Request

    + `grant_type` (string) Required. String length: inclusive between 0 and 50.
    + `refresh_token` (string) Required. String length: 20.
    + `client_id` (string) Required. String length: inclusive between 6 and 50.
    + `client_secret` (string) Required. String length: inclusive between 50 and 50.
 
    + Headers

            Content-Type: application/json

    + Body

            {
                "grant_type": "refresh_token",
                "refresh_token": "CSYE0W7dfVaQFmC8GTQPL",
                "client_id": "la_operator_test",
                "client_secret": "lcfLYzj7RaUgmRp8sVngt2fpD5GaBJ19Ptt2MrNSlF57GI5kAR"
            }

+ Response 200 (application/json)
    
    + Body

            {
                "access_token": "YE0W7CSdfVaQFmC8GTQ1",
                "token_type": "bearer",
                "expires_in": 3600
            }


The tables below describe all possible request/response parameters:

#####Request:

| Parameter | Description |
|------------------|-------------------------------------------------------------------------------------------------------------------------|
| grant_type | Type of Grant described above. Possible values: `client_credentials`, `authorization_code`, `password`, `refresh_token` |
| client_id | The client ID of your application |
| client_secret | The client Secret of your application |
| company_alias | The Alias of you company |
| username | Username or Email |
| passwod | Password |

#####Response:

| Parameter | Description |
|------------------|------------------------------------------------------------|
| access_token | Access Token |
| token_type | Token type (Always `bearer`) |
| expires_in | Expiration time of Access token (in seconds) |
| refresh_token | Refresh Token |


### Possible Authentication Errors

| Parameter | Description |
|-------------------------------|---------------------------------------------------------------|
| invalid_request | Required parameters were not provided |
| invalid_client | The Ð¡lient ID or Clernt secret provided is invalid |
| invalid_scope (not used now) | The scope parameter provided is not a valid subset of scopes |
| unsupported_grant_type | Unsupported Grand Type provided |


In 'execution' console you can see request/response samples, data types and sizes of parameters

## Group Company information and settings

### Get company information [GET /companies/{company_alias}/information] 
Provides operation for obtaining CompanyInformation
+ Parameters
    + `company_alias` (required, string) 

+ Request
    + Headers 
        Accept-Encoding: gzip 
        Accept-Charset: utf-8 
        Accept: application/json 
        Authorization: bearer {access_token} 

+ Response 200 (application/json)
    + Headers 
        Content-Type: application/json; charset=utf-8 
    + Body 
        {
            "contacts": {
                "logotype": "http://somedomain.com/some_path/some_logotype.jpeg",
                "company_name": "Some Company Name",
                "address": {
                    "country_code": "US",
                    "state_code": "TX",
                    "postal_code": "12345",
                    "city": "Dallas",
                    "address_line1": "123 Some street",
                    "address_line2": "24 ap"
                },
                "location": {
                    "latitude": 1.1,
                    "longitude": 2.1
                },
                "business_number": "11234 5678 MM 087",
                "is_business_number_visible": true,
                "primary_phone": "+15417543010",
                "secondary_phone": "+15417543010",
                "fax": "+15417543010",
                "general_email": "some_email.email.com",
                "reservation_email": "some_email2.email.com",
                "billing_email": "some_email3.email.com",
                "quote_email": "some_email4.email.com",
                "website_url": "https://somedomain.com/"
            }
        } 

## Group Current Operator
Provides operations with current Operator.

## Profile [/OperatorProfile]
Returns the profile of the current logged-in operator.

### Get Profile [GET /operators/self/profile] 

+ Request 

    + Headers 

            Content-Type: application/json 
            Authorization: bearer {access_token}

+ Response 200 

    + Headers 

            Content-Type: application/json 

    + Body 

{
  "username": "sample string 1",
  "first_name": "sample string 2",
  "last_name": "sample string 3",
  "email": "sample string 4"
}


## Group General Resources

The resources in this section can be used to assist with populating form elements or using auto-complete functionality.

## Payment Types [/payment_types]
The available Payment Types (methods) for company. Payment type "type" values: other, credit_card, bill.

### Get Collection [GET /companies/{company_alias}/resources/payment_types?is_active={is_active}&page_index={page_index}&page_size={page_size}]
Returns a paged collection of Payment Types.

+ Parameters
    + is_active: true (optional, boolean)
    + page_index: 1 (optional, int)
    + page_size: 20 (optional, int)
    + company_alias: limotest1 (required, string)
    
+ Request

+ Headers

        Content-Type: application/json
        Authorization: bearer {access_token}
+ Response 200

    + Headers

        Content-Type: application/json

    + Body

        { "total_count": 2, "items": [ { "id": 1, "name": "sample string 1", "type": "other", "isActive": true }, { "id": 2, "name": "sample string 2", "type": "other", "isActive":false } ] }        

### Get By ID [GET /companies/{company_alias}/resources/payment_types/{id}]
Returns the Payment Type by ID.
+ Parameters
    + id: `1` (required, int)
    + company_alias: limotest1 (required, string)

+ Request

    + Headers

            Content-Type: application/json
            Authorization: bearer {access_token}

+ Response 200

    + Headers
            Content-Type: application/json
            
    + Body

        { "id": 1, "name":"sample string", "type": "other", "is_active":true }
  
## Payment Gateways [/payment_gateways]
The available Payment Gateways for company.

### Get Collection [GET /companies/{company_alias}/resources/payment_gateways?page_index={page_index}&page_size={page_size}]
Returns a paged collection of Payment Gateways.

+ Parameters
    + company_alias: limotest1 (required, string)
    + page_index: 1 (optional, int)
    + page_size: 20 (optional, int)

+ Request

+ Headers

        Content-Type: application/json
        Authorization: bearer {access_token}
+ Response 200

    + Headers
        Content-Type: application/json

    + Body
        {"total_count":2,"items":[{"id":1,"name":"sample string 1"},{"id":2,"name": "sample string 2"}]}

### Get By ID [GET /companies/{company_alias}/resources/payment_gateways/{id}]
Returns the Payment Gateway by ID.
+ Parameters
    + company_alias: limotest1 (required, string)
    + id: `1` (required, int)

+ Request

    + Headers

            Content-Type: application/json
            Authorization: bearer {access_token}

+ Response 200

    + Headers
        Content-Type: application/json
        
    + Body
       {"id": 1,"name": "sample string 1","gateway": "sample string 2","parameter1": "sample string 3","parameter2": "sample string 4","parameter3": "sample string 5","parameter4": "sample string 6"}
       
## Vehicle Types [/vehicle_types] 
The available Vehicle Types for company.

### Get Collections [GET /companies/{company_alias}/resources/vehicle_types?is_active={is_active}&is_visible={is_visible}&page_index={page_index}&page_size={page_size}&service_type_id={service_type_id}]
Returns a paged collection of Vehicle Types.

+ Parameters

    + company_alias: limotest1 (required, string)
    + is_active: true (optional, boolean)
    + is_visible: true (optional, boolean)
    + page_index: 1 (optional, int)
    + page_size: 20 (optional, int)
    + service_type_id: 1 (optional, int)

+ Request
    + Headers
            Content-Type: application/json
            Authorization: bearer {access_token}

+ Response 200

    + Headers
            Content-Type: application/json

    + Body
            {"total_count":2,"items":[{"id":1,"images":["http://webapihelppage1.com","http://webapihelppage2.com"],"name":"sample string 1","passenger_capacity":1,"luggage_capacity": 1,"color":"#ee1d24","description":"sample string 2","is_handicap_accessible":true,"is_active":true,"is_visible":true},{"id":2,"images":["http://webapihelppage3.com","http://webapihelppage4.com"],"name": "sample string 3","passenger_capacity":1,"luggage_capacity":1,"color":"#ee1d24","description":"sample string 4","is_handicap_accessible":true,"is_active":true,"is_visible": true}]}
    
### Get By ID [GET /companies/{company_alias}/resources/vehicle_types/{id}]
Returns the Vehicle Type by ID

+ Parameters
    + company_alias: limotest1 (required, string)
    + id: `1` (required, int)

+ Request    
    + Headers 
        Content-Type: application/json 
        Authorization: bearer {access_token}   
        
+ Response 200

    + Headers
        Content-Type: application/json

    + Body
        {"id":1,"images":["http://webapihelppage1.com","http://webapihelppage2.com"],"name":"sample string 1","passenger_capacity":1,"luggage_capacity": 1,"color":"#ee1d24","description":"sample string 2","is_handicap_accessible":true,"is_active":true,"is_visible":true}
    
## Cars [/cars]
The available Cars for company.

### Get Collections [GET /companies/{company_alias}/resources/cars?is_active={is_active}&page_index={page_index}&page_size={page_size}]
Returns a paged collection of Cars.

+ Parameters

    + company_alias: limotest1 (required, string)
    + is_active: true (optional, boolean)
    + page_index: 1 (optional, int)
    + page_size: 20 (optional, int)

+ Request
    + Headers
            Content-Type: application/json
            Authorization: bearer {access_token}

+ Response 200

    + Headers
            Content-Type: application/json

    + Body
            {"total_count":2,"items":[{"id": 1,"name": "sample string 1","vehicle_type_id": 4,"notes": "sample string 2","car_make": "sample string 3","car_model": "sample string 4","car_year": 2018,"car_color": "sample string 5","color": "sample string 6","passenger_capacity": 5,"license_plate": "sample string 7","is_active": true,"cellular_phone": "sample string 8","cellular_phone_wireless_provider": "sample string 9"},{"id": 2,"name": "sample string 10","vehicle_type_id": 4,"notes": "sample string 11","car_make": "sample string 12","car_model": "sample string 13","car_color": "sample string 14","color": "sample string 15","passenger_capacity": 4,"license_plate": "sample string 16","is_active": true,"cellular_phone": "sample string 17","cellular_phone_wireless_provider": "sample string 18"}]}
    
### Get By ID [GET /companies/{company_alias}/resources/cars/{id}]
Returns the Car by ID

+ Parameters
    + company_alias: limotest1 (required, string)
    + id: `1` (required, int)

+ Request    
    + Headers 
        Content-Type: application/json 
        Authorization: bearer {access_token}   
        
+ Response 200

    + Headers
        Content-Type: application/json

    + Body
        {"id": 1,"name": "sample string 1","vehicle_type_id": 4,"notes": "sample string 2","car_make": "sample string 3","car_model": "sample string 4","car_color": "sample string 5","color": "sample string 6","passenger_capacity": 5,"license_plate": "sample string 7","is_active": true,"cellular_phone": "sample string 8","cellular_phone_wireless_provider": "sample string 9"}
    
    
## Drivers [/drivers]
The available Drivers for company.

### Get Collections [GET /companies/{company_alias}/resources/drivers?is_active={is_active}&page_index={page_index}&page_size={page_size}]
Returns a paged collection of Drivers.

+ Parameters

    + company_alias: limotest1 (required, string)
    + is_active: true (optional, boolean)
    + page_index: 1 (optional, int)
    + page_size: 20 (optional, int)

+ Request
    + Headers
            Content-Type: application/json
            Authorization: bearer {access_token}

+ Response 200

    + Headers
            Content-Type: application/json

    + Body
           {"total_count":2,"items":[{"id": 1,"first_name":"sample string 1","last_name":"sample string 2","car_id":2,"portrait":"http://webapihelppage1.com","cellular_phone":"sample string 3","cellular_phone_wireless_provider":"sample string 4","notes":"sample string 5","is_active":true},{"id":3,"first_name":"sample string 6","last_name":"sample string 7","car_id": 4,"portrait":"http://webapihelppage2.com","cellular_phone":"sample string 8","cellular_phone_wireless_provider":"sample string 9","notes":"sample string 10","is_active":true}]}
    
### Get By ID [GET /companies/{company_alias}/resources/drivers/{id}]
Returns the Driver by ID

+ Parameters
    + company_alias: limotest1 (required, string)
    + id: `1` (required, int)

+ Request    
    + Headers 
        Content-Type: application/json 
        Authorization: bearer {access_token}   
        
+ Response 200

    + Headers
        Content-Type: application/json

    + Body
       {"id": 1,"first_name":"sample string 1","last_name":"sample string 2","car_id":2,"portrait":"http://webapihelppage1.com","cellular_phone":"sample string 3","cellular_phone_wireless_provider":"sample string 4","notes":"sample string 5","is_active":true}
    
            
## Service Types [/service_types]
The available Service Types for company.

### Get Collection [GET /companies/{company_alias}/resources/service_types?page_index={page_index}&page_size={page_size}]
Returns a paged collection of Service Types. 

+ Parameters
    + page_index: 1 (optional, int) 
    + page_size: 20 (optional, int)
    + company_alias: limotest1 (required, string)

+ Request

    + Headers

            Content-Type: application/json
            Authorization: bearer {access_token}

+ Response 200

    + Headers

            Content-Type: application/json

    + Body

            { "total_count": 2, "items": [ { "id"Typ: 1, "name": "Hourly/As Directed", "is_active": true }, { "id": 2, "name": "Airport Arrival", "is_active": true } ] }

### Get By ID [GET /companies/{company_alias}/resources/service_types/{id}]
Returns the Service Type by ID.
+ Parameters
    + id: `1` (required, int)

+ Request

    + Headers

            Content-Type: application/json
            Authorization: bearer {access_token}

+ Response 200

    + Headers

            Content-Type: application/json

    + Body

            { "id": 1, "name": "Hourly/As Directed", "is_active": true }


## Airports [/airports]
Provides read operations for Airports.

### Get by IATA code [GET /companies/{company_alias}/resources/airports/{iata}] 
Returns Airport by IATA code.

+ Parameters 
    + iata: (required, string)
    + company_alias: (required, string)

+ Request 

    + Headers 

            Content-Type: application/json 
            Authorization: bearer {access_token}

+ Response 200 

    + Headers 

            Content-Type: application/json 

    + Body 

{
  "iata": "sample string 1",
  "name": "sample string 2",
  "address": {
    "name": "sample string 1",
    "country_code": "sample string 2",
    "state_code": "sample string 3",
    "postal_code": "sample string 4",
    "city": "sample string 5",
    "address_line1": "sample string 6",
    "address_line2": "sample string 7"
  },
  "location": {
    "latitude": 1.1,
    "longitude": 2.1
  }
}

### Get Collecton [GET /companies/{company_alias}/resources/airports?search_for={search_for}&page_index={page_index}&page_size={page_size}] 
Returns a paged collection of Airports.
Use `search_for` parameter to filter results by airport Iata code or name.

+ Parameters 
    + search_for: (optional, string)
    + page_index: 1 (optional, int)
    + page_size: 20 (optional, int)
    + company_alias: (required, string)

+ Request 

    + Headers 

            Content-Type: application/json 
            Authorization: bearer {access_token}

+ Response 200 

    + Headers 

            Content-Type: application/json 

    + Body 

{
  "total_count": 1,
  "items": [
    {
      "iata": "sample string 1",
      "name": "sample string 2",
      "address": {
        "name": "sample string 1",
        "country_code": "sample string 2",
        "state_code": "sample string 3",
        "postal_code": "sample string 4",
        "city": "sample string 5",
        "address_line1": "sample string 6",
        "address_line2": "sample string 7"
      },
      "location": {
        "latitude": 1.1,
        "longitude": 2.1
      }
    },
    {
      "iata": "sample string 1",
      "name": "sample string 2",
      "address": {
        "name": "sample string 1",
        "country_code": "sample string 2",
        "state_code": "sample string 3",
        "postal_code": "sample string 4",
        "city": "sample string 5",
        "address_line1": "sample string 6",
        "address_line2": "sample string 7"
      },
      "location": {
        "latitude": 1.1,
        "longitude": 2.1
      }
    }
  ]
}

## Airlines [/airlines]
Provides read operations for Airlines.

### Get By IATA code [GET /companies/{company_alias}/resources/airlines/{iata}] 
Returns Airline by IATA code.

+ Parameters 
    + iata: (required, string)
    + company_alias: (required, string)

+ Request 

    + Headers 

            Content-Type: application/json 
            Authorization: bearer {access_token}

+ Response 200 

    + Headers 

            Content-Type: application/json 

    + Body 

{
  "iata": "sample string 1",
  "name": "sample string 2"
}
 
### Get Collection [GET /companies/{company_alias}/resources/airlines?search_for={search_for}&page_index={page_index}&page_size={page_size}] 
Returns paged collection of Airlines.
Use `search_for` parameter to filter results by airport Iata code or name.

+ Parameters 
    + search_for: (optional, string)
    + page_index: 1 (optional, int)
    + page_size: 20 (optional, int)
    + company_alias: (required, string)

+ Request 

    + Headers 

            Content-Type: application/json 
            Authorization: bearer {access_token}

+ Response 200 

    + Headers 

            Content-Type: application/json 

    + Body 

{
  "total_count": 1,
  "items": [
    {
      "iata": "sample string 1",
      "name": "sample string 2"
    },
    {
      "iata": "sample string 1",
      "name": "sample string 2"
    }
  ]
}


## Seaports [/seaports]
Provides read operations for Seaports.

### Get Collecton [GET /companies/{company_alias}/resources/seaports?search_for={search_for}&page_index={page_index}&page_size={page_size}] 
Returns a paged collection of Seaports.
Use `search_for` parameter to filter results by seaport code or name.

+ Parameters 
    + company_alias: (required, string)
    + search_for: (optional, string)
    + page_index: 1 (optional, int)
    + page_size: 20 (optional, int)

+ Request 

    + Headers 

            Content-Type: application/json 
            Authorization: bearer {access_token}

+ Response 200 

    + Headers 

            Content-Type: application/json 

    + Body 

{"total_count":2,"items":[{"id":1,"code":"sample string 1","name":"sample string 2","address":{"name":"sample string 3","country_code":"sample string 4","state_code":"sample string 5","postal_code": "sample string 6","city":"sample string 7","address_line1":"sample string 8","address_line2":"sample string 9"},"location":{"latitude": 1.1,"longitude": 2.1}},{"id":2,"code": "sample string 10","name": "sample string 11","address":{"name":"sample string 12","country_code":"sample string 13","state_code":"sample string 14","postal_code":"sample string 15","city":"sample string 16","address_line1": "sample string 17","address_line2":"sample string 18"},"location":{"latitude":1.1,"longitude":2.1}}]}


## Private Airlines [/fbos]
Provides read operations for Private Airlines.

### Get Collection [GET /companies/{company_alias}/resources/fbos?is_active={is_active}&search_for={search_for}&page_index={page_index}&page_size={page_size}] 
Returns paged collection of Private Airlines.
Use `search_for` parameter to filter results by Airport Iata code or Airline Name.

+ Parameters 
    + company_alias: (required, string)
    + search_for: (optional, string)
    + is_active: true (optional, boolean)
    + page_index: 1 (optional, int)
    + page_size: 20 (optional, int)

+ Request 

    + Headers 

            Content-Type: application/json 
            Authorization: bearer {access_token}

+ Response 200 

    + Headers 

            Content-Type: application/json 

    + Body 

{"total_count":2,"items":[{"airport_iata":"sample string 1","name":"sample string 2","phone":"sample string 3","instructions":"sample string 4","address":{"name":"sample string 3","country_code":"sample string 4","state_code":"sample string 5","postal_code": "sample string 6","city":"sample string 7","address_line1":"sample string 8","address_line2":"sample string 9"},"location":{"latitude": 1.1,"longitude": 2.1},"is_active":true},{"airport_iata":"sample string 1","name":"sample string 2","phone":"sample string 3","instructions":"sample string 4","address":{"name":"sample string 12","country_code":"sample string 13","state_code":"sample string 14","postal_code":"sample string 15","city":"sample string 16","address_line1": "sample string 17","address_line2":"sample string 18"},"location":{"latitude":1.1,"longitude":2.1},"is_active":true}]}

### Get By ID [GET /companies/{company_alias}/resources/fbos/{id}] 
Returns Private Airline by ID.
 
+ Parameters
    + id: `1` (required, int)

+ Request

    + Headers

            Content-Type: application/json
            Authorization: bearer {access_token}

+ Response 200

    + Headers
            Content-Type: application/json

    + Body
            {"airport_iata":"sample string 1","name":"sample string 2","phone":"sample string 3","instructions":"sample string 4","address":{"name":"sample string 3","country_code":"sample string 4","state_code":"sample string 5","postal_code": "sample string 6","city":"sample string 7","address_line1":"sample string 8","address_line2":"sample string 9"},"location":{"latitude": 1.1,"longitude": 2.1},"is_active":true}


## POI [/pois]
Provides read operations for Points of Interest.

### Get Collection [GET /companies/{company_alias}/resources/pois?search_for={search_for}&type={type}&is_active={is_active}&page_index={page_index}&page_size={page_size}] 
Returns paged collection of Points of Interest.
Use `search_for` parameter to filter results by POI name.
Use `type` parameter to filter results by POI type.

+ Parameters 
    + company_alias: (required, string)
    + search_for: (optional, string)
    + type: (optional, string)
    + is_active: true (optional, boolean)
    + page_index: 1 (optional, int)
    + page_size: 20 (optional, int)

+ Request 

    + Headers 

            Content-Type: application/json 
            Authorization: bearer {access_token}

+ Response 200 

    + Headers 

            Content-Type: application/json 

    + Body 

{"total_count":2,"items":[{"id":1,"name":"sample string 1","type_id":2,"type":{"name":"sample string 2"},"phone":"sample string 3","instructions":"sample string 4","address":{"name":"sample string 5","country_code":"sample string 6","state_code":"sample string 7","postal_code": "sample string 8","city":"sample string 9","address_line1":"sample string 10","address_line2":"sample string 11"},"location":{"latitude": 1.1,"longitude": 2.1},"is_active":true},{"id":2,"name":"sample string 12","type_id":3,"type":{"name":"sample string 2"},"phone":"sample string 13","instructions":"sample string 14","address":{"name":"sample string 15","country_code":"sample string 16","state_code":"sample string 17","postal_code": "sample string 18","city":"sample string 19","address_line1":"sample string 20","address_line2":"sample string 21"},"location":{"latitude": 1.1,"longitude": 2.1},"is_active":true}]}

## POI Types [/poi_types]
Provides read operations for POI Types.

### Get Collection [GET /companies/{company_alias}/resources/poi_types?search_for={search_for}&is_active={is_active}&page_index={page_index}&page_size={page_size}] 
Returns paged collection of POI Types.
Use `search_for` parameter to filter results by POI Type name.

+ Parameters 
    + company_alias: (required, string)
    + search_for: (optional, string)
    + is_active: true (optional, boolean)
    + page_index: 1 (optional, int)
    + page_size: 20 (optional, int)

+ Request 

    + Headers 

            Content-Type: application/json 
            Authorization: bearer {access_token}

+ Response 200 

    + Headers 

            Content-Type: application/json 

    + Body 

{"total_count":2,"items":[{"id":1,"name":"sample string 1","is_active":true},{"id":2,"name":"sample string 2","is_active":true}]}

## System Settings [/system-settings]

System settings represent configurable options which affect the system behavior. For instance, requirements to be met for booking new ride or sending reservation modifications.

Additional validation is recommended to be done on the client side to avoid receiving technical error messages in such case as attempting to pay without a credit card when the one is required.

### Get [GET /companies/{company_alias}/settings/system]
Returns Company System settings.

+ Parameters
    + company_alias: limotest1 (required, string)

+ Request

    + Headers

            Content-Type: application/json
            Authorization: bearer {access_token}

+ Response 200

    + Headers

            Content-Type: application/json

    + Body

            {
                "service_type_mapping":
                {
                    "default_hourly_service_type_id":1,
                    "default_airport_departure_service_type_id":1,
                    "default_airport_arrival_service_type_id":1,
                    "default_point_to_point_service_type_id":1
                },
                "state_machine_mapping":
                {
                    "created_statuses":[1,2],
                    "unassigned_statuses":[1,2],
                    "offered_statuses":[1,2],
                    "assigned_statuses":[1,2],
                    "driver_is_on_the_way_statuses":[1,2],
                    "driver_is_at_pickup_statuses":[1,2],
                    "driver_is_circling_statuses":[1,2],
                    "driving_passenger_statuses":[1,2],
                    "driver_is_closing_job_statuses":[1,2],
                    "closed_by_driver_statuses":[1,2],
                    "cancelled_statuses":[1,2]
                },
                "vehicle_type_mapping":
                {
                    "hybrid_sedans":[1,2],
                    "vip_sedans":[1,2],
                    "sedans":[1,2],
                    "economy_sedans":[1,2],
                    "hybrid_suvs":[1,2],
                    "vip_suvs":[1,2],
                    "suvs":[1,2],
                    "economy_suvs":[1,2],
                    "mini_vans":[1,2],
                    "other_vans":[1,2],
                    "passenger_vans":[1,2],
                    "limousines":[1,2],
                    "mini_buses":[1,2],
                    "party_buses":[1,2],
                    "coach_buses":[1,2],
                    "other_buses":[1,2],
                    "shared_vehicles":[1,2],
                    "other_vehicles":[1,2]
                },
                "rates_mapping":
                {
                    "base_charge":[1,2],
                    "hourly_charge":[1,2],
                    "passenger_charge":[1,2],
                    "distance_charge":[1,2],
                    "gratuity_charge":[1,2],
                    "extra_gratuity":[1,2],
                    "stops_charge":[1,2],
                    "tolls":[1,2],
                    "surcharges":[1,2],
                    "parking":[1,2],
                    "miscellaneous_charge":[1,2],
                    "discount":[1,2],
                    "taxes":[1,2]
                },
                "ores":
                {
                    "is_ores_enabled": true,
                    "is_credit_card_required":true,
                    "is_billing_address_required":true,
                    "max_authentication_attempt_count":1,
                    "default_payment_gateway_id":1,
                    "payment_transaction_type":"authorization_and_capture",
                    "default_rental_agreement_id":1,
                    "allowed_payment_types":[1,2],
                    "is_rate_calculation_enabled":true,
                    "is_reservation_auto_approve_enabled":false,
                    "is_create_account_allowed":true,
                    "is_create_quote_allowed":true,
                    "is_create_reservation_allowed":true,
                    "create_reservation_allowed_up_to":1,
                    "is_cancel_and_modify_reservation_allowed":true,
                    "cancel_and_modify_reservation_allowed_up_to":1,
                    "is_reservation_cut_off_enabled":true,
                    "reservation_cut_off_for_customer_begins_at":"00:00:00",
                    "reservation_cut_off_for_customer_ends_at":"00:30:00",
                    "is_google_analytics_enabled":false,
                    "google_analytics_ua_code":"UA-12345678-1",
                },
                "lanet":
                {
                    "is_active":true,
                    "is_relationship_auto_accept_enabled":false,
                    "is_realtime_updates_enabled":false
                }
            }


## UI Settings [/ui-settings]

UI System settings represent configurable options which affect the UI behavior. Take into account usage of these settings as a guide when building a customer-facing application.

### Get [GET /companies/{company_alias}/settings/ui]
Returns operator's UI settings.

+ Parameters
    + company_alias: limotest1 (required, string)

+ Request

    + Headers

            Content-Type: application/json
            Authorization: bearer {access_token}

+ Response 200

    + Headers

            Content-Type: application/json

    + Body

           {

    "ores":{
        "default_date_format":"MM/dd/yyyy",
        "default_time_format":"hh:mm tt",
        "default_date_time_format":"MM/dd/yyyy hh:mm tt",
        "is_quote_creation_enabled_if_rates_not_found":true,
        "is_booking_creation_enabled":true,
        "location_type_display_order":[
            "airport",
            "stored_address",
            "address",
            "stored_poi",
            "poi",
            "seaport",
            "fbo"
        ],
        "rate_lookup_display_type":"row",
        "message_on_missing_rate_result_for_return_trip":"sample string 1",
        "message_on_reservation_auto_accept_enabled":"sample string 2",
        "message_on_reservation_auto_accept_disabled":"sample string 3",
        "message_on_credit_card_required":"sample string 4",
        "message_on_reservation_cut_off_enabled":"sample string 5",
        "message_on_ores_disabled":"sample string 6",
        "is_rate_grouping_allowed":true,
        "is_dedicated_quote_link_enabled":true,
        "is_airport_instructions_visible":true,
        "is_flight_details_on_dropoff_location_visible":true,
        "is_child_seats_visible":true,
        "is_promotion_code_visible":true,
        "is_airport_pickup_options_visible":true,
        "design":{
            "primary_button_style":{
                "background_color":{
                    "from_color":"#ffffff",
                    "to_color":"#ffffff"
                },
                "border_color":"#ffffff",
                "text_color":"#000000"
            },
            "accent_button_style":{
                "background_color":{
                    "from_color":"#ffffff",
                    "to_color":"#ffffff"
                },
                "border_color":"#ffffff",
                "text_color":"#000000"
            },
            "warning_button_style":{
                "background_color":{
                    "from_color":"#ffffff",
                    "to_color":"#ffffff"
                },
                "border_color":"#ffffff",
                "text_color":"#000000"
            },
            "default_input_style":{
                "button_color":{
                    "from_color":"#ffffff",
                    "to_color":"#ffffff"
                },
                "border_color":"#ffffff",
                "placeholder_text_color":"#000000"
            },
            "top_menu_background_color":"#ffffff",
            "top_menu_border_color":"#ffffff",
            "step_wizard_bar_background_color":"#ffffff",
            "dash_line_color":"#ffffff",
            "dashboard_menu_text_color":"#000000",
            "text_color":"#000000",
            "background_color":"#ffffff"
        }
    },
    "ores_mobile":{
        "logotype":"http://webapihelppage2.com",
        "background_color":"#ffffff",
        "theme_color":"#ffffff",
        "attention_color":"#ffffff",
        "text_color":"#000000",
        "background_images":[
            "http://webapihelppage1.com",
            "http://webapihelppage2.com"
        ]
    }
}

## Group Rate Lookup

### Initial Reservation Charges [GET /companies/{company_alias}/rate_table/initial_charges] 
Method allows to see set of calculated initial rates (using default active system rates values) and it's total.
Returns response with collection of charges and it's total.
Array of `charges[]` can be used as detailed charges breakdown for new reservation before price setupping on your UI.


+ Parameters
    + `company_alias` (required, string) 

+ Request
    + Headers 
        Accept-Encoding: gzip 
        Accept-Charset: utf-8 
        Accept: application/json 
        Authorization: bearer {access_token} 

+ Response 200 (application/json)
    + Headers 
        Content-Type: application/json; charset=utf-8 
    + Body 
        {
            "charges": [
             {
                "rate_id": 1,
                "name": "sample string 2",
                "rate_type": "fixed",
                "rate_group": "base_rate",
                "is_vat_tax": true,
                "is_primary": true,
                "unit_value": 1.0,
                "unit_count": 1.0,
                "total_value": 5.0
             }
            ],
            "total_amount": 1.0
        } 

### Rate Table [POST /companies/{company_alias}/rate_table]
This method allows you to


+ Parameters
    + `company_alias` (required, string) 

+ Request(application/json)
    + `booking_contact_account_id` (optional, number) 
        The value must be integer which is not less than 1. 
    + `billing_contact_account_id` (optional, number) 
        The value must be integer which is not less than 1. 
    + `passenger_account_id` (optional, number) 
        The value must be integer which is not less than 1. 
    + `service_type_id` (optional, number) 
        The value must be integer which is not less than 1. 
    + `passenger_count` (required, number) 
        The value must be integer which is not less than 1. 
    + `luggage_count` (optional, number) 
        + Default: `0` 
        The value must be integer which is not less than 0. 
    + `infant_child_seat_count` (optional, number) 
        + Default: `0` 
        The value must be integer which is not less than 0. 
    + `booster_child_seat_count` (optional, number) 
        + Default: `0` 
        The value must be integer which is not less than 0. 
    + `toddler_child_seat_count` (optional, number) 
        + Default: `0` 
        The value must be integer which is not less than 0. 
    + `is_handicap_access_required` (optional, boolean) 
        + Default: `False` 
    + `vehicle_type_id` (optional, number) 
        The value must be integer which is not less than 1. 
    + `promotion_code` (optional, string) 
        The value must be non-empty string with maximum length 50. 
    + `scheduled_pickup_at` (required, string) 
        The value must be the string with date&time in ISO 8601 format between '1753-01-01T00:00:00' and '9999-12-31T23:59:59'.
    + `scheduled_duration` (optional, number) 
        The value must be integer which is not less than 60. 
    + `pickup.name` (optional, string) 
        The value must be non-empty string with maximum length 500. 
    + `pickup.scheduled_arrival_at` (optional, string) 
        The value must be the string with date&time in ISO 8601 format between '1753-01-01T00:00:00' and '9999-12-31T23:59:59'.
    + `pickup.actual_arrival_at` (optional, string) 
        The value must be the string with date&time in ISO 8601 format between '1753-01-01T00:00:00' and '9999-12-31T23:59:59'.
    + `pickup.action` (optional, enum[string]) 
        + Members 
            + `pickup` 
            + `stop` 
            + `dropoff` 
    + `pickup.notes` (optional, string) 
        The value must be non-empty string with maximum length 4000. 
    + `pickup.one_line_address` (optional, string) 
    + `pickup.address.country_code` (optional, string) 
        The value must be non-empty string with maximum length 5. 
    + `pickup.address.state_code` (optional, string) 
        The value must be non-empty string with maximum length 5. 
    + `pickup.address.postal_code` (optional, string) 
        The value must be non-empty string with maximum length 15. 
    + `pickup.address.county` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `pickup.address.city` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `pickup.address.address_line1` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `pickup.address.address_line2` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `pickup.flight.airport_code` (optional, string) 
        The value must be string with valid airport IATA or ICAO code. 
    + `pickup.flight.airline_code` (optional, string) 
        The value must be string with valid airline IATA or ICAO code. 
    + `pickup.flight.flight_number` (optional, string) 
        The value must be string with flight number digits. 
    + `pickup.flight.tail_number` (optional, string) 
        The value must be non-empty string with maximum length 10. 
    + `pickup.flight.terminal` (optional, string) 
        The value must be non-empty string with maximum length 50. 
    + `pickup.flight.gateway` (optional, string) 
        The value must be non-empty string with maximum length 50. 
    + `pickup.flight.meet_option` (optional, enum[string]) 
        + Members 
            + `curbside` 
            + `inside` 
    + `pickup.flight.departs_from_or_arrives_to` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `pickup.flight.departure_at_or_arrival_at` (optional, string) 
        The value must be the string with date&time in ISO 8601 format between '1753-01-01T00:00:00' and '9999-12-31T23:59:59'.
    + `pickup.cruise.seaport_code` (required, string) 
        The value must be non-empty string with maximum length 10. 
    + `pickup.cruise.cruise_ship_name` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `pickup.cruise.cruise_line_name` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `pickup.cruise.departs_from_or_arrives_to` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `pickup.cruise.departure_at_or_arrival_at` (optional, string) 
        The value must be the string with date&time in ISO 8601 format between '1753-01-01T00:00:00' and '9999-12-31T23:59:59'.
    + `pickup.location.latitude` (optional, number) 
        + Default: `0` 
    + `pickup.location.longitude` (optional, number) 
        + Default: `0` 
    + `stops[].name` (optional, string) 
        The value must be non-empty string with maximum length 500. 
    + `stops[].scheduled_arrival_at` (optional, string) 
        The value must be the string with date&time in ISO 8601 format between '1753-01-01T00:00:00' and '9999-12-31T23:59:59'.
    + `stops[].actual_arrival_at` (optional, string) 
        The value must be the string with date&time in ISO 8601 format between '1753-01-01T00:00:00' and '9999-12-31T23:59:59'.
    + `stops[].action` (optional, enum[string]) 
        + Members 
            + `pickup` 
            + `stop` 
            + `dropoff` 
    + `stops[].notes` (optional, string) 
        The value must be non-empty string with maximum length 4000. 
    + `stops[].one_line_address` (optional, string) 
    + `stops[].address.country_code` (optional, string) 
        The value must be non-empty string with maximum length 5. 
    + `stops[].address.state_code` (optional, string) 
        The value must be non-empty string with maximum length 5. 
    + `stops[].address.postal_code` (optional, string) 
        The value must be non-empty string with maximum length 15. 
    + `stops[].address.county` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `stops[].address.city` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `stops[].address.address_line1` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `stops[].address.address_line2` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `stops[].flight.airport_code` (optional, string) 
        The value must be string with valid airport IATA or ICAO code. 
    + `stops[].flight.airline_code` (optional, string) 
        The value must be string with valid airline IATA or ICAO code. 
    + `stops[].flight.flight_number` (optional, string) 
        The value must be string with flight number digits. 
    + `stops[].flight.tail_number` (optional, string) 
        The value must be non-empty string with maximum length 10. 
    + `stops[].flight.terminal` (optional, string) 
        The value must be non-empty string with maximum length 50. 
    + `stops[].flight.gateway` (optional, string) 
        The value must be non-empty string with maximum length 50. 
    + `stops[].flight.meet_option` (optional, enum[string]) 
        + Members 
            + `curbside` 
            + `inside` 
    + `stops[].flight.departs_from_or_arrives_to` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `stops[].flight.departure_at_or_arrival_at` (optional, string) 
        The value must be the string with date&time in ISO 8601 format between '1753-01-01T00:00:00' and '9999-12-31T23:59:59'.
    + `stops[].cruise.seaport_code` (required, string) 
        The value must be non-empty string with maximum length 10. 
    + `stops[].cruise.cruise_ship_name` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `stops[].cruise.cruise_line_name` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `stops[].cruise.departs_from_or_arrives_to` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `stops[].cruise.departure_at_or_arrival_at` (optional, string) 
        The value must be the string with date&time in ISO 8601 format between '1753-01-01T00:00:00' and '9999-12-31T23:59:59'.
    + `stops[].location.latitude` (optional, number) 
        + Default: `0` 
    + `stops[].location.longitude` (optional, number) 
        + Default: `0` 
    + `dropoff.name` (optional, string) 
        The value must be non-empty string with maximum length 500. 
    + `dropoff.scheduled_arrival_at` (optional, string) 
        The value must be the string with date&time in ISO 8601 format between '1753-01-01T00:00:00' and '9999-12-31T23:59:59'.
    + `dropoff.actual_arrival_at` (optional, string) 
        The value must be the string with date&time in ISO 8601 format between '1753-01-01T00:00:00' and '9999-12-31T23:59:59'.
    + `dropoff.action` (optional, enum[string]) 
        + Members 
            + `pickup` 
            + `stop` 
            + `dropoff` 
    + `dropoff.notes` (optional, string) 
        The value must be non-empty string with maximum length 4000. 
    + `dropoff.one_line_address` (optional, string) 
    + `dropoff.address.country_code` (optional, string) 
        The value must be non-empty string with maximum length 5. 
    + `dropoff.address.state_code` (optional, string) 
        The value must be non-empty string with maximum length 5. 
    + `dropoff.address.postal_code` (optional, string) 
        The value must be non-empty string with maximum length 15. 
    + `dropoff.address.county` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `dropoff.address.city` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `dropoff.address.address_line1` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `dropoff.address.address_line2` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `dropoff.flight.airport_code` (optional, string) 
        The value must be string with valid airport IATA or ICAO code. 
    + `dropoff.flight.airline_code` (optional, string) 
        The value must be string with valid airline IATA or ICAO code. 
    + `dropoff.flight.flight_number` (optional, string) 
        The value must be string with flight number digits. 
    + `dropoff.flight.tail_number` (optional, string) 
        The value must be non-empty string with maximum length 10. 
    + `dropoff.flight.terminal` (optional, string) 
        The value must be non-empty string with maximum length 50. 
    + `dropoff.flight.gateway` (optional, string) 
        The value must be non-empty string with maximum length 50. 
    + `dropoff.flight.meet_option` (optional, enum[string]) 
        + Members 
            + `curbside` 
            + `inside` 
    + `dropoff.flight.departs_from_or_arrives_to` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `dropoff.flight.departure_at_or_arrival_at` (optional, string) 
        The value must be the string with date&time in ISO 8601 format between '1753-01-01T00:00:00' and '9999-12-31T23:59:59'.
    + `dropoff.cruise.seaport_code` (required, string) 
        The value must be non-empty string with maximum length 10. 
    + `dropoff.cruise.cruise_ship_name` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `dropoff.cruise.cruise_line_name` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `dropoff.cruise.departs_from_or_arrives_to` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `dropoff.cruise.departure_at_or_arrival_at` (optional, string) 
        The value must be the string with date&time in ISO 8601 format between '1753-01-01T00:00:00' and '9999-12-31T23:59:59'.
    + `dropoff.location.latitude` (optional, number) 
        + Default: `0` 
    + `dropoff.location.longitude` (optional, number) 
        + Default: `0` 
    + `charges[].rate_id` (optional, number) 
        + Default: `0` 
    + `charges[].name` (required, string) 
        The value must be non-empty string with maximum length 50. 
    + `charges[].rate_type` (optional, enum[string]) 
        + Members 
            + `fixed` 
            + `percentage` 
            + `multiplier` 
    + `charges[].rate_group` (optional, enum[string]) 
        + Members 
            + `base_rate` 
            + `gratuities` 
            + `miscellaneous` 
            + `taxes` 
            + `surcharge1` 
            + `surcharge2` 
            + `surcharge3` 
            + `surcharge4` 
            + `surcharge5` 
            + `discount1` 
            + `discount2` 
            + `discount3` 
            + `discount4` 
            + `discount5` 
    + `charges[].is_vat_tax` (optional, boolean) 
        + Default: `False` 
    + `charges[].is_primary` (optional, boolean) 
        + Default: `False` 
    + `charges[].unit_value` (optional, number) 
        The value must be non-negative decimal number. 
    + `charges[].unit_count` (optional, number) 
        The value must be non-negative decimal number. 
    + `charges[].total_value` (optional, number) 
        + Default: `0` 
        The value must be non-negative decimal number. 
    + Headers 
        Accept-Encoding: gzip 
        Accept-Charset: utf-8 
        Accept: application/json 
        Content-Type: application/json;charset=utf-8 
        Authorization: bearer {access_token} 
    + Body 
        {
          "booking_contact_account_id": 1,
          "billing_contact_account_id": 1,
          "passenger_account_id": 1,
          "service_type_id": 1,
          "passenger_count": 1,
          "luggage_count": 2,
          "infant_child_seat_count": 3,
          "booster_child_seat_count": 4,
          "toddler_child_seat_count": 5,
          "is_handicap_access_required": true,
          "vehicle_type_id": 1,
          "promotion_code": "sample string 7",
          "scheduled_pickup_at": "2017-07-17T14:49:41",
          "scheduled_duration": 1,
          "pickup": {
            "name": "sample string 1",
            "scheduled_arrival_at": "2017-07-17T14:49:41",
            "actual_arrival_at": "2017-07-17T14:49:41",
            "action": "pickup",
            "notes": "sample string 2",
            "one_line_address": "sample string 3",
            "address": {
              "country_code": "sample string 1",
              "state_code": "sample string 2",
              "postal_code": "sample string 3",
              "county": "sample string 4",
              "city": "sample string 5",
              "address_line1": "sample string 6",
              "address_line2": "sample string 7"
            },
            "flight": {
              "airport_code": "sample string 1",
              "airline_code": "sample string 2",
              "flight_number": "sample string 3",
              "tail_number": "sample string 4",
              "terminal": "sample string 5",
              "gateway": "sample string 6",
              "meet_option": "curbside",
              "departs_from_or_arrives_to": "sample string 7",
              "departure_at_or_arrival_at": "2017-07-17T14:49:41"
            },
            "cruise": {
              "seaport_code": "sample string 1",
              "cruise_ship_name": "sample string 2",
              "cruise_line_name": "sample string 3",
              "departs_from_or_arrives_to": "sample string 4",
              "departure_at_or_arrival_at": "2017-07-17T14:49:41"
            },
            "location": {
              "latitude": 1.1,
              "longitude": 2.1
            }
          },
          "stops": [
            {
              "name": "sample string 1",
              "scheduled_arrival_at": "2017-07-17T14:49:41",
              "actual_arrival_at": "2017-07-17T14:49:41",
              "action": "pickup",
              "notes": "sample string 2",
              "one_line_address": "sample string 3",
              "address": {
                "country_code": "sample string 1",
                "state_code": "sample string 2",
                "postal_code": "sample string 3",
                "county": "sample string 4",
                "city": "sample string 5",
                "address_line1": "sample string 6",
                "address_line2": "sample string 7"
              },
              "flight": {
                "airport_code": "sample string 1",
                "airline_code": "sample string 2",
                "flight_number": "sample string 3",
                "tail_number": "sample string 4",
                "terminal": "sample string 5",
                "gateway": "sample string 6",
                "meet_option": "curbside",
                "departs_from_or_arrives_to": "sample string 7",
                "departure_at_or_arrival_at": "2017-07-17T14:49:41"
              },
              "cruise": {
                "seaport_code": "sample string 1",
                "cruise_ship_name": "sample string 2",
                "cruise_line_name": "sample string 3",
                "departs_from_or_arrives_to": "sample string 4",
                "departure_at_or_arrival_at": "2017-07-17T14:49:41"
              },
              "location": {
                "latitude": 1.1,
                "longitude": 2.1
              }
            }
          ],
          "dropoff": {
            "name": "sample string 1",
            "scheduled_arrival_at": "2017-07-17T14:49:41",
            "actual_arrival_at": "2017-07-17T14:49:41",
            "action": "pickup",
            "notes": "sample string 2",
            "one_line_address": "sample string 3",
            "address": {
              "country_code": "sample string 1",
              "state_code": "sample string 2",
              "postal_code": "sample string 3",
              "county": "sample string 4",
              "city": "sample string 5",
              "address_line1": "sample string 6",
              "address_line2": "sample string 7"
            },
            "flight": {
              "airport_code": "sample string 1",
              "airline_code": "sample string 2",
              "flight_number": "sample string 3",
              "tail_number": "sample string 4",
              "terminal": "sample string 5",
              "gateway": "sample string 6",
              "meet_option": "curbside",
              "departs_from_or_arrives_to": "sample string 7",
              "departure_at_or_arrival_at": "2017-07-17T14:49:41"
            },
            "cruise": {
              "seaport_code": "sample string 1",
              "cruise_ship_name": "sample string 2",
              "cruise_line_name": "sample string 3",
              "departs_from_or_arrives_to": "sample string 4",
              "departure_at_or_arrival_at": "2017-07-17T14:49:41"
            },
            "location": {
              "latitude": 1.1,
              "longitude": 2.1
            }
          },
          "charges": [
            {
              "rate_id": 1,
              "name": "sample string 2",
              "rate_type": "fixed",
              "rate_group": "base_rate",
              "is_vat_tax": true,
              "is_primary": true,
              "unit_value": 1.0,
              "unit_count": 1.0,
              "total_value": 5.0
            }
          ]
        } 

+ Response 200 (application/json)
    + Headers 
        Content-Type: application/json; charset=utf-8 
    + Body 
        {
          "charges": [
            {
              "rate_id": 1,
              "name": "sample string 2",
              "rate_type": "fixed",
              "rate_group": "base_rate",
              "is_vat_tax": true,
              "is_primary": true,
              "unit_value": 1.0,
              "unit_count": 1.0,
              "total_value": 5.0
            }
          ],
          "total_amount": 1.0,
          "fixed_rates": [
            {
              "description": "sample string 1",
              "vehicle_type": {
                "id": 1,
                "code": "sample string 2",
                "name": "sample string 3"
              },
              "rewritten_charges": [
                {
                  "rate_id": 1,
                  "name": "sample string 2",
                  "rate_type": "fixed",
                  "rate_group": "base_rate",
                  "is_vat_tax": true,
                  "is_primary": true,
                  "unit_value": 1.0,
                  "unit_count": 1.0,
                  "total_value": 5.0
                }
              ],
              "total_amount": 2.0
            }
          ],
          "hourly_rates": [
            {
              "applied_duration": "00:00:00.1234567",
              "description": "sample string 1",
              "vehicle_type": {
                "id": 1,
                "code": "sample string 2",
                "name": "sample string 3"
              },
              "rewritten_charges": [
                {
                  "rate_id": 1,
                  "name": "sample string 2",
                  "rate_type": "fixed",
                  "rate_group": "base_rate",
                  "is_vat_tax": true,
                  "is_primary": true,
                  "unit_value": 1.0,
                  "unit_count": 1.0,
                  "total_value": 5.0
                }
              ],
              "total_amount": 2.0
            }
          ],
          "distance_rates": [
            {
              "applied_distance": 1.0,
              "description": "sample string 1",
              "vehicle_type": {
                "id": 1,
                "code": "sample string 2",
                "name": "sample string 3"
              },
              "rewritten_charges": [
                {
                  "rate_id": 1,
                  "name": "sample string 2",
                  "rate_type": "fixed",
                  "rate_group": "base_rate",
                  "is_vat_tax": true,
                  "is_primary": true,
                  "unit_value": 1.0,
                  "unit_count": 1.0,
                  "total_value": 5.0
                }
              ],
              "total_amount": 2.0
            }
          ],
          "passenger_rates": [
            {
              "applied_passenger_count": 1,
              "description": "sample string 1",
              "vehicle_type": {
                "id": 1,
                "code": "sample string 2",
                "name": "sample string 3"
              },
              "rewritten_charges": [
                {
                  "rate_id": 1,
                  "name": "sample string 2",
                  "rate_type": "fixed",
                  "rate_group": "base_rate",
                  "is_vat_tax": true,
                  "is_primary": true,
                  "unit_value": 1.0,
                  "unit_count": 1.0,
                  "total_value": 5.0
                }
              ],
              "total_amount": 2.0
            }
          ],
          "customer_account_rates": [
            {
              "description": "sample string 1",
              "vehicle_type": {
                "id": 1,
                "code": "sample string 2",
                "name": "sample string 3"
              },
              "rewritten_charges": [
                {
                  "rate_id": 1,
                  "name": "sample string 2",
                  "rate_type": "fixed",
                  "rate_group": "base_rate",
                  "is_vat_tax": true,
                  "is_primary": true,
                  "unit_value": 1.0,
                  "unit_count": 1.0,
                  "total_value": 5.0
                }
              ],
              "total_amount": 2.0
            }
          ],
          "mandatory_miscellaneous_fees": [
            {
              "description": "sample string 1",
              "vehicle_type": {
                "id": 1,
                "code": "sample string 2",
                "name": "sample string 3"
              },
              "rewritten_charges": [
                {
                  "rate_id": 1,
                  "name": "sample string 2",
                  "rate_type": "fixed",
                  "rate_group": "base_rate",
                  "is_vat_tax": true,
                  "is_primary": true,
                  "unit_value": 1.0,
                  "unit_count": 1.0,
                  "total_value": 5.0
                }
              ],
              "total_amount": 2.0
            }
          ],
          "optional_miscellaneous_fees": [
            {
              "description": "sample string 1",
              "vehicle_type": {
                "id": 1,
                "code": "sample string 2",
                "name": "sample string 3"
              },
              "rewritten_charges": [
                {
                  "rate_id": 1,
                  "name": "sample string 2",
                  "rate_type": "fixed",
                  "rate_group": "base_rate",
                  "is_vat_tax": true,
                  "is_primary": true,
                  "unit_value": 1.0,
                  "unit_count": 1.0,
                  "total_value": 5.0
                }
              ],
              "total_amount": 2.0
            }
          ],
          "promotion_rates": [
            {
              "description": "sample string 1",
              "vehicle_type": {
                "id": 1,
                "code": "sample string 2",
                "name": "sample string 3"
              },
              "rewritten_charges": [
                {
                  "rate_id": 1,
                  "name": "sample string 2",
                  "rate_type": "fixed",
                  "rate_group": "base_rate",
                  "is_vat_tax": true,
                  "is_primary": true,
                  "unit_value": 1.0,
                  "unit_count": 1.0,
                  "total_value": 5.0
                }
              ],
              "total_amount": 2.0
            }
          ],
          "promotion_discounts": [
            {
              "description": "sample string 1",
              "vehicle_type": {
                "id": 1,
                "code": "sample string 2",
                "name": "sample string 3"
              },
              "rewritten_charges": [
                {
                  "rate_id": 1,
                  "name": "sample string 2",
                  "rate_type": "fixed",
                  "rate_group": "base_rate",
                  "is_vat_tax": true,
                  "is_primary": true,
                  "unit_value": 1.0,
                  "unit_count": 1.0,
                  "total_value": 5.0
                }
              ],
              "total_amount": 2.0
            }
          ]
        } 

## Group Reservations

## Get Reservations  [/Reservation/get]

### Get Reservation [GET /companies/{company_alias}/reservations/{id}] 

+ Parameters 
    + company_alias: (required, string)
    + id: `1` (required, int)

+ Request 

    + Headers 

            Content-Type: application/json 
            Authorization: bearer {access_token}

+ Response 200 

    + Headers 

            Content-Type: application/json 

    + Body 

{
  "id": 57414239,
  "company_alias_id": "testlimo",
  "company_alias": {
        "name": "test limo"
  },
  "state": "unassigned",
  "state_reason": "undefined",
  "status_id": 118728,
  "status": {
    "name": "Unassigned",
    "color": "#FFFFCC"
  },
  "created_at": "2017-04-14T18:25:09",
  "created_by": "admin",
  "closed_at": "2017-09-14T12:24:14",
  "closed_by": "admin",
  "vehicle_type": {
    "name": "BMW"
  },
  "service_type": {
    "name": "Airport Departure"
  },
  "payment_type": {
    "name": "Credit Card",
    "method": "other"
  },
  "invoice_id":1,
  "primary_agent": {},
  "secondary_agent": {},
  "rental_agreement": {
    "name": "Rental 1"
  },
  "primary_driver": {
    "first_name": "Cleder",
    "last_name": "Cueto"
  },
  "secondary_driver": {
    "first_name": "Richard",
    "last_name": "Goodwin"
  },
  "primary_car": {
    "license_plate": "LAL 44",
    "car_make": "Lincoln",
    "color": "BLACK"
  },
  "secondary_car": {
    "license_plate": "LAL 11",
    "car_make": "Cadillac",
    "color": "BLACK"
  },
  "preferred_vehicle_type": {
    "name": "Tesla Model S"
  },
  "preferred_primary_driver": {
    "first_name": "Alvin",
    "last_name": "Swanson",
    "phone": "+18008679878"
  },
  "preferred_secondary_driver": {
    "first_name": "Vernon",
    "last_name": "Poovey"
  },
  "origination_status": "was_created_in_house",
  "confirmation_number": "39666",
  "scheduled_pickup_at": "2017-04-14T18:27:00",
  "scheduled_dropoff_at": "2017-04-14T20:16:00",
  "scheduled_duration_in_minutes": 151,
  "payment_terms": "due_upon_receipt",
  "payment_status": "unpaid",
  "luggage_count": 1,
  "passenger_count": 1,
  "infant_child_seat_count": 2,
  "booster_child_seat_count": 1,
  "toddler_child_seat_count": 1,
  "is_handicap_access_required": true,
  "pickup": {
    "name": "Name of Address",
    "scheduled_arrival_at": "2017-04-15T12:54:00",
    "action": "pickup",
    "notes": "pickup notes",
    "address": {
      "country_code": "US",
      "state_code": "NY",
      "postal_code": "11354",
      "city": "Queens",
      "address_line1": "123 Main St"
    },
    "location": {
      "latitude": 40.7624474,
      "longitude": -73.83165
    }
  },
  "stops": [
    {
      "name": "Amtrak: Back Bay Station",
      "action": "stop",
      "address": {
        "country_code": "US",
        "state_code": "MA",
        "postal_code": "02116",
        "city": "Boston",
        "address_line1": "145 Dartmouth St"
      },
      "location": {
        "latitude": 42.34734,
        "longitude": -71.075386
      }
    }
  ],
  "dropoff": {
    "name": "John F. Kennedy International Airport",
    "scheduled_arrival_at": "2017-04-15T07:03:00",
    "action": "dropoff",
    "address": {
      "state_code": "NY"
    },
    "flight": {
      "airport_code": "JFK",
      "airline_code": "AA",
      "flight_number": "9070",
      "tail_number": "A7-E3",
      "terminal": "4",
      "gateway": "A7",
      "meet_option": "curbside",
      "departure_from_or_arrival_to": "AUH",
      "departure_at_or_arrival_at": "2017-04-15T07:23:00"
    },
    "location": {
      "latitude": 40.63975,
      "longitude": -73.77892
    }
  },
  "booking_contact_account_id": 1003427363,
  "booking_contact": {
    "first_name": "David",
    "last_name": "Stewart",
    "email": "email@sample.com",
    "phone": "+380930000000"
  },
  "billing_contact_account_id": 1001351994,
  "billing_contact": {
    "first_name": "Jerry",
    "last_name": "Harris"
  },
  "billing_contact_company_id": 654,
  "billing_contact_company": {
    "name": "KFC"
  },
  "passengers": [
    {
      "passenger_account_id": 1002334155,
      "passenger": {
        "first_name": "Christina",
        "last_name": "Brady",
        "email": "email@sample.com",
        "phone": "+380930000000"
      }
    }
  ],
  "vehicle_type_id": 14421,
  "service_type_id": 88301,
  "credit_card_id": 7019493,
  "credit_card": {
      "card_number_first_digit": "4",
      "card_number_last_digits": "1111",
      "card_network": "visa",
      "holder_name": "Josh Smith",
      "holder_type": "personal",
      "expiration_year": 2021,
      "expiration_month": 5,
      "billing_address": {
          "country_code": "US",
          "state_code": "TX",
          "postal_code": "1245",
          "city": "Dallas",
          "address_line1": "123 Some Street",
          "address_line2": "24 ap"
      },
      "notes": "Some CC notes"
  },
  "payment_type_id": 1,
  "paid_amount": 0.0,
  "authorized_amount": 0.0,
  "total_amount": 196.89,
  "primary_agent_id": 2,
  "primary_agent_reward": {
    "type": "amout",
    "amount": 20.0
  },
  "secondary_agent_id": 35,
  "secondary_agent_reward": {
    "type": "percentage",
    "amount": 3.0
  },
  "rental_agreement_id": 16493,
  "primary_driver_id": 138,
  "secondary_driver_id": 158,
  "primary_car_id": 75,
  "secondary_car_id": 73,
  "charges": [
    {
      "rate_id": 2,
      "name": "Per Hour",
      "rate_type": "multiplier",
      "rate_group": "base_rate",
      "is_vat_tax": false,
      "is_primary": true,
      "unit_value": 15.0,
      "unit_count": 1.0,
      "total_value": 15.0
    }
  ],
  "preferred_vehicle_type_id": 49328,
  "preferred_primary_driver_id": 154,
  "preferred_secondary_driver_id": 153,
  "miscellaneous": {
    "is_greeting_sign_required": true,
    "greeting_sign_notes": "Greeting notes",
    "occasion": "Corporate Travel",
    "group_name": "Amabella",
    "referral_source": "Website",
    "arranged_by": "INET",
    "voucher_number": "7789652"
  },
  "incoming_reference_number": "33467",
  "incoming_partner_reservation_id": 23423,
  "incoming_partner_reservation": {
        "charges": {
            "base_charge": 135.0,
            "hourly_charge": 20.0,
            "passenger_charge": 10.0,
            "distance_charge": 2.0,
            "gratuity_charge": 3.0,
            "extra_gratuity": 5.0,
            "stops_charge": 7.0,
            "tolls": 1.0,
            "surcharges": 4.0,
            "parking": 5.0,
            "miscellaneous_charge": 2.0,
            "discount": 1.0,
            "taxes": 3.0,
            "other_charges": 1.0
        }
   },
   "outgoing_reference_number": "41534",
   "outgoing_partner_reservation_id": 34626,
   "outgoing_partner_reservation": {
        "driver": {
            "first_name": "John",
            "last_name": "Silver",
            "phone": "+380991122333"
        },
        "car": {
            "license_plate": "LAL 44",
            "make": "Cadillac",
            "year": 2000,
            "model": "DTS",
            "color": "BLACK"
        },
        "charges": {
            "base_charge": 135.0,
            "hourly_charge": 20.0,
            "passenger_charge": 10.0,
            "distance_charge": 2.0,
            "gratuity_charge": 3.0,
            "extra_gratuity": 5.0,
            "stops_charge": 7.0,
            "tolls": 1.0,
            "surcharges": 4.0,
            "parking": 5.0,
            "miscellaneous_charge": 2.0,
            "discount": 1.0,
            "taxes": 3.0,
            "other_charges": 1.0
        }
    }
}

### Get New Reservations [GET /companies/{company_alias}/reservations/new?from={from}&to={to}&search_in={search_in}&search_for={search_for}&is_paid={is_paid}&sort_by={sort_by}&sort_order={sort_order}&page_index={page_index}&page_size={page_size}] 

+ Parameters 
    + company_alias: (required, string)
    + from: (optional, string)
    + to: (optional, string)
    + search_in: (optional, string)
    + search_for: (optional, string)
    + is_paid: (optional, boolean)
    + sort_by: (optional, string)
    + sort_order: (optional, string)
    + page_index: 1 (optional, int)
    + page_size: 20 (optional, int)

+ Request 

    + Headers 

            Content-Type: application/json 
            Authorization: bearer {access_token}

+ Response 200 

    + Headers 

            Content-Type: application/json 

    + Body 

            {
              "total_count": 1,
              "items": [
                {
                  "id": 57414239,
                  "confirmation_number": "39666",
                  "company_alias_id": "testlimo",
                  "company_alias": {
                        "name": "test limo"
                  },
                  "scheduled_duration_in_minutes": 151,
                  "scheduled_pickup_at": "2017-04-14T18:27:00",
                  "scheduled_dropoff_at": "2017-04-14T20:16:00",
                  "state": "unassigned",
                  "state_reason": "undefined",
                  "pickup": {
                    "name": "Name of Address",
                    "scheduled_arrival_at": "2017-04-15T12:54:00",
                    "action": "pickup",
                    "notes": "pickup notes",
                    "address": {
                      "country_code": "US",
                      "state_code": "NY",
                      "postal_code": "11354",
                      "city": "Queens",
                      "address_line1": "123 Main St"
                    },
                    "location": {
                      "latitude": 40.7624474,
                      "longitude": -73.83165
                    }
                  },
                  "dropoff": {
                    "name": "John F. Kennedy International Airport",
                    "scheduled_arrival_at": "2017-04-15T07:03:00",
                    "action": "dropoff",
                    "address": {
                      "state_code": "NY"
                    },
                    "flight": {
                      "airport_code": "JFK",
                      "airline_code": "AA",
                      "flight_number": "9070",
                      "tail_number": "A7-E3",
                      "terminal": "4",
                      "gateway": "A7",
                      "meet_option": "curbside",
                      "departs_from_or_arrives_to": "AUH",
                      "departure_at_or_arrival_at": "2017-04-15T07:23:00"
                    },
                    "location": {
                      "latitude": 40.63975,
                      "longitude": -73.77892
                    }
                  },
                  "primary_driver_id": 138,
                  "primary_driver": {
                    "first_name": "William",
                    "last_name": "Vegas"
                  },
                  "primary_car_id": 75,
                  "primary_car": {
                    "license_plate": "LAL 44",
                    "car_make": "Lincoln",
                    "color": "BLACK"
                  },
                  "passenger_account_id": 1002334155,
                  "passenger": {
                    "first_name": "Issue",
                    "last_name": "314",
                    "email": "email@sample.com",
                    "phone": "+380930000000"
                  },
                  "total_amount": 196.89,
                  "payment_type_id": 1,
                  "payment_type": {
                    "name": "Credit Card",
                    "method": "other"
                  },
                  "vehicle_type_id": 14421,
                  "vehicle_type": {
                    "name": "BMW"
                  },
                  "created_at": "2017-04-14T18:25:09",
                  "created_by": "admin"
                }
              ]
            }



### Get In Progress Reservations [GET /companies/{company_alias}/reservations/in_progress?from={from}&to={to}&search_in={search_in}&search_for={search_for}&is_paid={is_paid}&sort_by={sort_by}&sort_order={sort_order}&page_index={page_index}&page_size={page_size}] 

+ Parameters 
    + company_alias: (required, string)
    + from: (optional, string)
    + to: (optional, string)
    + search_in: (optional, string)
    + search_for: (optional, string)
    + is_paid: (optional, boolean)
    + sort_by: (optional, string)
    + sort_order: (optional, string)
    + page_index: 1 (optional, int)
    + page_size: 20 (optional, int)

+ Request 

    + Headers 

            Content-Type: application/json 
            Authorization: bearer {access_token}

+ Response 200 

    + Headers 

            Content-Type: application/json 

    + Body 

            {
              "total_count": 1,
              "items": [
                {
                  "id": 57414239,
                  "confirmation_number": "39666",
                  "company_alias_id": "testlimo",
                  "company_alias": {
                        "name": "test limo"
                  },
                  "scheduled_duration_in_minutes": 151,
                  "scheduled_pickup_at": "2017-04-14T18:27:00",
                  "scheduled_dropoff_at": "2017-04-14T20:16:00",
                  "state": "assigned",
                  "state_reason": "undefined",
                  "pickup": {
                    "name": "Name of Address",
                    "scheduled_arrival_at": "2017-04-15T12:54:00",
                    "action": "pickup",
                    "notes": "pickup notes",
                    "address": {
                      "country_code": "US",
                      "state_code": "NY",
                      "postal_code": "11354",
                      "city": "Queens",
                      "address_line1": "123 Main St"
                    },
                    "location": {
                      "latitude": 40.7624474,
                      "longitude": -73.83165
                    }
                  },
                  "dropoff": {
                    "name": "John F. Kennedy International Airport",
                    "scheduled_arrival_at": "2017-04-15T07:03:00",
                    "action": "dropoff",
                    "address": {
                      "state_code": "NY"
                    },
                    "flight": {
                      "airport_code": "JFK",
                      "airline_code": "AA",
                      "flight_number": "9070",
                      "tail_number": "A7-E3",
                      "terminal": "4",
                      "gateway": "A7",
                      "meet_option": "curbside",
                      "departs_from_or_arrives_to": "AUH",
                      "departure_at_or_arrival_at": "2017-04-15T07:23:00"
                    },
                    "location": {
                      "latitude": 40.63975,
                      "longitude": -73.77892
                    }
                  },
                  "primary_driver_id": 138,
                  "primary_driver": {
                    "first_name": "William",
                    "last_name": "Vegas"
                  },
                  "primary_car_id": 75,
                  "primary_car": {
                    "license_plate": "LAL 44",
                    "car_make": "Lincoln",
                    "color": "BLACK"
                  },
                  "passenger_account_id": 1002334155,
                  "passenger": {
                    "first_name": "Issue",
                    "last_name": "314",
                    "email": "email@sample.com",
                    "phone": "+380930000000"
                  },
                  "total_amount": 196.89,
                  "payment_type_id": 1,
                  "payment_type": {
                    "name": "Credit Card",
                    "method": "other"
                  },
                  "vehicle_type_id": 14421,
                  "vehicle_type": {
                    "name": "BMW"
                  },
                  "created_at": "2017-04-14T18:25:09",
                  "created_by": "admin"
                }
              ]
            }



### Get Done And Unsettled Reservations [GET /companies/{company_alias}/reservations/done_and_unsettled?from={from}&to={to}&search_in={search_in}&search_for={search_for}&is_paid={is_paid}&sort_by={sort_by}&sort_order={sort_order}&page_index={page_index}&page_size={page_size}] 

+ Parameters
    + company_alias: (required, string)
    + from: (optional, string)
    + to: (optional, string)
    + search_in: (optional, string)
    + search_for: (optional, string)
    + is_paid: (optional, boolean)
    + sort_by: (optional, string)
    + sort_order: (optional, string)
    + page_index: 1 (optional, int)
    + page_size: 20 (optional, int)

+ Request 

    + Headers 

            Content-Type: application/json 
            Authorization: bearer {access_token}

+ Response 200 

    + Headers 

            Content-Type: application/json 

    + Body 

            {
              "total_count": 1,
              "items": [
                {
                  "id": 57414239,
                  "confirmation_number": "39666",
                  "company_alias_id": "testlimo",
                  "company_alias": {
                        "name": "test limo"
                  },
                  "scheduled_duration_in_minutes": 151,
                  "scheduled_pickup_at": "2017-04-14T18:27:00",
                  "scheduled_dropoff_at": "2017-04-14T20:16:00",
                  "state": "closed",
                  "state_reason": "undefined",
                  "pickup": {
                    "name": "Name of Address",
                    "scheduled_arrival_at": "2017-04-15T12:54:00",
                    "action": "pickup",
                    "notes": "pickup notes",
                    "address": {
                      "country_code": "US",
                      "state_code": "NY",
                      "postal_code": "11354",
                      "city": "Queens",
                      "address_line1": "123 Main St"
                    },
                    "location": {
                      "latitude": 40.7624474,
                      "longitude": -73.83165
                    }
                  },
                  "dropoff": {
                    "name": "John F. Kennedy International Airport",
                    "scheduled_arrival_at": "2017-04-15T07:03:00",
                    "action": "dropoff",
                    "address": {
                      "state_code": "NY"
                    },
                    "flight": {
                      "airport_code": "JFK",
                      "airline_code": "AA",
                      "flight_number": "9070",
                      "tail_number": "A7-E3",
                      "terminal": "4",
                      "gateway": "A7",
                      "meet_option": "curbside",
                      "departs_from_or_arrives_to": "AUH",
                      "departure_at_or_arrival_at": "2017-04-15T07:23:00"
                    },
                    "location": {
                      "latitude": 40.63975,
                      "longitude": -73.77892
                    }
                  },
                  "primary_driver_id": 138,
                  "primary_driver": {
                    "first_name": "William",
                    "last_name": "Vegas"
                  },
                  "primary_car_id": 75,
                  "primary_car": {
                    "license_plate": "LAL 44",
                    "car_make": "Lincoln",
                    "color": "BLACK"
                  },
                  "passenger_account_id": 1002334155,
                  "passenger": {
                    "first_name": "Issue",
                    "last_name": "314",
                    "email": "email@sample.com",
                    "phone": "+380930000000"
                  },
                  "total_amount": 196.89,
                  "payment_type_id": 1,
                  "payment_type": {
                    "name": "Credit Card",
                    "method": "other"
                  },
                  "vehicle_type_id": 14421,
                  "vehicle_type": {
                    "name": "BMW"
                  },
                  "created_at": "2017-04-14T18:25:09",
                  "created_by": "admin"
                }
              ]
            }



### Get Rejected Reservations [GET /companies/{company_alias}/reservations/rejected?from={from}&to={to}&search_in={search_in}&search_for={search_for}&is_paid={is_paid}&sort_by={sort_by}&sort_order={sort_order}&page_index={page_index}&page_size={page_size}]

+ Parameters
    + company_alias: (required, string)
    + from: (optional, string)
    + to: (optional, string)
    + search_in: (optional, string)
    + search_for: (optional, string)
    + is_paid: (optional, boolean)
    + sort_by: (optional, string)
    + sort_order: (optional, string)
    + page_index: 1 (optional, int)
    + page_size: 20 (optional, int)

+ Request

    + Headers

            Content-Type: application/json
            Authorization: bearer {access_token}

+ Response 200

    + Headers

            Content-Type: application/json

    + Body

            {
              "total_count": 1,
              "items": [
                {
                  "id": 57414239,
                  "confirmation_number": "39666",
                  "company_alias_id": "testlimo",
                  "company_alias": {
                        "name": "test limo"
                  },
                  "scheduled_duration_in_minutes": 151,
                  "scheduled_pickup_at": "2017-04-14T18:27:00",
                  "scheduled_dropoff_at": "2017-04-14T20:16:00",
                  "state": "unassigned",
                  "state_reason": "rejected_by_driver",
                  "pickup": {
                    "name": "Name of Address",
                    "scheduled_arrival_at": "2017-04-15T12:54:00",
                    "action": "pickup",
                    "notes": "pickup notes",
                    "address": {
                      "country_code": "US",
                      "state_code": "NY",
                      "postal_code": "11354",
                      "city": "Queens",
                      "address_line1": "123 Main St"
                    },
                    "location": {
                      "latitude": 40.7624474,
                      "longitude": -73.83165
                    }
                  },
                  "dropoff": {
                    "name": "John F. Kennedy International Airport",
                    "scheduled_arrival_at": "2017-04-15T07:03:00",
                    "action": "dropoff",
                    "address": {
                      "state_code": "NY"
                    },
                    "flight": {
                      "airport_code": "JFK",
                      "airline_code": "AA",
                      "flight_number": "9070",
                      "tail_number": "A7-E3",
                      "terminal": "4",
                      "gateway": "A7",
                      "meet_option": "curbside",
                      "departs_from_or_arrives_to": "AUH",
                      "departure_at_or_arrival_at": "2017-04-15T07:23:00"
                    },
                    "location": {
                      "latitude": 40.63975,
                      "longitude": -73.77892
                    }
                  },
                  "primary_driver_id": 138,
                  "primary_driver": {
                    "first_name": "William",
                    "last_name": "Vegas"
                  },
                  "primary_car_id": 75,
                  "primary_car": {
                    "license_plate": "LAL 44",
                    "car_make": "Lincoln",
                    "color": "BLACK"
                  },
                  "passenger_account_id": 1002334155,
                  "passenger": {
                    "first_name": "Issue",
                    "last_name": "314",
                    "email": "email@sample.com",
                    "phone": "+380930000000"
                  },
                  "total_amount": 196.89,
                  "payment_type_id": 1,
                  "payment_type": {
                    "name": "Credit Card",
                    "method": "other"
                  },
                  "vehicle_type_id": 14421,
                  "vehicle_type": {
                    "name": "BMW"
                  },
                  "created_at": "2017-04-14T18:25:09",
                  "created_by": "admin"
                }
              ]
            }
            

## Create Reservation  [/Reservation/create]

### Create Reservation [POST /companies/{company_alias}/reservations] 

+ Parameters 
    + company_alias: (required, string)

+ Request 
    + `pickup` (required, object) 
    + `pickup.flight` (optional, object) 
    + `pickup.flight.airport_code` (optional, string) 
        The value must be string with valid airport IATA or ICAO code. 
    + `pickup.flight.airline_code` (optional, string) 
        The value must be string with valid airline IATA or ICAO code. 
    + `pickup.flight.flight_number` (optional, string) 
        The value must be string with flight number digits. 
    + `pickup.flight.tail_number` (optional, string) 
        The value must be non-empty string with maximum length 10. 
    + `pickup.flight.terminal` (optional, string) 
        The value must be non-empty string with maximum length 50. 
    + `pickup.flight.gateway` (optional, string) 
        The value must be non-empty string with maximum length 50. 
    + `pickup.flight.meet_option` (optional, enum[string]) 
        + Members 
            + `curbside` 
            + `inside` 
    + `pickup.flight.departs_from_or_arrives_to` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `pickup.flight.departure_at_or_arrival_at` (optional, string) 
        The value must be the string with date&time in ISO 8601 format between '1753-01-01T00:00:00' and '9999-12-31T23:59:59'.
    + `pickup.name` (optional, string) 
        The value must be non-empty string with maximum length 500. 
    + `pickup.scheduled_arrival_at` (optional, string) 
        The value must be the string with date&time in ISO 8601 format between '1753-01-01T00:00:00' and '9999-12-31T23:59:59'.
    + `pickup.actual_arrival_at` (optional, string) 
        The value must be the string with date&time in ISO 8601 format between '1753-01-01T00:00:00' and '9999-12-31T23:59:59'.
    + `pickup.action` (optional, enum[string]) 
        + Members 
            + `pickup` 
            + `stop` 
            + `dropoff` 
    + `pickup.type` (optional, enum[string]) 
        + Members 
            + `address` 
            + `poi` 
            + `fbo` 
            + `airport` 
            + `seaport` 
    + `pickup.notes` (optional, string) 
        The value must be non-empty string with maximum length 4000. 
    + `pickup.one_line_address` (optional, string) 
    + `pickup.address` (required, object) 
    + `pickup.address.country_code` (optional, string) 
        The value must be non-empty string with maximum length 5. 
    + `pickup.address.state_code` (optional, string) 
        The value must be non-empty string with maximum length 5. 
    + `pickup.address.postal_code` (optional, string) 
        The value must be non-empty string with maximum length 15. 
    + `pickup.address.county` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `pickup.address.city` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `pickup.address.address_line1` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `pickup.address.address_line2` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `pickup.cruise` (optional, object) 
    + `pickup.cruise.seaport_code` (required, string) 
        The value must be non-empty string with maximum length 10. 
    + `pickup.cruise.cruise_ship_name` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `pickup.cruise.cruise_line_name` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `pickup.cruise.departs_from_or_arrives_to` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `pickup.cruise.departure_at_or_arrival_at` (optional, string) 
        The value must be the string with date&time in ISO 8601 format between '1753-01-01T00:00:00' and '9999-12-31T23:59:59'.
    + `pickup.location` (required, object) 
        Latitude and Longitude cannot be zero at the same time. 
    + `pickup.location.latitude` (optional, number) 
        The value must be the decimal which inclusive between -90 and 90. 
        + Default: `0` 
    + `pickup.location.longitude` (optional, number) 
        The value must be the decimal which inclusive between -180 and 180. 
        + Default: `0` 
    + `stops[]` (optional, array[object]) 
    + `stops[].flight` (optional, object) 
    + `stops[].flight.airport_code` (optional, string) 
        The value must be string with valid airport IATA or ICAO code. 
    + `stops[].flight.airline_code` (optional, string) 
        The value must be string with valid airline IATA or ICAO code. 
    + `stops[].flight.flight_number` (optional, string) 
        The value must be string with flight number digits. 
    + `stops[].flight.tail_number` (optional, string) 
        The value must be non-empty string with maximum length 10. 
    + `stops[].flight.terminal` (optional, string) 
        The value must be non-empty string with maximum length 50. 
    + `stops[].flight.gateway` (optional, string) 
        The value must be non-empty string with maximum length 50. 
    + `stops[].flight.meet_option` (optional, enum[string]) 
        + Members 
            + `curbside` 
            + `inside` 
    + `stops[].flight.departs_from_or_arrives_to` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `stops[].flight.departure_at_or_arrival_at` (optional, string) 
        The value must be the string with date&time in ISO 8601 format between '1753-01-01T00:00:00' and '9999-12-31T23:59:59'.
    + `stops[].name` (optional, string) 
        The value must be non-empty string with maximum length 500. 
    + `stops[].scheduled_arrival_at` (optional, string) 
        The value must be the string with date&time in ISO 8601 format between '1753-01-01T00:00:00' and '9999-12-31T23:59:59'.
    + `stops[].actual_arrival_at` (optional, string) 
        The value must be the string with date&time in ISO 8601 format between '1753-01-01T00:00:00' and '9999-12-31T23:59:59'.
    + `stops[].action` (optional, enum[string]) 
        + Members 
            + `pickup` 
            + `stop` 
            + `dropoff` 
    + `stops[].type` (optional, enum[string]) 
        + Members 
            + `address` 
            + `poi` 
            + `fbo` 
            + `airport` 
            + `seaport` 
    + `stops[].notes` (optional, string) 
        The value must be non-empty string with maximum length 4000. 
    + `stops[].one_line_address` (optional, string) 
    + `stops[].address` (required, object) 
    + `stops[].address.country_code` (optional, string) 
        The value must be non-empty string with maximum length 5. 
    + `stops[].address.state_code` (optional, string) 
        The value must be non-empty string with maximum length 5. 
    + `stops[].address.postal_code` (optional, string) 
        The value must be non-empty string with maximum length 15. 
    + `stops[].address.county` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `stops[].address.city` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `stops[].address.address_line1` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `stops[].address.address_line2` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `stops[].cruise` (optional, object) 
    + `stops[].cruise.seaport_code` (required, string) 
        The value must be non-empty string with maximum length 10. 
    + `stops[].cruise.cruise_ship_name` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `stops[].cruise.cruise_line_name` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `stops[].cruise.departs_from_or_arrives_to` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `stops[].cruise.departure_at_or_arrival_at` (optional, string) 
        The value must be the string with date&time in ISO 8601 format between '1753-01-01T00:00:00' and '9999-12-31T23:59:59'.
    + `stops[].location` (required, object) 
        Latitude and Longitude cannot be zero at the same time. 
    + `stops[].location.latitude` (optional, number) 
        The value must be the decimal which inclusive between -90 and 90. 
        + Default: `0` 
    + `stops[].location.longitude` (optional, number) 
        The value must be the decimal which inclusive between -180 and 180. 
        + Default: `0` 
    + `dropoff` (optional, object) 
    + `dropoff.flight` (optional, object) 
    + `dropoff.flight.airport_code` (optional, string) 
        The value must be string with valid airport IATA or ICAO code. 
    + `dropoff.flight.airline_code` (optional, string) 
        The value must be string with valid airline IATA or ICAO code. 
    + `dropoff.flight.flight_number` (optional, string) 
        The value must be string with flight number digits. 
    + `dropoff.flight.tail_number` (optional, string) 
        The value must be non-empty string with maximum length 10. 
    + `dropoff.flight.terminal` (optional, string) 
        The value must be non-empty string with maximum length 50. 
    + `dropoff.flight.gateway` (optional, string) 
        The value must be non-empty string with maximum length 50. 
    + `dropoff.flight.meet_option` (optional, enum[string]) 
        + Members 
            + `curbside` 
            + `inside` 
    + `dropoff.flight.departs_from_or_arrives_to` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `dropoff.flight.departure_at_or_arrival_at` (optional, string) 
        The value must be the string with date&time in ISO 8601 format between '1753-01-01T00:00:00' and '9999-12-31T23:59:59'.
    + `dropoff.name` (optional, string) 
        The value must be non-empty string with maximum length 500. 
    + `dropoff.scheduled_arrival_at` (optional, string) 
        The value must be the string with date&time in ISO 8601 format between '1753-01-01T00:00:00' and '9999-12-31T23:59:59'.
    + `dropoff.actual_arrival_at` (optional, string) 
        The value must be the string with date&time in ISO 8601 format between '1753-01-01T00:00:00' and '9999-12-31T23:59:59'.
    + `dropoff.action` (optional, enum[string]) 
        + Members 
            + `pickup` 
            + `stop` 
            + `dropoff` 
    + `dropoff.type` (optional, enum[string]) 
        + Members 
            + `address` 
            + `poi` 
            + `fbo` 
            + `airport` 
            + `seaport` 
    + `dropoff.notes` (optional, string) 
        The value must be non-empty string with maximum length 4000. 
    + `dropoff.one_line_address` (optional, string) 
    + `dropoff.address` (required, object) 
    + `dropoff.address.country_code` (optional, string) 
        The value must be non-empty string with maximum length 5. 
    + `dropoff.address.state_code` (optional, string) 
        The value must be non-empty string with maximum length 5. 
    + `dropoff.address.postal_code` (optional, string) 
        The value must be non-empty string with maximum length 15. 
    + `dropoff.address.county` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `dropoff.address.city` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `dropoff.address.address_line1` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `dropoff.address.address_line2` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `dropoff.cruise` (optional, object) 
    + `dropoff.cruise.seaport_code` (required, string) 
        The value must be non-empty string with maximum length 10. 
    + `dropoff.cruise.cruise_ship_name` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `dropoff.cruise.cruise_line_name` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `dropoff.cruise.departs_from_or_arrives_to` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `dropoff.cruise.departure_at_or_arrival_at` (optional, string) 
        The value must be the string with date&time in ISO 8601 format between '1753-01-01T00:00:00' and '9999-12-31T23:59:59'.
    + `dropoff.location` (required, object) 
        Latitude and Longitude cannot be zero at the same time. 
    + `dropoff.location.latitude` (optional, number) 
        The value must be the decimal which inclusive between -90 and 90. 
        + Default: `0` 
    + `dropoff.location.longitude` (optional, number) 
        The value must be the decimal which inclusive between -180 and 180. 
        + Default: `0` 
    + `credit_card` (optional, object) 
    + `credit_card.card_number` (required, string) 
        The value must be non-empty string with maximum length 20. 
    + `credit_card.holder_name` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `credit_card.holder_type` (optional, enum[string]) 
        + Members 
            + `unknown` 
            + `personal` 
            + `business` 
    + `credit_card.expiration_year` (required, number) 
        The valus should be number inclusive between 1 and 9999. 
    + `credit_card.expiration_month` (required, number) 
        The valus should be number inclusive between 1 and 12. 
    + `credit_card.billing_address` (optional, object) 
    + `credit_card.billing_address.country_code` (optional, string) 
        The value must be non-empty string with maximum length 5. 
    + `credit_card.billing_address.state_code` (optional, string) 
        The value must be non-empty string with maximum length 5. 
    + `credit_card.billing_address.postal_code` (optional, string) 
        The value must be non-empty string with maximum length 15. 
    + `credit_card.billing_address.county` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `credit_card.billing_address.city` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `credit_card.billing_address.address_line1` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `credit_card.billing_address.address_line2` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `credit_card.notes` (optional, string) 
        The value must be non-empty string with maximum length 500. 
    + `company_alias_id` (required, string) 
        The value must be non-empty string with maximum length 50. 
    + `confirmation_prefix` (optional, string) 
        The value must be non-empty string with maximum length 20.
    + `confirmation_suffix` (optional, string) 
        The value must be non-empty string with maximum length 20. 
    + `scheduled_pickup_at` (required, string) 
        The value must be the string with date&time in ISO 8601 format between '1753-01-01T00:00:00' and '9999-12-31T23:59:59'.
    + `actual_pickup_at` (optional, string) 
        The value must be the string with date&time in ISO 8601 format between '1753-01-01T00:00:00' and '9999-12-31T23:59:59'.
    + `scheduled_duration_in_minutes` (optional, number) 
        The value must be integer which is not less than 1. 
    + `payment_terms` (optional, enum[string]) 
        + Members 
            + `due_upon_receipt` 
            + `net10_days` 
            + `net15_days` 
            + `net30_days` 
            + `net45_days` 
            + `net60_days` 
            + `net90_days` 
            + `net120_days` 
            + `net180_days` 
            + `net365_days` 
    + `payment_status` (optional, enum[string]) 
        + Members 
            + `unpaid` 
            + `paid` 
            + `billed` 
            + `collect` 
    + `luggage_count` (optional, number) 
        The value must be integer which is not less than 0. 
        + Default: `0` 
    + `passenger_count` (required, number) 
        The value must be integer which is not less than 1. 
    + `infant_child_seat_count` (optional, number) 
        The value must be integer which is not less than 0. 
        + Default: `0` 
    + `booster_child_seat_count` (optional, number) 
        The value must be integer which is not less than 0. 
        + Default: `0` 
    + `toddler_child_seat_count` (optional, number) 
        The value must be integer which is not less than 0. 
        + Default: `0` 
    + `is_handicap_access_required` (optional, boolean) 
        + Default: `false` 
    + `booking_contact_account_id` (optional, number) 
        The value must be integer which is not less than 1. 
    + `booking_contact` (optional, object) 
    + `booking_contact.first_name` (optional, string) 
        The value must be non-empty string with maximum length 50. 
    + `booking_contact.last_name` (optional, string) 
        The value must be non-empty string with maximum length 50. 
    + `booking_contact.email` (optional, string) 
        The value must be string with email address. 
        The value must be non-empty string with maximum length 255. 
    + `booking_contact.phone` (optional, string) 
        The value must be a string with a existing phone number in E.164 format. 
    + `billing_contact_account_id` (optional, number) 
        The value must be integer which is not less than 1. 
    + `billing_contact_account_number` (optional, string) 
        The value must be non-empty string with maximum length 50. 
    + `billing_contact_company_id` (optional, number) 
    + `billing_contact_company` (optional, object) 
    + `billing_contact_company.name` (required, string) 
        The value must be non-empty string with maximum length 150. 
    + `billing_contact` (optional, object) 
    + `billing_contact.first_name` (optional, string) 
        The value must be non-empty string with maximum length 50. 
    + `billing_contact.last_name` (optional, string) 
        The value must be non-empty string with maximum length 50. 
    + `billing_contact.email` (optional, string) 
        The value must be string with email address. 
        The value must be non-empty string with maximum length 255. 
    + `billing_contact.phone` (optional, string) 
        The value must be a string with a existing phone number in E.164 format. 
    + `passengers[]` (required, array[object]) 
        The count of elements should be greater or equals to 1. 
    + `passengers[].passenger_account_id` (optional, number) 
        The value must be integer which is not less than 1. 
    + `passengers[].passenger` (optional, object) 
    + `passengers[].passenger.first_name` (optional, string) 
        The value must be non-empty string with maximum length 50. 
    + `passengers[].passenger.last_name` (optional, string) 
        The value must be non-empty string with maximum length 50. 
    + `passengers[].passenger.email` (optional, string) 
        The value must be string with email address. 
        The value must be non-empty string with maximum length 255. 
    + `passengers[].passenger.phone` (optional, string) 
        The value must be a string with a existing phone number in E.164 format. 
    + `vehicle_type_id` (optional, number) 
        The value must be integer which is not less than 1. 
    + `service_type_id` (optional, number) 
        The value must be integer which is not less than 1. 
    + `credit_card_id` (optional, number) 
        The value must be integer which is not less than 1. 
    + `payment_type_id` (optional, number) 
        The value must be integer which is not less than 1. 
    + `currency_code` (optional, string) 
        The value must be string with valid ISO 4217 currency alpha code. 
    + `primary_agent_id` (optional, number) 
        The value must be integer which is not less than 1. 
    + `primary_agent_reward` (optional, object) 
    + `primary_agent_reward.type` (optional, enum[string]) 
        + Members 
            + `percentage` 
            + `amout` 
    + `primary_agent_reward.amount` (optional, number) 
        The value must be non-negative decimal number. 
        + Default: `0` 
    + `secondary_agent_id` (optional, number) 
        The value must be integer which is not less than 1. 
    + `secondary_agent_reward` (optional, object) 
    + `secondary_agent_reward.type` (optional, enum[string]) 
        + Members 
            + `percentage` 
            + `amout` 
    + `secondary_agent_reward.amount` (optional, number) 
        The value must be non-negative decimal number. 
        + Default: `0` 
    + `rental_agreement_id` (optional, number) 
        The value must be integer which is not less than 1. 
    + `primary_driver_id` (optional, number) 
        The value must be integer which is not less than 1. 
    + `secondary_driver_id` (optional, number) 
        The value must be integer which is not less than 1. 
    + `primary_car_id` (optional, number) 
        The value must be integer which is not less than 1. 
    + `secondary_car_id` (optional, number) 
        The value must be integer which is not less than 1. 
    + `charges[]` (optional, array[object]) 
    + `charges[].rate_id` (required, number) 
        The value must be integer which is not less than 1. 
    + `charges[].name` (required, string) 
        The value must be non-empty string with maximum length 50. 
    + `charges[].unit_value` (optional, number) 
        The value must be non-negative decimal number. 
    + `charges[].unit_count` (optional, number) 
        The value must be non-negative decimal number. 
    + `preferred_vehicle_type_id` (optional, number) 
        The value must be integer which is not less than 1. 
    + `preferred_primary_driver_id` (optional, number) 
        The value must be integer which is not less than 1. 
    + `preferred_secondary_driver_id` (optional, number) 
        The value must be integer which is not less than 1. 
    + `miscellaneous` (optional, object) 
    + `miscellaneous.is_greeting_sign_required` (optional, boolean) 
        + Default: `false` 
    + `miscellaneous.greeting_sign_notes` (optional, string) 
        The value must be non-empty string with maximum length 2000. 
    + `miscellaneous.occasion` (optional, string) 
        The value must be non-empty string with maximum length 50. 
    + `miscellaneous.group_name` (optional, string) 
        The value must be non-empty string with maximum length 50. 
    + `miscellaneous.referral_source` (optional, string) 
        The value must be non-empty string with maximum length 50. 
    + `miscellaneous.arranged_by` (optional, string) 
        The value must be non-empty string with maximum length 50. 
    + `miscellaneous.voucher_number` (optional, string) 
        The value must be non-empty string with maximum length 50.
    + `incoming_reference_number` (optional, string) 
        The value must be non-empty string with maximum length 50. 
    + `outgoing_reference_number` (optional, string) 
        The value must be non-empty string with maximum length 50.    
   
    + Headers 

            Content-Type: application/json 
            Authorization: bearer {access_token} 

    + Body 

{
  "company_alias_id": "testlimo",
  "confirmation_prefix": "123",
  "confirmation_suffix": "123",
  "scheduled_pickup_at": "2017-04-14T18:27:00",
  "actual_pickup_at": "2017-04-14T18:28:00",
  "scheduled_duration_in_minutes": "122",
  "pickup": {
    "name": "Name of Address",
    "scheduled_arrival_at": "2017-04-15T12:54:00",
    "actual_arrival_at": "2017-04-15T12:55:00",
    "action": "pickup",
    "notes": "pickup notes",
    "address": {
      "country_code": "US",
      "state_code": "NY",
      "postal_code": "11354",
      "city": "Queens",
      "address_line1": "123 Main St"
    },
    "location": {
      "latitude": 40.7624474,
      "longitude": -73.83165
    }
  },
  "stops": [
    {
      "name": "Amtrak: Back Bay Station",
      "action": "stop",
      "address": {
        "country_code": "US",
        "state_code": "MA",
        "postal_code": "02116",
        "city": "Boston",
        "address_line1": "145 Dartmouth St"
      },
      "location": {
        "latitude": 42.34734,
        "longitude": -71.075386
      }
    }
  ],
  "dropoff": {
    "name": "John F. Kennedy International Airport",
    "scheduled_arrival_at": "2017-04-15T07:03:00",
    "action": "dropoff",
    "type": "airport",
    "address": {
      "state_code": "NY"
    },
    "flight": {
      "airport_code": "JFK",
      "airline_code": "AA",
      "flight_number": "9070",
      "tail_number": "A7-E3",
      "terminal": "4",
      "gateway": "A7",
      "meet_option": "curbside",
      "departure_from_or_arrival_to": "AUH",
      "departure_at_or_arrival_at": "2017-04-15T07:23:00"
    },
    "location": {
      "latitude": 40.63975,
      "longitude": -73.77892
    }
  },
  "payment_terms": "due_upon_receipt",
  "payment_status": "unpaid",
  "luggage_count": 1,
  "passenger_count": 1,
  "infant_child_seat_count": 2,
  "booster_child_seat_count": 1,
  "toddler_child_seat_count": 1,
  "is_handicap_access_required": true,
  "booking_contact_account_id": 1003427363,
  "booking_contact": {
    "first_name": "David",
    "last_name": "Stewart",
    "email": "email@sample.com",
    "phone": "+380930000000"
  },
  "billing_contact_account_id": 1001351994,
  "billing_contact_company_id": 654,
  "billing_contact": {
    "first_name": "Jerry",
    "last_name": "Harris",
    "email": "email2@sample.com",
    "phone": "+380930000001"
  },
  "passengers": [
    {
      "passenger_account_id": 1002334155,
      "passenger": {
        "first_name": "Christina",
        "last_name": "Brady",
        "email": "email@sample.com",
        "phone": "+380930000000"
      }
    }
  ],
  "vehicle_type_id": 14421,
  "service_type_id": 88301,
  "credit_card_id": 7019493,
  "payment_type_id": 1,
  "currency_code": "USD",
  "primary_agent_id": 2,
  "primary_agent_reward": {
    "type": "amout",
    "amount": 20.0
  },
  "secondary_agent_id": 35,
  "secondary_agent_reward": {
    "type": "percentage",
    "amount": 3.0
  },
  "rental_agreement_id": 16493,
  "primary_driver_id": 138,
  "secondary_driver_id": 158,
  "primary_car_id": 75,
  "secondary_car_id": 73,
  "charges": [
    {
      "rate_id": 2,
      "name": "Per Hour",
      "unit_value": 15.0,
      "unit_count": 1.0
    }
  ],
  "preferred_vehicle_type_id": 49328,
  "preferred_primary_driver_id": 154,
  "preferred_secondary_driver_id": 153,
  "miscellaneous": {
    "is_greeting_sign_required": true,
    "greeting_sign_notes": "Greeting notes",
    "occasion": "Corporate Travel",
    "group_name": "Amabella",
    "referral_source": "Website",
    "arranged_by": "INET",
    "voucher_number": "7789652"
  },
  "incoming_reference_number": "12345",
  "outgoing_reference_number": "23456"
}

+ Response 200 

    + Headers 

            Content-Type: application/json 

    + Body 

{
  "id": 57414239,
  "company_alias_id": "testlimo",
  "company_alias": {
        "name": "test limo"
  },
  "state": "unassigned",
  "state_reason": "undefined",
  "status_id": 118728,
  "status": {
    "name": "Unassigned",
    "color": "#FFFFCC"
  },
  "created_at": "2017-04-14T18:25:09",
  "created_by": "admin",
  "closed_at": "2017-09-14T12:24:14",
  "closed_by": "admin",
  "vehicle_type": {
    "name": "BMW"
  },
  "service_type": {
    "name": "Airport Departure"
  },
  "payment_type": {
    "name": "Credit Card",
    "method": "other"
  },
  "primary_agent": {},
  "secondary_agent": {},
  "rental_agreement": {
    "name": "Rental 1"
  },
  "primary_driver": {
    "first_name": "Cleder",
    "last_name": "Cueto"
  },
  "secondary_driver": {
    "first_name": "Richard",
    "last_name": "Goodwin"
  },
  "primary_car": {
    "license_plate": "LAL 44",
    "car_make": "Lincoln",
    "color": "BLACK"
  },
  "secondary_car": {
    "license_plate": "LAL 11",
    "car_make": "Cadillac",
    "color": "BLACK"
  },
  "preferred_vehicle_type": {
    "name": "Tesla Model S"
  },
  "preferred_primary_driver": {
    "first_name": "Alvin",
    "last_name": "Swanson",
    "phone": "+18008679878"
  },
  "preferred_secondary_driver": {
    "first_name": "Vernon",
    "last_name": "Poovey"
  },
  "origination_status": "was_created_in_house",
  "confirmation_number": "39666",
  "scheduled_pickup_at": "2017-04-14T18:27:00",
  "scheduled_dropoff_at": "2017-04-14T20:16:00",
  "scheduled_duration_in_minutes": 151,
  "payment_terms": "due_upon_receipt",
  "payment_status": "unpaid",
  "luggage_count": 1,
  "passenger_count": 1,
  "infant_child_seat_count": 2,
  "booster_child_seat_count": 1,
  "toddler_child_seat_count": 1,
  "is_handicap_access_required": true,
  "pickup": {
    "name": "Name of Address",
    "scheduled_arrival_at": "2017-04-15T12:54:00",
    "action": "pickup",
    "notes": "pickup notes",
    "address": {
      "country_code": "US",
      "state_code": "NY",
      "postal_code": "11354",
      "city": "Queens",
      "address_line1": "123 Main St"
    },
    "location": {
      "latitude": 40.7624474,
      "longitude": -73.83165
    }
  },
  "stops": [
    {
      "name": "Amtrak: Back Bay Station",
      "action": "stop",
      "address": {
        "country_code": "US",
        "state_code": "MA",
        "postal_code": "02116",
        "city": "Boston",
        "address_line1": "145 Dartmouth St"
      },
      "location": {
        "latitude": 42.34734,
        "longitude": -71.075386
      }
    }
  ],
  "dropoff": {
    "name": "John F. Kennedy International Airport",
    "scheduled_arrival_at": "2017-04-15T07:03:00",
    "action": "dropoff",
    "type": "airport",
    "address": {
      "state_code": "NY"
    },
    "flight": {
      "airport_code": "JFK",
      "airline_code": "AA",
      "flight_number": "9070",
      "tail_number": "A7-E3",
      "terminal": "4",
      "gateway": "A7",
      "meet_option": "curbside",
      "departure_from_or_arrival_to": "AUH",
      "departure_at_or_arrival_at": "2017-04-15T07:23:00"
    },
    "location": {
      "latitude": 40.63975,
      "longitude": -73.77892
    }
  },
  "booking_contact_account_id": 1003427363,
  "booking_contact": {
    "first_name": "David",
    "last_name": "Stewart",
    "email": "email@sample.com",
    "phone": "+380930000000"
  },
  "billing_contact_account_id": 1001351994,
  "billing_contact": {
    "first_name": "Jerry",
    "last_name": "Harris"
  },
  "billing_contact_company_id": 654,
  "billing_contact_company": {
    "name": "KFC"
  },
  "passengers": [
    {
      "passenger_account_id": 1002334155,
      "passenger": {
        "first_name": "Christina",
        "last_name": "Brady",
        "email": "email@sample.com",
        "phone": "+380930000000"
      }
    }
  ],
  "vehicle_type_id": 14421,
  "service_type_id": 88301,
  "credit_card_id": 7019493,
  "credit_card": {
      "card_number_first_digit": "4",
      "card_number_last_digits": "1111",
      "card_network": "visa",
      "holder_name": "Josh Smith",
      "holder_type": "personal",
      "expiration_year": 2021,
      "expiration_month": 5,
      "billing_address": {
          "country_code": "US",
          "state_code": "TX",
          "postal_code": "1245",
          "city": "Dallas",
          "address_line1": "123 Some Street",
          "address_line2": "24 ap"
      },
      "notes": "Some CC notes"
  },
  "payment_type_id": 1,
  "paid_amount": 0.0,
  "authorized_amount": 0.0,
  "total_amount": 196.89,
  "primary_agent_id": 2,
  "primary_agent_reward": {
    "type": "amout",
    "amount": 20.0
  },
  "secondary_agent_id": 35,
  "secondary_agent_reward": {
    "type": "percentage",
    "amount": 3.0
  },
  "rental_agreement_id": 16493,
  "primary_driver_id": 138,
  "secondary_driver_id": 158,
  "primary_car_id": 75,
  "secondary_car_id": 73,
  "charges": [
    {
      "rate_id": 2,
      "name": "Per Hour",
      "rate_type": "multiplier",
      "rate_group": "base_rate",
      "is_vat_tax": false,
      "is_primary": true,
      "unit_value": 15.0,
      "unit_count": 1.0,
      "total_value": 15.0
    }
  ],
  "preferred_vehicle_type_id": 49328,
  "preferred_primary_driver_id": 154,
  "preferred_secondary_driver_id": 153,
  "miscellaneous": {
    "is_greeting_sign_required": true,
    "greeting_sign_notes": "Greeting notes",
    "occasion": "Corporate Travel",
    "group_name": "Amabella",
    "referral_source": "Website",
    "arranged_by": "INET",
    "voucher_number": "7789652"
  },
  "incoming_reference_number": "33467",
  "incoming_partner_reservation_id": 23423,
  "incoming_partner_reservation": {
        "charges": {
            "base_charge": 135.0,
            "hourly_charge": 20.0,
            "passenger_charge": 10.0,
            "distance_charge": 2.0,
            "gratuity_charge": 3.0,
            "extra_gratuity": 5.0,
            "stops_charge": 7.0,
            "tolls": 1.0,
            "surcharges": 4.0,
            "parking": 5.0,
            "miscellaneous_charge": 2.0,
            "discount": 1.0,
            "taxes": 3.0,
            "other_charges": 1.0
        }
   },
   "outgoing_reference_number": "41534",
   "outgoing_partner_reservation_id": 34626,
   "outgoing_partner_reservation": {
        "driver": {
            "first_name": "John",
            "last_name": "Silver",
            "phone": "+380991122333"
        },
        "car": {
            "license_plate": "LAL 44",
            "make": "Cadillac",
            "year": 2000,
            "model": "DTS",
            "color": "BLACK"
        },
        "charges": {
            "base_charge": 135.0,
            "hourly_charge": 20.0,
            "passenger_charge": 10.0,
            "distance_charge": 2.0,
            "gratuity_charge": 3.0,
            "extra_gratuity": 5.0,
            "stops_charge": 7.0,
            "tolls": 1.0,
            "surcharges": 4.0,
            "parking": 5.0,
            "miscellaneous_charge": 2.0,
            "discount": 1.0,
            "taxes": 3.0,
            "other_charges": 1.0
        }
    }
}

## Update Reservation  [/Reservation/update]

### Update Reservation [PUT /companies/{company_alias}/reservations/{id}] 

+ Parameters 
    + company_alias: (required, string)
    + id: `1` (required, int)

+ Request 
    + `pickup` (required, object) 
    + `pickup.flight` (optional, object) 
    + `pickup.flight.airport_code` (optional, string) 
        The value must be string with valid airport IATA or ICAO code. 
    + `pickup.flight.airline_code` (optional, string) 
        The value must be string with valid airline IATA or ICAO code. 
    + `pickup.flight.flight_number` (optional, string) 
        The value must be string with flight number digits. 
    + `pickup.flight.tail_number` (optional, string) 
        The value must be non-empty string with maximum length 10. 
    + `pickup.flight.terminal` (optional, string) 
        The value must be non-empty string with maximum length 50. 
    + `pickup.flight.gateway` (optional, string) 
        The value must be non-empty string with maximum length 50. 
    + `pickup.flight.meet_option` (optional, enum[string]) 
        + Members 
            + `curbside` 
            + `inside` 
    + `pickup.flight.departs_from_or_arrives_to` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `pickup.flight.departure_at_or_arrival_at` (optional, string) 
        The value must be the string with date&time in ISO 8601 format between '1753-01-01T00:00:00' and '9999-12-31T23:59:59'.
    + `pickup.name` (optional, string) 
        The value must be non-empty string with maximum length 500. 
    + `pickup.scheduled_arrival_at` (optional, string) 
        The value must be the string with date&time in ISO 8601 format between '1753-01-01T00:00:00' and '9999-12-31T23:59:59'.
    + `pickup.actual_arrival_at` (optional, string) 
        The value must be the string with date&time in ISO 8601 format between '1753-01-01T00:00:00' and '9999-12-31T23:59:59'.
    + `pickup.action` (optional, enum[string]) 
        + Members 
            + `pickup` 
            + `stop` 
            + `dropoff` 
    + `pickup.type` (optional, enum[string]) 
        + Members 
            + `address` 
            + `poi` 
            + `fbo` 
            + `airport` 
            + `seaport` 
    + `pickup.notes` (optional, string) 
        The value must be non-empty string with maximum length 4000. 
    + `pickup.one_line_address` (optional, string) 
    + `pickup.address` (required, object) 
    + `pickup.address.country_code` (optional, string) 
        The value must be non-empty string with maximum length 5. 
    + `pickup.address.state_code` (optional, string) 
        The value must be non-empty string with maximum length 5. 
    + `pickup.address.postal_code` (optional, string) 
        The value must be non-empty string with maximum length 15. 
    + `pickup.address.county` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `pickup.address.city` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `pickup.address.address_line1` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `pickup.address.address_line2` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `pickup.cruise` (optional, object) 
    + `pickup.cruise.seaport_code` (required, string) 
        The value must be non-empty string with maximum length 10. 
    + `pickup.cruise.cruise_ship_name` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `pickup.cruise.cruise_line_name` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `pickup.cruise.departs_from_or_arrives_to` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `pickup.cruise.departure_at_or_arrival_at` (optional, string) 
        The value must be the string with date&time in ISO 8601 format between '1753-01-01T00:00:00' and '9999-12-31T23:59:59'.
    + `pickup.location` (required, object) 
        Latitude and Longitude cannot be zero at the same time. 
    + `pickup.location.latitude` (optional, number) 
        The value must be the decimal which inclusive between -90 and 90. 
        + Default: `0` 
    + `pickup.location.longitude` (optional, number) 
        The value must be the decimal which inclusive between -180 and 180. 
        + Default: `0` 
    + `stops[]` (optional, array[object]) 
    + `stops[].flight` (optional, object) 
    + `stops[].flight.airport_code` (optional, string) 
        The value must be string with valid airport IATA or ICAO code. 
    + `stops[].flight.airline_code` (optional, string) 
        The value must be string with valid airline IATA or ICAO code. 
    + `stops[].flight.flight_number` (optional, string) 
        The value must be string with flight number digits. 
    + `stops[].flight.tail_number` (optional, string) 
        The value must be non-empty string with maximum length 10. 
    + `stops[].flight.terminal` (optional, string) 
        The value must be non-empty string with maximum length 50. 
    + `stops[].flight.gateway` (optional, string) 
        The value must be non-empty string with maximum length 50. 
    + `stops[].flight.meet_option` (optional, enum[string]) 
        + Members 
            + `curbside` 
            + `inside` 
    + `stops[].flight.departs_from_or_arrives_to` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `stops[].flight.departure_at_or_arrival_at` (optional, string) 
        The value must be the string with date&time in ISO 8601 format between '1753-01-01T00:00:00' and '9999-12-31T23:59:59'.
    + `stops[].name` (optional, string) 
        The value must be non-empty string with maximum length 500. 
    + `stops[].scheduled_arrival_at` (optional, string) 
        The value must be the string with date&time in ISO 8601 format between '1753-01-01T00:00:00' and '9999-12-31T23:59:59'.
    + `stops[].actual_arrival_at` (optional, string) 
        The value must be the string with date&time in ISO 8601 format between '1753-01-01T00:00:00' and '9999-12-31T23:59:59'.
    + `stops[].action` (optional, enum[string]) 
        + Members 
            + `pickup` 
            + `stop` 
            + `dropoff` 
    + `stops[].type` (optional, enum[string]) 
        + Members 
            + `address` 
            + `poi` 
            + `fbo` 
            + `airport` 
            + `seaport` 
    + `stops[].notes` (optional, string) 
        The value must be non-empty string with maximum length 4000. 
    + `stops[].one_line_address` (optional, string) 
    + `stops[].address` (required, object) 
    + `stops[].address.country_code` (optional, string) 
        The value must be non-empty string with maximum length 5. 
    + `stops[].address.state_code` (optional, string) 
        The value must be non-empty string with maximum length 5. 
    + `stops[].address.postal_code` (optional, string) 
        The value must be non-empty string with maximum length 15. 
    + `stops[].address.county` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `stops[].address.city` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `stops[].address.address_line1` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `stops[].address.address_line2` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `stops[].cruise` (optional, object) 
    + `stops[].cruise.seaport_code` (required, string) 
        The value must be non-empty string with maximum length 10. 
    + `stops[].cruise.cruise_ship_name` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `stops[].cruise.cruise_line_name` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `stops[].cruise.departs_from_or_arrives_to` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `stops[].cruise.departure_at_or_arrival_at` (optional, string) 
        The value must be the string with date&time in ISO 8601 format between '1753-01-01T00:00:00' and '9999-12-31T23:59:59'.
    + `stops[].location` (required, object) 
        Latitude and Longitude cannot be zero at the same time. 
    + `stops[].location.latitude` (optional, number) 
        The value must be the decimal which inclusive between -90 and 90. 
        + Default: `0` 
    + `stops[].location.longitude` (optional, number) 
        The value must be the decimal which inclusive between -180 and 180. 
        + Default: `0` 
    + `dropoff` (optional, object) 
    + `dropoff.flight` (optional, object) 
    + `dropoff.flight.airport_code` (optional, string) 
        The value must be string with valid airport IATA or ICAO code. 
    + `dropoff.flight.airline_code` (optional, string) 
        The value must be string with valid airline IATA or ICAO code. 
    + `dropoff.flight.flight_number` (optional, string) 
        The value must be string with flight number digits. 
    + `dropoff.flight.tail_number` (optional, string) 
        The value must be non-empty string with maximum length 10. 
    + `dropoff.flight.terminal` (optional, string) 
        The value must be non-empty string with maximum length 50. 
    + `dropoff.flight.gateway` (optional, string) 
        The value must be non-empty string with maximum length 50. 
    + `dropoff.flight.meet_option` (optional, enum[string]) 
        + Members 
            + `curbside` 
            + `inside` 
    + `dropoff.flight.departs_from_or_arrives_to` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `dropoff.flight.departure_at_or_arrival_at` (optional, string) 
        The value must be the string with date&time in ISO 8601 format between '1753-01-01T00:00:00' and '9999-12-31T23:59:59'.
    + `dropoff.name` (optional, string) 
        The value must be non-empty string with maximum length 500. 
    + `dropoff.scheduled_arrival_at` (optional, string) 
        The value must be the string with date&time in ISO 8601 format between '1753-01-01T00:00:00' and '9999-12-31T23:59:59'.
    + `dropoff.actual_arrival_at` (optional, string) 
        The value must be the string with date&time in ISO 8601 format between '1753-01-01T00:00:00' and '9999-12-31T23:59:59'.
    + `dropoff.action` (optional, enum[string]) 
        + Members 
            + `pickup` 
            + `stop` 
            + `dropoff` 
    + `dropoff.type` (optional, enum[string]) 
        + Members 
            + `address` 
            + `poi` 
            + `fbo` 
            + `airport` 
            + `seaport` 
    + `dropoff.notes` (optional, string) 
        The value must be non-empty string with maximum length 4000. 
    + `dropoff.one_line_address` (optional, string) 
    + `dropoff.address` (required, object) 
    + `dropoff.address.country_code` (optional, string) 
        The value must be non-empty string with maximum length 5. 
    + `dropoff.address.state_code` (optional, string) 
        The value must be non-empty string with maximum length 5. 
    + `dropoff.address.postal_code` (optional, string) 
        The value must be non-empty string with maximum length 15. 
    + `dropoff.address.county` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `dropoff.address.city` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `dropoff.address.address_line1` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `dropoff.address.address_line2` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `dropoff.cruise` (optional, object) 
    + `dropoff.cruise.seaport_code` (required, string) 
        The value must be non-empty string with maximum length 10. 
    + `dropoff.cruise.cruise_ship_name` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `dropoff.cruise.cruise_line_name` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `dropoff.cruise.departs_from_or_arrives_to` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `dropoff.cruise.departure_at_or_arrival_at` (optional, string) 
        The value must be the string with date&time in ISO 8601 format between '1753-01-01T00:00:00' and '9999-12-31T23:59:59'.
    + `dropoff.location` (required, object) 
        Latitude and Longitude cannot be zero at the same time. 
    + `dropoff.location.latitude` (optional, number) 
        The value must be the decimal which inclusive between -90 and 90. 
        + Default: `0` 
    + `dropoff.location.longitude` (optional, number) 
        The value must be the decimal which inclusive between -180 and 180. 
        + Default: `0` 
    + `company_alias_id` (required, string) 
        The value must be non-empty string with maximum length 50. 
    + `confirmation_prefix` (optional, string) 
        The value must be non-empty string with maximum length 20.
    + `confirmation_suffix` (optional, string) 
        The value must be non-empty string with maximum length 20. 
    + `scheduled_pickup_at` (required, string) 
        The value must be the string with date&time in ISO 8601 format between '1753-01-01T00:00:00' and '9999-12-31T23:59:59'.
    + `actual_pickup_at` (optional, string) 
        The value must be the string with date&time in ISO 8601 format between '1753-01-01T00:00:00' and '9999-12-31T23:59:59'.
    + `scheduled_duration_in_minutes` (optional, number) 
        The value must be integer which is not less than 1. 
    + `moved ` (optional, enum[string]) 
        + Members 
            + `due_upon_receipt` 
            + `net10_days` 
            + `net15_days` 
            + `net30_days` 
            + `net45_days` 
            + `net60_days` 
            + `net90_days` 
            + `net120_days` 
            + `net180_days` 
            + `net365_days` 
    + `payment_status` (optional, enum[string]) 
        + Members 
            + `unpaid` 
            + `paid` 
            + `billed` 
            + `collect` 
    + `luggage_count` (optional, number) 
        The value must be integer which is not less than 0. 
        + Default: `0` 
    + `passenger_count` (required, number) 
        The value must be integer which is not less than 1. 
    + `infant_child_seat_count` (optional, number) 
        The value must be integer which is not less than 0. 
        + Default: `0` 
    + `booster_child_seat_count` (optional, number) 
        The value must be integer which is not less than 0. 
        + Default: `0` 
    + `toddler_child_seat_count` (optional, number) 
        The value must be integer which is not less than 0. 
        + Default: `0` 
    + `is_handicap_access_required` (optional, boolean) 
        + Default: `false` 
    + `booking_contact_account_id` (optional, number) 
        The value must be integer which is not less than 1. 
    + `booking_contact` (optional, object) 
    + `booking_contact.first_name` (optional, string) 
        The value must be non-empty string with maximum length 50. 
    + `booking_contact.last_name` (optional, string) 
        The value must be non-empty string with maximum length 50. 
    + `booking_contact.email` (optional, string) 
        The value must be string with email address. 
        The value must be non-empty string with maximum length 255. 
    + `booking_contact.phone` (optional, string) 
        The value must be a string with a existing phone number in E.164 format. 
    + `billing_contact_account_id` (optional, number) 
        The value must be integer which is not less than 1. 
    + `billing_contact_account_number` (optional, string) 
        The value must be non-empty string with maximum length 50. 
    + `billing_contact_company_id` (optional, number) 
    + `billing_contact_company` (optional, object) 
    + `billing_contact_company.name` (required, string) 
        The value must be non-empty string with maximum length 150. 
    + `billing_contact` (optional, object) 
    + `billing_contact.first_name` (optional, string) 
        The value must be non-empty string with maximum length 50. 
    + `billing_contact.last_name` (optional, string) 
        The value must be non-empty string with maximum length 50. 
    + `billing_contact.email` (optional, string) 
        The value must be string with email address. 
        The value must be non-empty string with maximum length 255. 
    + `billing_contact.phone` (optional, string) 
        The value must be a string with a existing phone number in E.164 format. 
    + `passengers[]` (required, array[object]) 
        The count of elements should be greater or equals to 1. 
    + `passengers[].passenger_account_id` (optional, number) 
        The value must be integer which is not less than 1. 
    + `passengers[].passenger` (optional, object) 
    + `passengers[].passenger.first_name` (optional, string) 
        The value must be non-empty string with maximum length 50. 
    + `passengers[].passenger.last_name` (optional, string) 
        The value must be non-empty string with maximum length 50. 
    + `passengers[].passenger.email` (optional, string) 
        The value must be string with email address. 
        The value must be non-empty string with maximum length 255. 
    + `passengers[].passenger.phone` (optional, string) 
        The value must be a string with a existing phone number in E.164 format. 
    + `vehicle_type_id` (optional, number) 
        The value must be integer which is not less than 1. 
    + `service_type_id` (optional, number) 
        The value must be integer which is not less than 1. 
    + `credit_card_id` (optional, number) 
        The value must be integer which is not less than 1. 
    + `payment_type_id` (optional, number) 
        The value must be integer which is not less than 1. 
    + `currency_code` (optional, string) 
        The value must be string with valid ISO 4217 currency alpha code. 
    + `primary_agent_id` (optional, number) 
        The value must be integer which is not less than 1. 
    + `primary_agent_reward` (optional, object) 
    + `primary_agent_reward.type` (optional, enum[string]) 
        + Members 
            + `percentage` 
            + `amout` 
    + `primary_agent_reward.amount` (optional, number) 
        The value must be non-negative decimal number. 
        + Default: `0` 
    + `secondary_agent_id` (optional, number) 
        The value must be integer which is not less than 1. 
    + `secondary_agent_reward` (optional, object) 
    + `secondary_agent_reward.type` (optional, enum[string]) 
        + Members 
            + `percentage` 
            + `amout` 
    + `secondary_agent_reward.amount` (optional, number) 
        The value must be non-negative decimal number. 
        + Default: `0` 
    + `rental_agreement_id` (optional, number) 
        The value must be integer which is not less than 1. 
    + `primary_driver_id` (optional, number) 
        The value must be integer which is not less than 1. 
    + `secondary_driver_id` (optional, number) 
        The value must be integer which is not less than 1. 
    + `primary_car_id` (optional, number) 
        The value must be integer which is not less than 1. 
    + `secondary_car_id` (optional, number) 
        The value must be integer which is not less than 1. 
    + `charges[]` (optional, array[object]) 
    + `charges[].rate_id` (required, number) 
        The value must be integer which is not less than 1. 
    + `charges[].name` (required, string) 
        The value must be non-empty string with maximum length 50. 
    + `charges[].unit_value` (optional, number) 
        The value must be non-negative decimal number. 
    + `charges[].unit_count` (optional, number) 
        The value must be non-negative decimal number. 
    + `preferred_vehicle_type_id` (optional, number) 
        The value must be integer which is not less than 1. 
    + `preferred_primary_driver_id` (optional, number) 
        The value must be integer which is not less than 1. 
    + `preferred_secondary_driver_id` (optional, number) 
        The value must be integer which is not less than 1. 
    + `miscellaneous` (optional, object) 
    + `miscellaneous.is_greeting_sign_required` (optional, boolean) 
        + Default: `false` 
    + `miscellaneous.greeting_sign_notes` (optional, string) 
        The value must be non-empty string with maximum length 2000. 
    + `miscellaneous.occasion` (optional, string) 
        The value must be non-empty string with maximum length 50. 
    + `miscellaneous.group_name` (optional, string) 
        The value must be non-empty string with maximum length 50. 
    + `miscellaneous.referral_source` (optional, string) 
        The value must be non-empty string with maximum length 50. 
    + `miscellaneous.arranged_by` (optional, string) 
        The value must be non-empty string with maximum length 50. 
    + `miscellaneous.voucher_number` (optional, string) 
        The value must be non-empty string with maximum length 50.
    + `incoming_reference_number` (optional, string) 
        The value must be non-empty string with maximum length 50. 
    + `outgoing_reference_number` (optional, string) 
        The value must be non-empty string with maximum length 50. 
    
    
    + Headers 

            Content-Type: application/json 
            Authorization: bearer {access_token} 

    + Body 

{
  "company_alias_id": "testlimo",
  "confirmation_prefix": "123",
  "confirmation_suffix": "123",
  "scheduled_pickup_at": "2017-04-14T18:27:00",
  "actual_pickup_at": "2017-04-14T18:28:00",
  "scheduled_duration_in_minutes": "122",
  "pickup": {
    "name": "Name of Address",
    "scheduled_arrival_at": "2017-04-15T12:54:00",
    "actual_arrival_at": "2017-04-15T12:55:00",
    "action": "pickup",
    "notes": "pickup notes",
    "address": {
      "country_code": "US",
      "state_code": "NY",
      "postal_code": "11354",
      "city": "Queens",
      "address_line1": "123 Main St"
    },
    "location": {
      "latitude": 40.7624474,
      "longitude": -73.83165
    }
  },
  "stops": [
    {
      "name": "Amtrak: Back Bay Station",
      "action": "stop",
      "address": {
        "country_code": "US",
        "state_code": "MA",
        "postal_code": "02116",
        "city": "Boston",
        "address_line1": "145 Dartmouth St"
      },
      "location": {
        "latitude": 42.34734,
        "longitude": -71.075386
      }
    }
  ],
  "dropoff": {
    "name": "John F. Kennedy International Airport",
    "scheduled_arrival_at": "2017-04-15T07:03:00",
    "action": "dropoff",
    "type": "airport",
    "address": {
      "state_code": "NY"
    },
    "flight": {
      "airport_code": "JFK",
      "airline_code": "AA",
      "flight_number": "9070",
      "tail_number": "A7-E3",
      "terminal": "4",
      "gateway": "A7",
      "meet_option": "curbside",
      "departure_from_or_arrival_to": "AUH",
      "departure_at_or_arrival_at": "2017-04-15T07:23:00"
    },
    "location": {
      "latitude": 40.63975,
      "longitude": -73.77892
    }
  },
  "payment_terms": "due_upon_receipt",
  "payment_status": "unpaid",
  "luggage_count": 1,
  "passenger_count": 1,
  "infant_child_seat_count": 2,
  "booster_child_seat_count": 1,
  "toddler_child_seat_count": 1,
  "is_handicap_access_required": true,
  "booking_contact_account_id": 1003427363,
  "booking_contact": {
    "first_name": "David",
    "last_name": "Stewart",
    "email": "email@sample.com",
    "phone": "+380930000000"
  },
  "billing_contact_account_id": 1001351994,
  "billing_contact_company_id": 654,
  "billing_contact": {
    "first_name": "Jerry",
    "last_name": "Harris",
    "email": "email2@sample.com",
    "phone": "+380930000001"
  },
  "passengers": [
    {
      "passenger_account_id": 1002334155,
      "passenger": {
        "first_name": "Christina",
        "last_name": "Brady",
        "email": "email@sample.com",
        "phone": "+380930000000"
      }
    }
  ],
  "vehicle_type_id": 14421,
  "service_type_id": 88301,
  "credit_card_id": 7019493,
  "payment_type_id": 1,
  "currency_code": "USD",
  "primary_agent_id": 2,
  "primary_agent_reward": {
    "type": "amout",
    "amount": 20.0
  },
  "secondary_agent_id": 35,
  "secondary_agent_reward": {
    "type": "percentage",
    "amount": 3.0
  },
  "rental_agreement_id": 16493,
  "primary_driver_id": 138,
  "secondary_driver_id": 158,
  "primary_car_id": 75,
  "secondary_car_id": 73,
  "charges": [
    {
      "rate_id": 2,
      "name": "Per Hour",
      "unit_value": 15.0,
      "unit_count": 1.0
    }
  ],
  "preferred_vehicle_type_id": 49328,
  "preferred_primary_driver_id": 154,
  "preferred_secondary_driver_id": 153,
  "miscellaneous": {
    "is_greeting_sign_required": true,
    "greeting_sign_notes": "Greeting notes",
    "occasion": "Corporate Travel",
    "group_name": "Amabella",
    "referral_source": "Website",
    "arranged_by": "INET",
    "voucher_number": "7789652"
  },
  "incoming_reference_number": "12345",
  "outgoing_reference_number": "23456"
}

+ Response 200 


## Reservation Credit Card [/Reservation/credit_card]

### Get Credit Card [GET /companies/{company_alias}/reservations/{reservation_id}/credit_cards/{id}] 
Returns credit card.
+ Parameters
    + `company_alias` (required, string) 
    + `reservation_id` (required, number) 
    + `id` (required, number) 

+ Request
    + Headers 
        Accept-Encoding: gzip 
        Accept-Charset: utf-8 
        Accept: application/json 
        Authorization: bearer {access_token} 

+ Response 200 (application/json)
    + Headers 
        Content-Type: application/json; charset=utf-8 
    + Body 
        {
            "id": 1,
            "card_number_first_digit": "4",
            "card_number_last_digits": "1111",
            "card_network": "visa",
            "holder_name": "Josh Smith",
            "holder_type": "personal",
            "expiration_year": 2021,
            "expiration_month": 6,
            "billing_address": {
                "country_code": "US",
                "state_code": "TX",
                "postal_code": "12345",
                "city": "Dallas",
                "address_line1": "123 Some Street",
                "address_line2": "24 ap"
            },
            "notes": "Some Cc notes"
        } 

### Get List of Reservation Credit Cards [GET /companies/{company_alias}/reservations/{reservation_id}/credit_cards?sort_by={sort_by}&sort_order={sort_order}&page_index={page_index}&page_size={page_size}] 
Returns credit card.
+ Parameters
    + `company_alias` (required, string) 
    + `reservation_id` (required, number) 
    + `sort_by` (optional, enum[string]) 
        + Members 
            + `number` 
            + `expiration_date` 
            + `holder_name` 
            + `preference` 
    + `sort_order` (optional, enum[string]) 
        + Members 
            + `asc` 
            + `desc` 
    + `page_index` (optional, number) 
        The value must be integer which inclusive between 1 and 40000000. 
        + Default: `1` 
    + `page_size` (optional, number) 
        The value must be integer which inclusive between 1 and 50. 
        + Default: `20` 

+ Request
    + Headers 
        Accept-Encoding: gzip 
        Accept-Charset: utf-8 
        Accept: application/json 
        Authorization: bearer {access_token} 

+ Response 200 (application/json)
    + Headers 
        Content-Type: application/json; charset=utf-8 
    + Body 
        {
            "id": 1,
            "card_number_first_digit": "4",
            "card_number_last_digits": "1111",
            "card_network": "visa",
            "holder_name": "Josh Smith",
            "holder_type": "personal",
            "expiration_year": 2021,
            "expiration_month": 6,
        } 

### Create Credit Card [POST /companies/{company_alias}/reservations/{reservation_id}/credit_cards] 
Creates credit card.
+ Parameters
    + `company_alias` (required, string) 
    + `reservation_id` (required, number) 

+ Request(application/json)
    + `card_number` (required, string) 
        The value must be non-empty string with maximum length 20. 
    + `holder_name` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `holder_type` (optional, enum[string]) 
        + Members 
            + `unknown` 
            + `personal` 
            + `business` 
    + `expiration_year` (required, number) 
        The valus should be number inclusive between 1 and 9999. 
    + `expiration_month` (required, number) 
        The valus should be number inclusive between 1 and 12. 
    + `billing_address` (optional, object) 
    + `billing_address.country_code` (optional, string) 
        The value must be non-empty string with maximum length 5. 
    + `billing_address.state_code` (optional, string) 
        The value must be non-empty string with maximum length 5. 
    + `billing_address.postal_code` (optional, string) 
        The value must be non-empty string with maximum length 15. 
    + `billing_address.county` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `billing_address.city` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `billing_address.address_line1` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `billing_address.address_line2` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `notes` (optional, string) 
        The value must be non-empty string with maximum length 500. 
    + Headers 
        Accept-Encoding: gzip 
        Accept-Charset: utf-8 
        Accept: application/json 
        Content-Type: application/json;charset=utf-8 
        Authorization: bearer {access_token} 
    + Body 
        {
            "card_number": "4111111111111111",
            "holder_name": "Josh Smith",
            "holder_type": "personal",
            "expiration_year": 2021,
            "expiration_month": 6,
            "billing_address": {
                "country_code": "US",
                "state_code": "TX",
                "postal_code": "12345",
                "city": "Dallas",
                "address_line1": "123 Some Street",
                "address_line2": "24 ap"
            },
            "notes": "Some Cc notes"
        } 

+ Response 200 (application/json)
    + Headers 
        Content-Type: application/json; charset=utf-8 
    + Body 
        {
            "id": 1,
            "card_number_first_digit": "4",
            "card_number_last_digits": "1111",
            "card_network": "visa",
            "holder_name": "Josh Smith",
            "holder_type": "personal",
            "expiration_year": 2021,
            "expiration_month": 6,
            "billing_address": {
                "country_code": "US",
                "state_code": "TX",
                "postal_code": "12345",
                "city": "Dallas",
                "address_line1": "123 Some Street",
                "address_line2": "24 ap"
            },
            "notes": "Some Cc notes"
        } 

### Edit Credit Card [PUT /companies/{company_alias}/reservations/{reservation_id}/credit_cards/{id}] 
Edit credit card.
+ Parameters
    + `company_alias` (required, string) 
    + `reservation_id` (required, number) 
    + `id` (required, number) 

+ Request(application/json)
    + `holder_name` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `holder_type` (optional, enum[string]) 
        + Members 
            + `unknown` 
            + `personal` 
            + `business` 
    + `expiration_year` (required, number) 
        The valus should be number inclusive between 1 and 9999. 
    + `expiration_month` (required, number) 
        The valus should be number inclusive between 1 and 12. 
    + `billing_address` (optional, object) 
    + `billing_address.country_code` (optional, string) 
        The value must be non-empty string with maximum length 5. 
    + `billing_address.state_code` (optional, string) 
        The value must be non-empty string with maximum length 5. 
    + `billing_address.postal_code` (optional, string) 
        The value must be non-empty string with maximum length 15. 
    + `billing_address.county` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `billing_address.city` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `billing_address.address_line1` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `billing_address.address_line2` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `notes` (optional, string) 
        The value must be non-empty string with maximum length 500. 
    + Headers 
        Accept-Encoding: gzip 
        Accept-Charset: utf-8 
        Accept: application/json 
        Content-Type: application/json;charset=utf-8 
        Authorization: bearer {access_token} 
    + Body 
        {
            "holder_name": "Josh Smith",
            "holder_type": "personal",
            "expiration_year": 2021,
            "expiration_month": 6,
            "billing_address": {
                "country_code": "US",
                "state_code": "TX",
                "postal_code": "12345",
                "city": "Dallas",
                "address_line1": "123 Some Street",
                "address_line2": "24 ap"
            },
            "notes": "Some Cc notes"
        } 

+ Response 204

## Group Transitions by Reservation States

Next endpoints allow transitioning by reservation states and managing reservation statuses for Operator and Driver flow. 
All transition responses, except `keep_state`, contain information about current state, permitted states and transition. 

For returning information about reservation statuses user must pass into URL parameter `include_statuses` with one of the next values: `all`, `mapped`, `unmapped`, `none` (default).

To change status on specific, while performing state transition, make sure that the desired status is mapped to the final state and pass corresponding `status_id` parameter into URI.

If `status_id` parameter for desired status is not specified in URL then first from the list of mapped  to the final state statuses will be set.

* For `Keep State` transition parameter `status_id` is required.

In tables bellow described request/response fields:

<b>Request:</b>
| Parameter         |Type   |Required                   |Description                                                |
|-------------------|-------|---------------------------|-----------------------------------------------------------|
| company_alias     | String|Yes                        | The Alias of you company. Example: `limotes1`             |
| id                | Int   |Yes                        | ID of reservation                                         |                          |
| status_id         | Int   |Yes (for Keep State only)  | ID of reservation status that will set after transition   |                                                |
| inclusde_statuses | String|No                         | Allow returns reservation statuses in response. Possible values: `none` - (by default) statuses not returns in response, `all` - statuses returns in response, `mapped` - returns mapped statuses, `unmapped` - returns umpapped statues. | 

<b>Response:</b>
| Parameter                         |Type   |Description                         |
|-----------------------------------|-------|------------------------------------|
| state                             |String |Current state after transition      |
| transitions                       |Array  |List of permitted transitions       |                          |
| transitions[i].state              |String |State name                          |
| transitions[i].transition         |String |Transition name                     | 
| transitions[i].statuses           |Array  |List of mapped reservation statuses |
| transitions[i].statuses[j].id     |Int    |Reservation status ID               |                  
| transitions[i].statuses[j].name   |Int    |Reservation status Name             | 
| transitions[i].statuses[j].color  |String |Status color                        | 

### Get Permitted Transitions [GET /companies/{company_alias}/reservations/{id}/transitions]

Returns collection of available triggers for Operator Reservation by specified ID

+ Parameters
    + company_alias: limotest1 (required, string)
    + id: 1 (int, required)

+ Request

    + Headers

            Content-Type: application/json
            Authorization: bearer {access_token}

+ Response 200

    + Headers

            Content-Type: application/json

    + Body

            {"state":"sample string 1","transitions":[{"state":"sample string 2","transition":"sample string 3","statuses":[{"id": 1,"name": "sample string 5","color":"sample string 6"},{"id": 2,"name":"sample string 7","color":"sample string 7" }]},{"state":"sample string 8","transition":"sample string 9","statuses":[{"id":3,"name":"sample string 10","color":"sample string 11"},{"id":4,"name":"sample string 12","color":"sample string 13"}]}]}
            
## Do Transition [/companies/{company_alias}/reservations/{id}/{trigger}]
            
### Offer [POST /companies/{company_alias}/reservations/{id}/offer?status_id={status_id}&include_statuses={include_statuses}]

Sends reservation offer to a driver

+ Parameters
    + company_alias: limotest1 (required, string)
    + id: 1 (int, required)
    + status_id: 1 (int, optional)
    + include_statuses: all (String, optional).

+ Request

    + Headers

            Content-Type: application/json
            Authorization: bearer {access_token}

+ Response 200

    + Headers

            Content-Type: application/json

    + Body

            {"state":"sample string 1","transitions":[{"state":"sample string 2","transition":"sample string 3","statuses":[{"id": 1,"name": "sample string 5","color":"sample string 6"},{"id": 2,"name":"sample string 7","color":"sample string 7" }]},{"state":"sample string 8","transition":"sample string 9","statuses":[{"id":3,"name":"sample string 10","color":"sample string 11"},{"id":4,"name":"sample string 12","color":"sample string 13"}]}]}

            
### Retract Offer [POST /companies/{company_alias}/reservations/{id}/retract_offer?status_id={status_id}&include_statuses={include_statuses}]

Retracts reservation offer from a driver

+ Parameters
    + company_alias: limotest1 (required, string)
    + id: 1 (int, required)
    + status_id: 1 (int, optional)
    + include_statuses: all (String, optional).

+ Request

    + Headers

            Content-Type: application/json
            Authorization: bearer {access_token}

+ Response 200

    + Headers

            Content-Type: application/json

    + Body

            {"state":"sample string 1","transitions":[{"state":"sample string 2","transition":"sample string 3","statuses":[{"id": 1,"name": "sample string 5","color":"sample string 6"},{"id": 2,"name":"sample string 7","color":"sample string 7" }]},{"state":"sample string 8","transition":"sample string 9","statuses":[{"id":3,"name":"sample string 10","color":"sample string 11"},{"id":4,"name":"sample string 12","color":"sample string 13"}]}]}
            
### Accept [POST /companies/{company_alias}/reservations/{id}/accept?status_id={status_id}&include_statuses={include_statuses}]

Accepts offered/created reservation

+ Parameters
    + company_alias: limotest1 (required, string)
    + id: 1 (int, required)
    + status_id: 1 (int, optional)
    + include_statuses: all (String, optional).

+ Request

    + Headers

            Content-Type: application/json
            Authorization: bearer {access_token}

+ Response 200

    + Headers

            Content-Type: application/json

    + Body

            {"state":"sample string 1","transitions":[{"state":"sample string 2","transition":"sample string 3","statuses":[{"id": 1,"name": "sample string 5","color":"sample string 6"},{"id": 2,"name":"sample string 7","color":"sample string 7" }]},{"state":"sample string 8","transition":"sample string 9","statuses":[{"id":3,"name":"sample string 10","color":"sample string 11"},{"id":4,"name":"sample string 12","color":"sample string 13"}]}]}
            
### Reject [POST /companies/{company_alias}/reservations/{id}/reject?status_id={status_id}&include_statuses={include_statuses}]

Rejects offered/created reservation

+ Parameters
    + company_alias: limotest1 (required, string)
    + id: 1 (int, required)
    + status_id: 1 (int, optional)
    + include_statuses: all (String, optional).

+ Request

    + Headers

            Content-Type: application/json
            Authorization: bearer {access_token}

+ Response 200

    + Headers

            Content-Type: application/json

    + Body
            
            {"state":"sample string 1","transitions":[{"state":"sample string 2","transition":"sample string 3","statuses":[{"id": 1,"name": "sample string 5","color":"sample string 6"},{"id": 2,"name":"sample string 7","color":"sample string 7" }]},{"state":"sample string 8","transition":"sample string 9","statuses":[{"id":3,"name":"sample string 10","color":"sample string 11"},{"id":4,"name":"sample string 12","color":"sample string 13"}]}]}

### Assign [POST /companies/{company_alias}/reservations/{id}/assign?status_id={status_id}&include_statuses={include_statuses}]

Assign reservation to driver

+ Parameters
    + company_alias: limotest1 (required, string)
    + id: 1 (int, required)
    + status_id: 1 (int, optional)
    + include_statuses: all (String, optional).

+ Request

    + Headers

            Content-Type: application/json
            Authorization: bearer {access_token}

+ Response 200

    + Headers

            Content-Type: application/json

    + Body

            {"state":"sample string 1","transitions":[{"state":"sample string 2","transition":"sample string 3","statuses":[{"id": 1,"name": "sample string 5","color":"sample string 6"},{"id": 2,"name":"sample string 7","color":"sample string 7" }]},{"state":"sample string 8","transition":"sample string 9","statuses":[{"id":3,"name":"sample string 10","color":"sample string 11"},{"id":4,"name":"sample string 12","color":"sample string 13"}]}]}
            
### Unassign [POST /companies/{company_alias}/reservations/{id}/unassign?status_id={status_id}&include_statuses={include_statuses}]

Unassigns reservation from driver

+ Parameters
    + company_alias: limotest1 (required, string)
    + id: 1 (int, required)
    + status_id: 1 (int, optional)
    + include_statuses: all (String, optional).

+ Request

    + Headers

            Content-Type: application/json
            Authorization: bearer {access_token}

+ Response 200

    + Headers

            Content-Type: application/json

    + Body

            {"state":"sample string 1","transitions":[{"state":"sample string 2","transition":"sample string 3","statuses":[{"id": 1,"name": "sample string 5","color":"sample string 6"},{"id": 2,"name":"sample string 7","color":"sample string 7" }]},{"state":"sample string 8","transition":"sample string 9","statuses":[{"id":3,"name":"sample string 10","color":"sample string 11"},{"id":4,"name":"sample string 12","color":"sample string 13"}]}]}
         
### Go to Pickup [POST /companies/{company_alias}/reservations/{id}/go_to_pickup?status_id={status_id}&include_statuses={include_statuses}]

Shows that the driver is on the way to pickup location

+ Parameters

     + company_alias: limotest1 (required, string)
    + id: 1 (int, required)
    + status_id: 1 (int, optional)
    + include_statuses: all (String, optional).

+ Request

    + Headers

            Content-Type: application/json
            Authorization: bearer {access_token}

+ Response 200

    + Headers

            Content-Type: application/json

    + Body

            {"state":"sample string 1","transitions":[{"state":"sample string 2","transition":"sample string 3","statuses":[{"id": 1,"name": "sample string 5","color":"sample string 6"},{"id": 2,"name":"sample string 7","color":"sample string 7" }]},{"state":"sample string 8","transition":"sample string 9","statuses":[{"id":3,"name":"sample string 10","color":"sample string 11"},{"id":4,"name":"sample string 12","color":"sample string 13"}]}]}
         
### Arrive at Pickup [POST /companies/{company_alias}/reservations/{id}/arrive_at_pickup?status_id={status_id}&include_statuses={include_statuses}]

Shows that the driver has arrived at pickup location

+ Parameters

    + company_alias: limotest1 (required, string)
    + id: 1 (int, required)
    + status_id: 1 (int, optional)
    + include_statuses: all (String, optional).

+ Request

    + Headers

            Content-Type: application/json
            Authorization: bearer {access_token}

+ Response 200

    + Headers

            Content-Type: application/json

    + Body

            {"state":"sample string 1","transitions":[{"state":"sample string 2","transition":"sample string 3","statuses":[{"id": 1,"name": "sample string 5","color":"sample string 6"},{"id": 2,"name":"sample string 7","color":"sample string 7" }]},{"state":"sample string 8","transition":"sample string 9","statuses":[{"id":3,"name":"sample string 10","color":"sample string 11"},{"id":4,"name":"sample string 12","color":"sample string 13"}]}]}
         
### Circle [POST /companies/{company_alias}/reservations/{id}/circle?status_id={status_id}&include_statuses={include_statuses}]

Shows that the driver is circling on pickup location

+ Parameters

    + company_alias: limotest1 (required, string)
    + id: 1 (int, required)
    + status_id: 1 (int, optional)
    + include_statuses: all (String, optional).

+ Request

    + Headers

            Content-Type: application/json
            Authorization: bearer {access_token}

+ Response 200

    + Headers

            Content-Type: application/json

    + Body

            {"state":"sample string 1","transitions":[{"state":"sample string 2","transition":"sample string 3","statuses":[{"id": 1,"name": "sample string 5","color":"sample string 6"},{"id": 2,"name":"sample string 7","color":"sample string 7" }]},{"state":"sample string 8","transition":"sample string 9","statuses":[{"id":3,"name":"sample string 10","color":"sample string 11"},{"id":4,"name":"sample string 12","color":"sample string 13"}]}]}
         
### Start Wait [POST /companies/{company_alias}/reservations/{id}/start_wait?status_id={status_id}&include_statuses={include_statuses}]

Shows that the Driver started waiting for the passenger

+ Parameters

    + company_alias: limotest1 (required, string)
    + id: 1 (int, required)
    + status_id: 1 (int, optional)
    + include_statuses: all (String, optional).

+ Request

    + Headers

            Content-Type: application/json
            Authorization: bearer {access_token}

+ Response 200

    + Headers

            Content-Type: application/json

    + Body

            {"state":"sample string 1","transitions":[{"state":"sample string 2","transition":"sample string 3","statuses":[{"id": 1,"name": "sample string 5","color":"sample string 6"},{"id": 2,"name":"sample string 7","color":"sample string 7" }]},{"state":"sample string 8","transition":"sample string 9","statuses":[{"id":3,"name":"sample string 10","color":"sample string 11"},{"id":4,"name":"sample string 12","color":"sample string 13"}]}]}

### End Wait [POST /companies/{company_alias}/reservations/{id}/end_wait?status_id={status_id}&include_statuses={include_statuses}]

Shows that the Driver driver stopped waiting for the passenger.

+ Parameters

    + company_alias: limotest1 (required, string)
    + id: 1 (int, required)
    + status_id: 1 (int, optional)
    + include_statuses: all (String, optional).

+ Request

    + Headers

            Content-Type: application/json
            Authorization: bearer {access_token}

+ Response 200

    + Headers

            Content-Type: application/json

    + Body

            {"state":"sample string 1","transitions":[{"state":"sample string 2","transition":"sample string 3","statuses":[{"id": 1,"name": "sample string 5","color":"sample string 6"},{"id": 2,"name":"sample string 7","color":"sample string 7" }]},{"state":"sample string 8","transition":"sample string 9","statuses":[{"id":3,"name":"sample string 10","color":"sample string 11"},{"id":4,"name":"sample string 12","color":"sample string 13"}]}]}

### PickUp Passenger [POST /companies/{company_alias}/reservations/{id}/pick_up_passenger?status_id={status_id}&include_statuses={include_statuses}]

Shows that the driver picked up the passenger

+ Parameters

    + company_alias: limotest1 (required, string)
    + id: 1 (int, required)
    + status_id: 1 (int, optional)
    + include_statuses: all (String, optional).

+ Request

    + Headers

            Content-Type: application/json
            Authorization: bearer {access_token}

+ Response 200

    + Headers

            Content-Type: application/json

    + Body

            {"state":"sample string 1","transitions":[{"state":"sample string 2","transition":"sample string 3","statuses":[{"id": 1,"name": "sample string 5","color":"sample string 6"},{"id": 2,"name":"sample string 7","color":"sample string 7" }]},{"state":"sample string 8","transition":"sample string 9","statuses":[{"id":3,"name":"sample string 10","color":"sample string 11"},{"id":4,"name":"sample string 12","color":"sample string 13"}]}]}

### DropOff Passenger [POST /companies/{company_alias}/reservations/{id}/drop_off_passenger?status_id={status_id}&include_statuses={include_statuses}]

Shows that the driver delivered the passenger to the destination

+ Parameters

    + company_alias: limotest1 (required, string)
    + id: 1 (int, required)
    + status_id: 1 (int, optional)
    + include_statuses: all (String, optional).

+ Request

    + Headers

            Content-Type: application/json
            Authorization: bearer {access_token}

+ Response 200

    + Headers

            Content-Type: application/json

    + Body

            {"state":"sample string 1","transitions":[{"state":"sample string 2","transition":"sample string 3","statuses":[{"id": 1,"name": "sample string 5","color":"sample string 6"},{"id": 2,"name":"sample string 7","color":"sample string 7" }]},{"state":"sample string 8","transition":"sample string 9","statuses":[{"id":3,"name":"sample string 10","color":"sample string 11"},{"id":4,"name":"sample string 12","color":"sample string 13"}]}]}
  
   
### Restore [POST /companies/{company_alias}/reservations/{id}/restore?status_id={status_id}&include_statuses={include_statuses}]

Restore reservation after deleting 

+ Parameters

    + company_alias: limotest1 (required, string)
    + id: 1 (int, required)
    + status_id: 1 (int, optional)
    + include_statuses: all (String, optional).

+ Request

    + Headers

            Content-Type: application/json
            Authorization: bearer {access_token}

+ Response 200

    + Headers

            Content-Type: application/json

    + Body

            {"state":"sample string 1","transitions":[{"state":"sample string 2","transition":"sample string 3","statuses":[{"id": 1,"name": "sample string 5","color":"sample string 6"},{"id": 2,"name":"sample string 7","color":"sample string 7" }]},{"state":"sample string 8","transition":"sample string 9","statuses":[{"id":3,"name":"sample string 10","color":"sample string 11"},{"id":4,"name":"sample string 12","color":"sample string 13"}]}]}
            
### Cancel [POST /companies/{company_alias}/reservations/{id}/cancel?status_id={status_id}&include_statuses={include_statuses}]

Cancel reservation 

+ Parameters

    + company_alias: limotest1 (required, string)
    + id: 1 (int, required)
    + status_id: 1 (int, optional)
    + include_statuses: all (String, optional).

+ Request

    + Headers

            Content-Type: application/json
            Authorization: bearer {access_token}

+ Response 200

    + Headers

            Content-Type: application/json

    + Body

            {"state":"sample string 1","transitions":[{"state":"sample string 2","transition":"sample string 3","statuses":[{"id": 1,"name": "sample string 5","color":"sample string 6"},{"id": 2,"name":"sample string 7","color":"sample string 7" }]},{"state":"sample string 8","transition":"sample string 9","statuses":[{"id":3,"name":"sample string 10","color":"sample string 11"},{"id":4,"name":"sample string 12","color":"sample string 13"}]}]}
            
### Cancel by Passenger [POST /companies/{company_alias}/reservations/{id}/cancel_by_passenger?status_id={status_id}&include_statuses={include_statuses}]

Cancel reservation by passenger

+ Parameters

    + company_alias: limotest1 (required, string)
    + id: 1 (int, required)
    + status_id: 1 (int, optional)
    + include_statuses: all (String, optional).

+ Request

    + Headers

            Content-Type: application/json
            Authorization: bearer {access_token}

+ Response 200

    + Headers

            Content-Type: application/json

    + Body

            {"state":"sample string 1","transitions":[{"state":"sample string 2","transition":"sample string 3","statuses":[{"id": 1,"name": "sample string 5","color":"sample string 6"},{"id": 2,"name":"sample string 7","color":"sample string 7" }]},{"state":"sample string 8","transition":"sample string 9","statuses":[{"id":3,"name":"sample string 10","color":"sample string 11"},{"id":4,"name":"sample string 12","color":"sample string 13"}]}]}
            
### Cancel by Affiliate [POST /companies/{company_alias}/reservations/{id}/cancel_by_affiliate?status_id={status_id}&include_statuses={include_statuses}]

Cancel reservation by affiliate

+ Parameters

    + company_alias: limotest1 (required, string)
    + id: 1 (int, required)
    + status_id: 1 (int, optional)
    + include_statuses: all (String, optional).

+ Request

    + Headers

            Content-Type: application/json
            Authorization: bearer {access_token}

+ Response 200

    + Headers

            Content-Type: application/json

    + Body

            {"state":"sample string 1","transitions":[{"state":"sample string 2","transition":"sample string 3","statuses":[{"id": 1,"name": "sample string 5","color":"sample string 6"},{"id": 2,"name":"sample string 7","color":"sample string 7" }]},{"state":"sample string 8","transition":"sample string 9","statuses":[{"id":3,"name":"sample string 10","color":"sample string 11"},{"id":4,"name":"sample string 12","color":"sample string 13"}]}]}
            
### Close [POST /companies/{company_alias}/reservations/{id}/close?status_id={status_id}&include_statuses={include_statuses}]

Close reservation

+ Parameters

    + company_alias: limotest1 (required, string)
    + id: 1 (int, required)
    + status_id: 1 (int, optional)
    + include_statuses: all (String, optional).
    
+ Request

    + Headers

            Content-Type: application/json
            Authorization: bearer {access_token}

+ Response 200

    + Headers

            Content-Type: application/json

    + Body

            {"state":"sample string 1","transitions":[{"state":"sample string 2","transition":"sample string 3","statuses":[{"id": 1,"name": "sample string 5","color":"sample string 6"},{"id": 2,"name":"sample string 7","color":"sample string 7" }]},{"state":"sample string 8","transition":"sample string 9","statuses":[{"id":3,"name":"sample string 10","color":"sample string 11"},{"id":4,"name":"sample string 12","color":"sample string 13"}]}]}
        
### No Show [POST /companies/{company_alias}/reservations/{id}/no_show?status_id={status_id}&include_statuses={include_statuses}]

Sets when passenger did not arrive to pickup location

+ Parameters

    + company_alias: limotest1 (required, string)
    + id: 1 (int, required)
    + status_id: 1 (int, optional)
    + include_statuses: all (String, optional).

+ Request

    + Headers

            Content-Type: application/json
            Authorization: bearer {access_token}

+ Response 200

    + Headers

            Content-Type: application/json

    + Body

            {"state":"sample string 1","transitions":[{"state":"sample string 2","transition":"sample string 3","statuses":[{"id": 1,"name": "sample string 5","color":"sample string 6"},{"id": 2,"name":"sample string 7","color":"sample string 7" }]},{"state":"sample string 8","transition":"sample string 9","statuses":[{"id":3,"name":"sample string 10","color":"sample string 11"},{"id":4,"name":"sample string 12","color":"sample string 13"}]}]}
            
### Keep State [POST /companies/{company_alias}/reservations/{id}/keep_state?status_id={status_id}&include_statuses={include_statuses}]

Change reservation status without changing reservation state  

+ Parameters

    + company_alias: limotest1 (required, string)
    + id: 1 (int, required)
    + status_id: 1 (int, required)
    + include_statuses: all (String, optional).

+ Request

    + Headers

            Content-Type: application/json
            Authorization: bearer {access_token}
            
## Group Customer Accounts 
Provides operations with Customer Accounts.

## Create Customer Account [/create_customer_account]

### Create [POST /companies/{company_alias}/customers]

+ Parameters
    + `company_alias` (required, string) 

+ Request(application/json)
    + `email` (optional, string) 
        The value must be string with email address. 
        The value must be non-empty string with maximum length 255. 
    + `prefix` (optional, string) 
        The value must be non-empty string with maximum length 50. 
    + `first_name` (required, string) 
        The value must be non-empty string with maximum length 50. 
    + `last_name` (required, string) 
        The value must be non-empty string with maximum length 50. 
    + `billing_contact_account_id` (optional, number) 
        The value must be integer which is not less than 1. 
    + `department` (optional, string) 
        The value must be non-empty string with maximum length 50. 
    + `position` (optional, string) 
        The value must be non-empty string with maximum length 50. 
    + `billing_address` (optional, object) 
    + `billing_address.country_code` (optional, string) 
        The value must be non-empty string with maximum length 5. 
    + `billing_address.state_code` (optional, string) 
        The value must be non-empty string with maximum length 5. 
    + `billing_address.postal_code` (optional, string) 
        The value must be non-empty string with maximum length 15. 
    + `billing_address.county` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `billing_address.city` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `billing_address.address_line1` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `billing_address.address_line2` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `home_phone` (optional, string) 
        The value must be a string with a existing phone number in E.164 format. 
    + `office_phone` (optional, string) 
        The value must be a string with a existing phone number in E.164 format. 
    + `cellular_phone1` (optional, string) 
        The value must be a string with a existing phone number in E.164 format. 
    + `cellular_phone2` (optional, string) 
        The value must be a string with a existing phone number in E.164 format. 
    + `cellular_phone3` (optional, string) 
        The value must be a string with a existing phone number in E.164 format. 
    + `fax1` (optional, string) 
        The value must be a string with a existing phone number in E.164 format. 
    + `fax2` (optional, string) 
        The value must be a string with a existing phone number in E.164 format. 
    + `is_billing_contact` (optional, boolean) 
        + Default: `false` 
    + `is_booking_contact` (optional, boolean) 
        + Default: `false` 
    + `is_passenger` (optional, boolean) 
        + Default: `false` 
    + `default_payment_type_id` (optional, number) 
        The value must be integer which is not less than 1. 
    + `internal_notes` (optional, string) 
    + `preferences_notes` (optional, string) 
    + `driver_notes` (optional, string) 
    + `default_rental_agreement_id` (optional, number) 
        The value must be integer which is not less than 1. 
    + `default_primary_agent_id` (optional, number) 
        The value must be integer which is not less than 1. 
    + `default_primary_agent_reward` (optional, object) 
    + `default_primary_agent_reward.type` (optional, enum[string]) 
        + Members 
            + `percentage` 
            + `amout` 
    + `default_primary_agent_reward.amount` (optional, number) 
        The value must be non-negative decimal number. 
        + Default: `0` 
        
    + Headers 
        Accept-Encoding: gzip 
        Accept-Charset: utf-8 
        Accept: application/json 
        Content-Type: application/json;charset=utf-8 
        Authorization: bearer {access_token} 
        
    + Body 
        {
            "email": "email@sample.com",
            "prefix": "Mr.",
            "first_name": "Jerry",
            "last_name": "Harris",
            "billing_contact_account_id": 1002333256,
            "department": "communications",
            "position": "office manager",
            "billing_address": {
              "country_code": "US",
              "state_code": "NY",
              "postal_code": "11354",
              "county": "Nassau",
              "city": "Queens",
              "address_line1": "123 Main St",
              "address_line2": "apt. 26"
            },
            "home_phone": "+380930000045",
            "office_phone": "+380930000034",
            "cellular_phone1": "+380930000012",
            "cellular_phone2": "+380930000001",
            "cellular_phone3": "+380930000056",
            "fax1": "+380930000123",
            "fax2": "+380930000124",
            "is_billing_contact": true,
            "is_booking_contact": true,
            "is_passenger": true,
            "default_payment_type_id": 1,
            "internal_notes": "sample notes",
            "preferences_notes": "sample notes",
            "driver_notes": "sample notes",
            "default_rental_agreement_id": 145,
            "default_primary_agent_id": 1,
            "default_primary_agent_reward": {
              "type": "percentage",
              "amount": 1.0
            }
        } 


+ Response 409 (application/json)
    The conflict occurs when a client application attempts to create new customer account using login email (`email` field) which is used by another account. A client application can use `reason_phrase` field value to determine occurred conflict and provide an error message for end-user. A client application should not use `message` field as error message for end-user.
  description.
    + Headers 
            Content-Type: application/json 

    + Body 
{
    "reason_phrase": "Account Email Conflict",
    "message": "Specified email is used by another account.",
    "correlation_id": "57f43b6ff94a4fe08d3d7d503b340695"
}

+ Response 200 (application/json)
    + Headers 
        Content-Type: application/json; charset=utf-8 
        
    + Body 
        {
            "id": 1,
            "email": "email@sample.com",
            "prefix": "Mr.",
            "first_name": "Jerry",
            "last_name": "Harris",
            "billing_contact_account_id": 1002333256,
            "billing_contact_account": {
              "first_name": "David",
              "last_name": "Stewart",
              "email": "email@sample.com",
              "phone": "+380930000000"
            },
            "department": "communications",
            "position": "office manager",
            "billing_address": {
              "country_code": "US",
              "state_code": "NY",
              "postal_code": "11354",
              "county": "Nassau",
              "city": "Queens",
              "address_line1": "123 Main St",
              "address_line2": "apt. 26"
            },
            "home_phone": "+380930000045",
            "office_phone": "+380930000034",
            "cellular_phone1": "+380930000012",
            "cellular_phone2": "+380930000001",
            "cellular_phone3": "+380930000056",
            "fax1": "+380930000123",
            "fax2": "+380930000124",
            "is_billing_contact": true,
            "is_booking_contact": true,
            "is_passenger": true,
            "is_active": true,
            "is_locked": false,
            "default_payment_type_id": 1,
            "default_payment_type": {
              "name": "Credit Card",
              "code": "CC",
              "method": "other"
            },
            "internal_notes": "sample notes",
            "preferences_notes": "sample notes",
            "driver_notes": "sample notes",
            "default_rental_agreement_id": 145,
            "default_rental_agreement": {
              "name": "Default rental agreement"
            },
            "default_primary_agent_id": 1,
            "default_primary_agent_reward": {
              "type": "percentage",
              "amount": 1.0
            },
            "default_primary_agent": {
              "first_name": "Richard",
              "last_name": "Goodwin",
              "email": "email@sample.com",
              "phone": "+380990000367"
            }
        } 

## Get Customer Account [/GetCustomerAccountAsync]

### Get By ID [GET /companies/{company_alias}/customers/{id}] 

+ Parameters 
    + id: `1` (required, int)
    + company_alias: (required, string)

+ Request 

    + Headers 

            Content-Type: application/json 
            Authorization: bearer {access_token}

+ Response 200 (application/json)

    + Headers 

            Content-Type: application/json 

    + Body 

{
  "id": 1002334155,
  "account_number": "30257",
  "email": "email@sample.com",
  "prefix": "Mr.",
  "first_name": "Jerry",
  "last_name": "Harris",
  "billing_contact_account_id": 1002333256,
  "billing_contact_account": {
    "first_name": "David",
    "last_name": "Stewart",
    "email": "email@sample.com",
    "phone": "+380930000000"
  },
  "billing_contact_company_name": "sample company",
  "department": "communications",
  "position": "office manager",
  "billing_address": {
    "country_code": "US",
    "state_code": "NY",
    "postal_code": "11354",
    "county": "Nassau",
    "city": "Queens",
    "address_line1": "123 Main St",
    "address_line2": "apt. 26"
  },
  "home_phone": "+380930000045",
  "office_phone": "+380930000034",
  "cellular_phone1": "+380930000012",
  "cellular_phone2": "+380930000001",
  "cellular_phone3": "+380930000056",
  "fax1": "+380930000123",
  "fax2": "+380930000124",
  "is_billing_contact": true,
  "is_booking_contact": true,
  "is_passenger": true,
  "is_active": true,
  "is_locked": false,
  "default_credit_card_id": 12341235,
    "default_credit_card": {
    "holder_name": "Jerry Harris",
    "holder_type": "personal",
    "card_number_first_digit": "1",
    "card_number_last_digits": "4556",
    "card_network": "other",
    "expiration_year": 2020,
    "expiration_month": 5
  },
  "default_payment_type_id": 1,
  "default_payment_type": {
    "name": "Credit Card",
    "code": "CC",
    "method": "other"
  },
  "internal_notes": "sample notes",
  "preferences_notes": "sample notes",
  "driver_notes": "sample notes",
  "default_rental_agreement_id": 145,
  "default_rental_agreement": {
    "name": "Default rental agreement"
  },
  "default_primary_agent_id": 1,
  "default_primary_agent_reward": {
    "type": "percentage",
    "amount": 1.0
  },
  "default_primary_agent": {
    "first_name": "Richard",
    "last_name": "Goodwin",
    "email": "email@sample.com",
    "phone": "+380990000367"
  },
  "created_at": "2017-06-08T16:19:34+03:00",
  "created_by": "admin",
  "updated_at": "2017-08-10T18:10:34+03:00",
  "updated_by": "admin"
}

## Search Customer Accounts [/GetCustomerAccountsAsync]
Returns Paged Collection of Customer Accounts. 

### Get Customer Accounts [GET /companies/{company_alias}/customers?billing_contact_id={billing_contact_id}&search_in={search_in}&search_for={search_for}&page_index={page_index}&page_size={page_size}&is_active={is_active}&sort_by={sort_by}&sort_order={sort_order}] 

+ Parameters 
    + company_alias: (required, string)
    + billing_contact_id: (optional, int)
    + search_in: (optional, string)
    + search_for: (optional, string)
    + page_index: 1 (optional, int)
    + page_size: 20 (optional, int)
    + is_active: true (optional, boolean)
    + sort_by: (optional, string)
    + sort_order: (optional, string)

+ Request 

    + Headers 
            Content-Type: application/json 
            Authorization: bearer {access_token}
+ Response 200 

    + Headers 
            Content-Type: application/json 

    + Body 
{
  "total_count": 1,
  "items": [
    {
      "id": 1002334155,
      "account_number": "30257",
      "prefix": "Mr.",
      "first_name": "Jerry",
      "last_name": "Harris",
      "email": "email@sample.com",
      "billing_contact_account_id": 1002333256,
      "billing_contact_account": {
        "first_name": "David",
        "last_name": "Stewart",
        "email": "email@sample.com",
        "phone": "+380930000000"
      },
      "billing_contact_company_name": "sample company",
      "is_billing_contact": true,
      "is_booking_contact": true,
      "is_passenger": true,
      "is_active": true,
      "is_locked": false,
      "created_at": "2017-06-08T16:19:34+03:00",
      "created_by": "admin"
    },
    {
      "id": 1002334156,
      "account_number": "30258",
      "prefix": "Mrs.",
      "first_name": "Christina",
      "last_name": "Brady",
      "email": "email@sample.com",
      "billing_contact_account_id": 1002333256,
      "billing_contact_account": {
        "first_name": "David",
        "last_name": "Stewart",
        "email": "email@sample.com",
        "phone": "+380930000000"
      },
      "billing_contact_company_name": "sample company",
      "is_billing_contact": true,
      "is_booking_contact": true,
      "is_passenger": true,
      "is_active": true,
      "is_locked": false,
      "created_at": "2017-08-10T18:21:34+03:00",
      "created_by": "admin"
    }
  ]
}

### Get Billing Contacts [GET /companies/{company_alias}/customers/billing_contacts?billing_contact_id={billing_contact_id}&search_in={search_in}&search_for={search_for}&page_index={page_index}&page_size={page_size}&is_active={is_active}&sort_by={sort_by}&sort_order={sort_order}] 

+ Parameters 
    + company_alias: (required, string)
    + billing_contact_id: (optional, int)
    + search_in: (optional, string)
    + search_for: (optional, string)
    + page_index: 1 (optional, int)
    + page_size: 20 (optional, int)
    + is_active: true (optional, boolean)
    + sort_by: (optional, string)
    + sort_order: (optional, string)

+ Request 

    + Headers 
            Content-Type: application/json 
            Authorization: bearer {access_token}

+ Response 200 

    + Headers 
            Content-Type: application/json 

    + Body 

{
  "total_count": 1,
  "items": [
    {
      "id": 1002334155,
      "account_number": "30257",
      "prefix": "Mr.",
      "first_name": "Jerry",
      "last_name": "Harris",
      "email": "email@sample.com",
      "billing_contact_account_id": 1002333256,
      "billing_contact_account": {
        "first_name": "David",
        "last_name": "Stewart",
        "email": "email@sample.com",
        "phone": "+380930000000"
      },
      "billing_contact_company_name": "sample company",
      "is_billing_contact": true,
      "is_booking_contact": true,
      "is_passenger": true,
      "is_active": true,
      "is_locked": false,
      "created_at": "2017-06-08T16:19:34+03:00",
      "created_by": "admin"
    },
    {
      "id": 1002334156,
      "account_number": "30258",
      "prefix": "Mrs.",
      "first_name": "Christina",
      "last_name": "Brady",
      "email": "email@sample.com",
      "billing_contact_account_id": 1002333256,
      "billing_contact_account": {
        "first_name": "David",
        "last_name": "Stewart",
        "email": "email@sample.com",
        "phone": "+380930000000"
      },
      "billing_contact_company_name": "sample company",
      "is_billing_contact": true,
      "is_booking_contact": true,
      "is_passenger": true,
      "is_active": true,
      "is_locked": false,
      "created_at": "2017-08-10T18:21:34+03:00",
      "created_by": "admin"
    }
  ]
}

### Get Booking Contacts [GET /companies/{company_alias}/customers/booking_contacts?billing_contact_id={billing_contact_id}&search_in={search_in}&search_for={search_for}&page_index={page_index}&page_size={page_size}&is_active={is_active}&sort_by={sort_by}&sort_order={sort_order}] 

+ Parameters 
    + company_alias: (required, string)
    + billing_contact_id: (optional, int)
    + search_in: (optional, string)
    + search_for: (optional, string)
    + page_index: 1 (optional, int)
    + page_size: 20 (optional, int)
    + is_active: true (optional, boolean)
    + sort_by: (optional, string)
    + sort_order: (optional, string)

+ Request 

    + Headers 

            Content-Type: application/json 
            Authorization: bearer {access_token}

+ Response 200 

    + Headers 

            Content-Type: application/json 

    + Body 

{
  "total_count": 1,
  "items": [
    {
      "id": 1002334155,
      "account_number": "30257",
      "prefix": "Mr.",
      "first_name": "Jerry",
      "last_name": "Harris",
      "email": "email@sample.com",
      "billing_contact_account_id": 1002333256,
      "billing_contact_account": {
        "first_name": "David",
        "last_name": "Stewart",
        "email": "email@sample.com",
        "phone": "+380930000000"
      },
      "billing_contact_company_name": "sample company",
      "is_billing_contact": true,
      "is_booking_contact": true,
      "is_passenger": true,
      "is_active": true,
      "is_locked": false,
      "created_at": "2017-06-08T16:19:34+03:00",
      "created_by": "admin"
    },
    {
      "id": 1002334156,
      "account_number": "30258",
      "prefix": "Mrs.",
      "first_name": "Christina",
      "last_name": "Brady",
      "email": "email@sample.com",
      "billing_contact_account_id": 1002333256,
      "billing_contact_account": {
        "first_name": "David",
        "last_name": "Stewart",
        "email": "email@sample.com",
        "phone": "+380930000000"
      },
      "billing_contact_company_name": "sample company",
      "is_billing_contact": true,
      "is_booking_contact": true,
      "is_passenger": true,
      "is_active": true,
      "is_locked": false,
      "created_at": "2017-08-10T18:21:34+03:00",
      "created_by": "admin"
    }
  ]
}

### Get Booking Contact's Passengers [GET /companies/{company_alias}/customers/booking_contacts/{booking_contact_id}/passengers?search_in={search_in}&search_for={search_for}&page_index={page_index}&page_size={page_size}&is_active={is_active}&sort_by={sort_by}&sort_order={sort_order}] 

+ Parameters 
    + company_alias: (required, string)
    + booking_contact_id: (required, int)
    + search_in: (optional, string)
    + search_for: (optional, string)
    + page_index: 1 (optional, int)
    + page_size: 20 (optional, int)
    + is_active: true (optional, boolean)
    + sort_by: (optional, string)
    + sort_order: (optional, string)

+ Request 

    + Headers 

            Content-Type: application/json 
            Authorization: bearer {access_token}

+ Response 200 

    + Headers 

            Content-Type: application/json 

    + Body 

{
  "total_count": 1,
  "items": [
    {
      "id": 1002334155,
      "account_number": "30257",
      "prefix": "Mr.",
      "first_name": "Jerry",
      "last_name": "Harris",
      "email": "email@sample.com",
      "billing_contact_account_id": 1002333256,
      "billing_contact_account": {
        "first_name": "David",
        "last_name": "Stewart",
        "email": "email@sample.com",
        "phone": "+380930000000"
      },
      "billing_contact_company_name": "sample company",
      "is_billing_contact": true,
      "is_booking_contact": true,
      "is_passenger": true,
      "is_active": true,
      "is_locked": false,
      "created_at": "2017-06-08T16:19:34+03:00",
      "created_by": "admin"
    },
    {
      "id": 1002334156,
      "account_number": "30258",
      "prefix": "Mrs.",
      "first_name": "Christina",
      "last_name": "Brady",
      "email": "email@sample.com",
      "billing_contact_account_id": 1002333256,
      "billing_contact_account": {
        "first_name": "David",
        "last_name": "Stewart",
        "email": "email@sample.com",
        "phone": "+380930000000"
      },
      "billing_contact_company_name": "sample company",
      "is_billing_contact": true,
      "is_booking_contact": true,
      "is_passenger": true,
      "is_active": true,
      "is_locked": false,
      "created_at": "2017-08-10T18:21:34+03:00",
      "created_by": "admin"
    }
  ]
}

### Get Booking Contact's Billing Contacts [GET /companies/{company_alias}/customers/booking_contacts/{booking_contact_id}/billing_contacts?search_in={search_in}&search_for={search_for}&page_index={page_index}&page_size={page_size}&is_active={is_active}&sort_by={sort_by}&sort_order={sort_order}] 

+ Parameters 
    + company_alias: (required, string)
    + booking_contact_id: (required, int)
    + search_in: (optional, string)
    + search_for: (optional, string)
    + page_index: 1 (optional, int)
    + page_size: 20 (optional, int)
    + is_active: true (optional, boolean)
    + sort_by: (optional, string)
    + sort_order: (optional, string)

+ Request 

    + Headers 

            Content-Type: application/json 
            Authorization: bearer {access_token}

+ Response 200 

    + Headers 

            Content-Type: application/json 

    + Body 

{
  "total_count": 1,
  "items": [
    {
      "id": 1002334155,
      "account_number": "30257",
      "prefix": "Mr.",
      "first_name": "Jerry",
      "last_name": "Harris",
      "email": "email@sample.com",
      "billing_contact_account_id": 1002333256,
      "billing_contact_account": {
        "first_name": "David",
        "last_name": "Stewart",
        "email": "email@sample.com",
        "phone": "+380930000000"
      },
      "billing_contact_company_name": "sample company",
      "is_billing_contact": true,
      "is_booking_contact": true,
      "is_passenger": true,
      "is_active": true,
      "is_locked": false,
      "created_at": "2017-06-08T16:19:34+03:00",
      "created_by": "admin"
    },
    {
      "id": 1002334156,
      "account_number": "30258",
      "prefix": "Mrs.",
      "first_name": "Christina",
      "last_name": "Brady",
      "email": "email@sample.com",
      "billing_contact_account_id": 1002333256,
      "billing_contact_account": {
        "first_name": "David",
        "last_name": "Stewart",
        "email": "email@sample.com",
        "phone": "+380930000000"
      },
      "billing_contact_company_name": "sample company",
      "is_billing_contact": true,
      "is_booking_contact": true,
      "is_passenger": true,
      "is_active": true,
      "is_locked": false,
      "created_at": "2017-08-10T18:21:34+03:00",
      "created_by": "admin"
    }
  ]
}

### Get Passengers [GET /companies/{company_alias}/customers/passengers?billing_contact_id={billing_contact_id}&search_in={search_in}&search_for={search_for}&page_index={page_index}&page_size={page_size}&is_active={is_active}&sort_by={sort_by}&sort_order={sort_order}] 

+ Parameters 
    + company_alias: (required, string)
    + billing_contact_id: (optional, int)
    + search_in: (optional, string)
    + search_for: (optional, string)
    + page_index: 1 (optional, int)
    + page_size: 20 (optional, int)
    + is_active: true (optional, boolean)
    + sort_by: (optional, string)
    + sort_order: (optional, string)

+ Request 

    + Headers 

            Content-Type: application/json 
            Authorization: bearer {access_token}

+ Response 200 

    + Headers 

            Content-Type: application/json 

    + Body 

{
  "total_count": 1,
  "items": [
    {
      "id": 1002334155,
      "account_number": "30257",
      "prefix": "Mr.",
      "first_name": "Jerry",
      "last_name": "Harris",
      "email": "email@sample.com",
      "billing_contact_account_id": 1002333256,
      "billing_contact_account": {
        "first_name": "David",
        "last_name": "Stewart",
        "email": "email@sample.com",
        "phone": "+380930000000"
      },
      "billing_contact_company_name": "sample company",
      "is_billing_contact": true,
      "is_booking_contact": true,
      "is_passenger": true,
      "is_active": true,
      "is_locked": false,
      "created_at": "2017-06-08T16:19:34+03:00",
      "created_by": "admin"
    },
    {
      "id": 1002334156,
      "account_number": "30258",
      "prefix": "Mrs.",
      "first_name": "Christina",
      "last_name": "Brady",
      "email": "email@sample.com",
      "billing_contact_account_id": 1002333256,
      "billing_contact_account": {
        "first_name": "David",
        "last_name": "Stewart",
        "email": "email@sample.com",
        "phone": "+380930000000"
      },
      "billing_contact_company_name": "sample company",
      "is_billing_contact": true,
      "is_booking_contact": true,
      "is_passenger": true,
      "is_active": true,
      "is_locked": false,
      "created_at": "2017-08-10T18:21:34+03:00",
      "created_by": "admin"
    }
  ]
}

### Get Passenger's Booking Contacts [GET /companies/{company_alias}/customers/passengers/{passenger_id}/booking_contacts?search_in={search_in}&search_for={search_for}&page_index={page_index}&page_size={page_size}&is_active={is_active}&sort_by={sort_by}&sort_order={sort_order}] 

+ Parameters 
    + company_alias: (required, string)
    + passenger_id: (required, int)
    + search_in: (optional, string)
    + search_for: (optional, string)
    + page_index: 1 (optional, int)
    + page_size: 20 (optional, int)
    + is_active: true (optional, boolean)
    + sort_by: (optional, string)
    + sort_order: (optional, string)

+ Request 

    + Headers 

            Content-Type: application/json 
            Authorization: bearer {access_token}

+ Response 200 

    + Headers 

            Content-Type: application/json 

    + Body 

{
  "total_count": 1,
  "items": [
    {
      "id": 1002334155,
      "account_number": "30257",
      "prefix": "Mr.",
      "first_name": "Jerry",
      "last_name": "Harris",
      "email": "email@sample.com",
      "billing_contact_account_id": 1002333256,
      "billing_contact_account": {
        "first_name": "David",
        "last_name": "Stewart",
        "email": "email@sample.com",
        "phone": "+380930000000"
      },
      "billing_contact_company_name": "sample company",
      "is_billing_contact": true,
      "is_booking_contact": true,
      "is_passenger": true,
      "is_active": true,
      "is_locked": false,
      "created_at": "2017-06-08T16:19:34+03:00",
      "created_by": "admin"
    },
    {
      "id": 1002334156,
      "account_number": "30258",
      "prefix": "Mrs.",
      "first_name": "Christina",
      "last_name": "Brady",
      "email": "email@sample.com",
      "billing_contact_account_id": 1002333256,
      "billing_contact_account": {
        "first_name": "David",
        "last_name": "Stewart",
        "email": "email@sample.com",
        "phone": "+380930000000"
      },
      "billing_contact_company_name": "sample company",
      "is_billing_contact": true,
      "is_booking_contact": true,
      "is_passenger": true,
      "is_active": true,
      "is_locked": false,
      "created_at": "2017-08-10T18:21:34+03:00",
      "created_by": "admin"
    }
  ]
}

### Get Passenger's Billing Contacts [GET /companies/{company_alias}/customers/passengers/{passenger_id}/billing_contacts?search_in={search_in}&search_for={search_for}&page_index={page_index}&page_size={page_size}&is_active={is_active}&sort_by={sort_by}&sort_order={sort_order}] 

+ Parameters 
    + company_alias: (required, string)
    + passenger_id: (required, int)
    + search_in: (optional, string)
    + search_for: (optional, string)
    + page_index: 1 (optional, int)
    + page_size: 20 (optional, int)
    + is_active: true (optional, boolean)
    + sort_by: (optional, string)
    + sort_order: (optional, string)

+ Request 

    + Headers 

            Content-Type: application/json 
            Authorization: bearer {access_token}

+ Response 200 

    + Headers 

            Content-Type: application/json 

    + Body 

{
  "total_count": 1,
  "items": [
    {
      "id": 1002334155,
      "account_number": "30257",
      "prefix": "Mr.",
      "first_name": "Jerry",
      "last_name": "Harris",
      "email": "email@sample.com",
      "billing_contact_account_id": 1002333256,
      "billing_contact_account": {
        "first_name": "David",
        "last_name": "Stewart",
        "email": "email@sample.com",
        "phone": "+380930000000"
      },
      "billing_contact_company_name": "sample company",
      "is_billing_contact": true,
      "is_booking_contact": true,
      "is_passenger": true,
      "is_active": true,
      "is_locked": false,
      "created_at": "2017-06-08T16:19:34+03:00",
      "created_by": "admin"
    },
    {
      "id": 1002334156,
      "account_number": "30258",
      "prefix": "Mrs.",
      "first_name": "Christina",
      "last_name": "Brady",
      "email": "email@sample.com",
      "billing_contact_account_id": 1002333256,
      "billing_contact_account": {
        "first_name": "David",
        "last_name": "Stewart",
        "email": "email@sample.com",
        "phone": "+380930000000"
      },
      "billing_contact_company_name": "sample company",
      "is_billing_contact": true,
      "is_booking_contact": true,
      "is_passenger": true,
      "is_active": true,
      "is_locked": false,
      "created_at": "2017-08-10T18:21:34+03:00",
      "created_by": "admin"
    }
  ]
}

## Customer Account Credit Cards [/CustomerAccount/credit_card]

### Get Credit Card [GET /companies/{company_alias}/customers/{customer_id}/credit_cards/{id}] 

+ Parameters 
    + customer_id: (required, int)
    + id: `1` (required, int)
    + company_alias: (required, string)

+ Request 

    + Headers 

            Content-Type: application/json 
            Authorization: bearer {access_token}

+ Response 200 

    + Headers 

            Content-Type: application/json 

    + Body 

{
  "id": 1422,
  "card_number_first_digit": "4",
  "card_number_last_digits": "1111",
  "card_network": "visa",
  "holder_name": "Josh Smith",
  "holder_type": "personal",
  "expiration_year": 2017,
  "expiration_month": 11,
  "billing_address": {
    "country_code": "US",
    "state_code": "TX",
    "postal_code": "12345",
    "county": "County",
    "city": "Dallas",
    "address_line1": "12 Some Street",
    "address_line2": "14 ste"
  },
  "notes": "Some notes"
}

### Get Credit Cards [GET /companies/{company_alias}/customers/{customer_id}/credit_cards?sort_by={sort_by}&sort_order={sort_order}&page_index={page_index}&page_size={page_size}] 

+ Parameters 
    + customer_id: (required, int)
    + sort_by: (optional, string)
    + sort_order: (optional, string)
    + page_index: 1 (optional, int)
    + page_size: 20 (optional, int)
    + company_alias: (required, string)

+ Request 

    + Headers 

            Content-Type: application/json 
            Authorization: bearer {access_token}

+ Response 200 

    + Headers 

            Content-Type: application/json 

    + Body 

{
  "total_count": 1,
  "items": [
    {
      "id": 1422,
      "holder_name": "Josh Smith",
      "holder_type": "personal",
      "card_number_first_digit": "4",
      "card_number_last_digits": "1111",
      "card_network": "visa",
      "expiration_year": 2017,
      "expiration_month": 11
    }
  ]
}

### Create Credit Card [POST /companies/{company_alias}/customers/{customer_id}/credit_cards] 

+ Parameters 
    + customer_id: (required, int)
    + company_alias: (required, string)

+ Request 

    + `card_number` (string) Required. String length: inclusive between 0 and 20. 
    + `holder_name` (string) String length: inclusive between 0 and 250. 
    + `holder_type` (object) 
    + `expiration_year` (int) Range: inclusive between 1 and 9999. 
    + `expiration_month` (int) Range: inclusive between 1 and 12. 
    + `billing_address` (object) 
    + `billing_address.country_code` (string) String length: inclusive between 0 and 5. 
    + `billing_address.state_code` (string) String length: inclusive between 0 and 5. 
    + `billing_address.postal_code` (string) String length: inclusive between 0 and 15. 
    + `billing_address.county` (string) String length: inclusive between 0 and 250. 
    + `billing_address.city` (string) String length: inclusive between 0 and 250. 
    + `billing_address.address_line1` (string) String length: inclusive between 0 and 250. 
    + `billing_address.address_line2` (string) String length: inclusive between 0 and 250. 
    + `notes` (string) String length: inclusive between 0 and 500. 

    + Headers 

            Content-Type: application/json 
            Authorization: bearer {access_token} 

    + Body 

{
  "card_number": "4111111111111111",
  "holder_name": "Josh Smith",
  "holder_type": "personal",
  "expiration_year": 2017,
  "expiration_month": 11,
  "billing_address": {
    "country_code": "US",
    "state_code": "TX",
    "postal_code": "12345",
    "county": "County",
    "city": "Dallas",
    "address_line1": "12 Some Street",
    "address_line2": "14 ste"
  },
  "notes": "Some notes"
}

+ Response 200 

    + Headers 

            Content-Type: application/json 

    + Body 

{
  "id": 1422,
  "card_number_first_digit": "4",
  "card_number_last_digits": "1111",
  "card_network": "visa",
  "holder_name": "Josh Smith",
  "holder_type": "personal",
  "expiration_year": 2017,
  "expiration_month": 11,
  "billing_address": {
    "country_code": "US",
    "state_code": "TX",
    "postal_code": "12345",
    "county": "County",
    "city": "Dallas",
    "address_line1": "12 Some Street",
    "address_line2": "14 ste"
  },
  "notes": "Some notes"
}

### Update Credit Card [PUT /companies/{company_alias}/customers/{customer_id}/credit_cards/{id}] 

+ Parameters 
    + customer_id: (required, int)
    + id: `1` (required, int)
    + company_alias: (required, string)

+ Request 

    + `holder_name` (string) String length: inclusive between 0 and 250. 
    + `holder_type` (object) 
    + `expiration_year` (int) Range: inclusive between 1 and 9999. 
    + `expiration_month` (int) Range: inclusive between 1 and 12. 
    + `billing_address` (object) 
    + `billing_address.country_code` (string) String length: inclusive between 0 and 5. 
    + `billing_address.state_code` (string) String length: inclusive between 0 and 5. 
    + `billing_address.postal_code` (string) String length: inclusive between 0 and 15. 
    + `billing_address.county` (string) String length: inclusive between 0 and 250. 
    + `billing_address.city` (string) String length: inclusive between 0 and 250. 
    + `billing_address.address_line1` (string) String length: inclusive between 0 and 250. 
    + `billing_address.address_line2` (string) String length: inclusive between 0 and 250. 
    + `notes` (string) String length: inclusive between 0 and 500. 

    + Headers 

            Content-Type: application/json 
            Authorization: bearer {access_token} 

    + Body 

{
  "holder_name": "Josh Smith",
  "holder_type": "personal",
  "expiration_year": 2017,
  "expiration_month": 11,
  "billing_address": {
    "country_code": "US",
    "state_code": "TX",
    "postal_code": "12345",
    "county": "County",
    "city": "Dallas",
    "address_line1": "12 Some Street",
    "address_line2": "14 ste"
  },
  "notes": "Some notes"
}


## Customer Account Addresses [/CustomerAccount/addresses]

### Get Collection [GET /companies/{company_alias}/customers/{customer_id}/addresses/favorite?search_for={search_for}&page_index={page_index}&page_size={page_size}&type={type}] 
Returns paged collection of Account's favorite Address.

+ Parameters 
    + company_alias: (required, string)
    + customer_id: (required, int)
    + search_for: (optional, string)
    + type: (optional, string)
    + page_index: 1 (optional, int)
    + page_size: 20 (optional, int)

+ Request

    + `search_for` (String). Use for filter by Address components (name, country, city, zip etc.).
    + `type` (String). Possible values: 'home', 'work', 'other'.

    + Headers 

            Content-Type: application/json 
            Authorization: bearer {access_token}

+ Response 200 

    + Headers 

            Content-Type: application/json 

    + Body 

{"total_count":2,"items":[{"id":1,"type":"home","address":{"name":"sample string 1","country_code":"sample string 2","state_code":"sample string 3","postal_code":"sample string 4","city":"sample string 5","address_line1":"sample string 6","address_line2":"sample string 7"},"location":{"latitude":1.1,"longitude":2.1}},{"id":1,"type":"work","address":{"name":"sample string 8","country_code":"sample string 9","state_code":"sample string 10","postal_code":"sample string 11","city":"sample string 12","address_line1":"sample string 13","address_line2":"sample string 14"},"location":{"latitude":1.1,"longitude":2.1}}]}

### Get By ID [GET /companies/{company_alias}/customers/{customer_id}/addresses/favorite/{id}] 
Returns Account favorite Address by specified ID.

+ Parameters 
    + company_alias: (required, string)
    + customer_id: (required, int).
    + id: `1` (required, int).

+ Request 

    + Headers 

            Content-Type: application/json 
            Authorization: bearer {access_token}

+ Response 200 

    + Headers 

            Content-Type: application/json 

    + Body 

{"id":1,"type":"home","address":{"name":"sample string 1","country_code":"sample string 2","state_code":"sample string 3","postal_code":"sample string 4","city":"sample string 5","address_line1":"sample string 6","address_line2":"sample string 7"},"location":{"latitude":1.1,"longitude":2.1}}


## Group Notification Subscriptions

Operator's app can subscribe to receive notifications about reservation events via <a href="#reference/notification-subscriptions/web-hook">Web Hooks</a>.


Table below describes all possible request/response parameters for the Subscription process methods:


#### *Create Web Hook Subscription* request parameters

| Name | Type | Required | Description |
|-----------------------------------------------|-----------|--------|--------------------------------------------------------------------------------------|
| url | string | Yes | Notification will be sent to this endpoint |
| events | object | Yes | List of events to subscribe on |

Check the table of supported `events`:

| Event | Description |
|---------------------|----------------------------------------|
| reservation.created | New reservation was created. |
| reservation.updated | Reservation was updated. |
| reservation.rejected | Executor rejected the reservation. After this event any processing of reservation will be suppressed. |
| reservation.unassigned | Driver has been unassigned from the reservation. After this event previously accepted driver and car information becomes irrelevant. |
| reservation.driver_is_on_the_way | Driver is on the way to pick-up location. Payload of webhook for this event may contain driver and car information. |
| reservation.driver_is_at_pickup | Driver has arrived at the pick-up location. Payload of webhook for this event may contain driver and car information. |
| reservation.driver_is_waiting_for_passenger_started | Driver has started waiting for passenger at current location (additional fee may be included in final charges). |
| reservation.driver_is_waiting_for_passenger_stopped | Driver has stopped waiting for passenger at current location. |
| reservation.passenger_in_car | Passenger has been picked up. |
| reservation.passenger_dropped_off | Passenger has been dropped off. |
| reservation.cancelled | Reservation has been cancelled. |
| reservation.closed | Reservation has been closed. Payload for this event will contain final charges. After this event any processing of reservation will be suppressed. |

The list of events may be extended in future.

The response is the same as in <a href="#reference/reservations/get-reservations/get-reservation">Get Reservation</a> request.

## Web Hook [/Web Hook]

To subscribe you need to specify the list of events and the url you would want to receive notifications to.

### Create Or Update [PUT /operators/self/subscriptions/webhook]
Allows you to specify the list of events you want to subscribe to.

+ Request

    + `url` (string) Required.
    + `events` (object) Required.

    + Headers

            Content-Type: application/json
            Authorization: bearer {access_token}

    + Body

            { "url": "http://some-url.net", "events": [ "reservation.created", "reservation.closed" ] }

+ Response 204

### Delete [DELETE /operators/self/subscriptions/webhook]
Allows you to remove events you want to unsubscribe from.

+ Request

    + `url` (string) Required.
    + `events` (object) Required.

    + Headers

            Content-Type: application/json
            Authorization: bearer {access_token}

    + Body

            { "url": "http://some-url.net", "events": [ "reservation.created", "reservation.closed" ] }

+ Response 204
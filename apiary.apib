FORMAT: 1A
HOST: https://sandbox-api.mylimobiz.com/

# Operator API

## Overview

The Operator API allows custom applications to interact programmatically with Limo Anywhere. Using the Operator API you interact with resources allowing for actions such as:

- Operator Sign Up.
- Rate Lookup & Calculation.
- Reservation Creation/Modification/Cancellation.

The API accepts/returns JSON data and attempts to conform to the <a href="https://en.wikipedia.org/wiki/Representational_state_transfer">RESTful</a> design principles. You can interact with the resources exposed via the API by accessing resource collections and element URIs by using the HTTP verbs (GET, POST, PUT, and DELETE). 

## General Requirements

To use the Limo Anywhere Operator API  in your application, you must have an API authentication token from the token service. See the <a href="#reference/authentication">Authentication documentation</a> for the authorization guide.

<b>Before you can generate an access token, you must agree to the API Terms of Service and receive a Client ID and Client Secret from Limo Anywhere.</b> 

If you have not done this and would like to use the API, please email api@limoanywhere.com

## HTTP Status Codes

| Status Code | Label | Returned After|
|--------------------------|---------------------------|--------------------------------------------------------------------------------|
|200 | OK.| Operation worked as expected. |
|201 | Created. | Successful POST where a resource was created. |
|202 | Accepted. |Successful operation. |
|204 | No Content. | GET request where content doesn't exist. |
|400 | Bad request. | |
|401 | Unauthorized. | Request when API client credentials or operator credentials have not been validated. |
|403 | Forbidden. | Unauthorized requests such as improper OAuth 2.0 scopes or permissions issues. |
|404 | Not Found. |  Requested resource was not found. |
|409 | Conflict. | A conflict exists and needs to be resolved before the request can be made. |
|429 | Too Many Requests. | Rate limit has been reached. |
|500 | Internal Server Error. |  |

## Getting Started

Follow the below steps to complete some of the most popular actions.

<b> Get Authorization to use the Operator API before doing anything else.</b>

1. Contact api@limoanywhere.com and receive your Client Id & Client Secret.
2. Use Client Id & Client Secret to generate an access token as described <a href="/#reference/authentication">here.</a>

Once you have completed the above, choose a sub-section to follow:

<b> Create a Booking</b>

1. Call the <a href="/#reference/booking/rate-lookup/rate-lookup">Rate Lookup</a> method to get the pricing for your trip requirements. Choose the optimal pricing and hold the `Id` of this rate from the `results` array.
2. Use the <a href="/#reference/booking/booking/booking">Booking</a> method. In `search_result_id` parameter set the rate Id of the desired rate and provide additional necessary information: payment, passengers, optional rates etc.

<b> Create a Quote</b>

1. Call the <a href="/#reference/booking/rate-lookup/rate-lookup">Rate Lookup</a> method to get the pricing for your trip requirements. Choose the optimal pricing and hold the `Id` of this rate from the `results` array.
2. Use the <a href="/#reference/booking/rate-lookup/create-quote">Create Quote</a> method. In the `search_result_id` parameter, use the search result Id from the <a href="#reference/booking/rate-lookup/rate-lookup">Rate Lookup</a> method and provide additional necessary information (same as the <a href="#reference/booking/booking/booking">Booking</a> process)








## Group Authentication
The API uses the <a href="https://tools.ietf.org/html/rfc6749"> OAuth 2.0 </a> protocol for simple, but effective authentication and authorization.
All API endpoints require an OAuth access token, thus we have exposed a service that will provide the user with an OAuth 2 Access token.
This token should be provided in the header in all requests.




## GET Access Token [/get]

We support 2 ways of obtaining authorization:

- <b>Client Credentials Grant: </b>Authenticates as a general client. Allows access to general resources that do not need operator account authentication.
- <b>Resource Owner Credentials Grant: </b>Authenticates as a specific operator account. Allows access to operator account resources and general resources.

### Basic Steps for getting an 'access_token':

1. Choose one of the suitable methods of obtaining Authorization described above (Client or Resource Owner.)
2. Create the appropriate request. Parameter `grant_type` will depend on Authorization method:


### Client Credentials Grant [POST /oauth2/token]
`grant_type` = `client_credentials`

+ Request

    + `grant_type` (string) Required. String length: inclusive between 0 and 50.f
    + `client_id` (string) Required. String length: inclusive between 6 and 50.
    + `client_secret` (string) Required. String length: inclusive between 50 and 50.
 
    + Headers

            Content-Type: application/json

    + Body

            {
                "grant_type": "client_credentials",
                "client_id": "la_operator_test",
                "client_secret": "lcfLYzj7RaUgmRp8sVngt2fpD5GaBJ19Ptt2MrNSlF57GI5kAR",
            }

+ Response 200 (application/json)
    
    + Body

            {
                "access_token": "YE0W7CSdfVaQFmC8GTQ1",
                "token_type": "bearer",
                "expires_in": 3600,
            }

### Resource Owner Credentials Grant [POST /oauth2/token]
`grant_type` = `password`

+ Request

    + `grant_type` (string) Required. String length: inclusive between 0 and 50.
    + `client_id` (string) Required. String length: inclusive between 6 and 50.
    + `client_secret` (string) Required. String length: inclusive between 50 and 50.
    + `company_alias` (string) String length: inclusive between 0 and 50.
    + `username` (string) String length: inclusive between 0 and 50.
    + `password` (string) String length: inclusive between 0 and 50.
 
    + Headers

            Content-Type: application/json

    + Body

            {
                "grant_type": "password",
                "client_id": "la_operator_test",
                "client_secret": "lcfLYzj7RaUgmRp8sVngt2fpD5GaBJ19Ptt2MrNSlF57GI5kAR",
                "company_alias": "test_alias",
                "username": "passenger@test.com",
                "password": "password"
            }

+ Response 200 (application/json)
    
    + Body

            {
                "access_token": "YE0W7CSdfVaQFmC8GTQ1",
                "refresh_token": "yuMF7U7FHMCL2cuI5qKV",
                "token_type": "bearer",
                "expires_in": 3600
            }


## Refresh Access Token [/refresh]
Your access token will expire after a period of time and must be refreshed. Time until token expiration is provided in the `expired_in` parameter when receiving your token. <b>If you receive a 401 error, you may need to refresh your token.</b>


### Refresh [POST /oauth2/token]

+ Request

    + `grant_type` (string) Required. String length: inclusive between 0 and 50.
    + `refresh_token` (string) Required. String length: 20.
    + `client_id` (string) Required. String length: inclusive between 6 and 50.
    + `client_secret` (string) Required. String length: inclusive between 50 and 50.
 
    + Headers

            Content-Type: application/json

    + Body

            {
                "grant_type": "refresh_token",
                "refresh_token": "CSYE0W7dfVaQFmC8GTQPL",
                "client_id": "la_operator_test",
                "client_secret": "lcfLYzj7RaUgmRp8sVngt2fpD5GaBJ19Ptt2MrNSlF57GI5kAR"
            }

+ Response 200 (application/json)
    
    + Body

            {
                "access_token": "YE0W7CSdfVaQFmC8GTQ1",
                "token_type": "bearer",
                "expires_in": 3600
            }


The tables below describe all possible request/response parameters:

#####Request:

| Parameter | Description |
|------------------|-------------------------------------------------------------------------------------------------------------------------|
| grant_type | Type of Grant described above. Possible values: `client_credentials`, `authorization_code`, `password`, `refresh_token` |
| client_id | The client ID of your application |
| client_secret | The client Secret of your application |
| company_alias | The Alias of you company |
| username | Username or Email |
| passwod | Password |

#####Response:

| Parameter | Description |
|------------------|------------------------------------------------------------|
| access_token | Access Token |
| token_type | Token type (Always `bearer`) |
| expires_in | Expiration time of Access token (in seconds) |
| refresh_token | Refresh Token |


### Possible Authentication Errors

| Parameter | Description |
|-------------------------------|---------------------------------------------------------------|
| invalid_request | Required parameters were not provided |
| invalid_client | The Ð¡lient ID or Clernt secret provided is invalid |
| invalid_scope (not used now) | The scope parameter provided is not a valid subset of scopes |
| unsupported_grant_type | Unsupported Grand Type provided |


In 'execution' console you can see request/response samples, data types and sizes of parameters

## Group General Resources

The resources in this section can be used to assist with populating form elements or using auto-complete functionality.

## Payment Types [/payment_types]
The available Payment Types (methods) for company. Payment type "type" values: other, credit_card, bill.

### Get Collection [GET /companies/{company_alias}/resources/payment_types?is_active={is_active}&page_index={page_index}&page_size={page_size}]
Returns a paged collection of Payment Types.

+ Parameters
    + is_active: true (optional, boolean)
    + page_index: 1 (optional, int)
    + page_size: 20 (optional, int)
    + company_alias: limotest1 (required, string)
    
+ Request

+ Headers

        Content-Type: application/json
        Authorization: bearer {access_token}
+ Response 200

    + Headers

        Content-Type: application/json

    + Body

        { "total_count": 2, "items": [ { "id": 1, "name": "sample string 1", "type": "other", "isActive": true }, { "id": 2, "name": "sample string 2", "type": "other", "isActive":false } ] }        

### Get By Id [GET /companies/{company_alias}/resources/payment_types/{id}]
Returns the Payment Type by Id.
+ Parameters
    + id: `1` (required, int)
    + company_alias: limotest1 (required, string)

+ Request

    + Headers

            Content-Type: application/json
            Authorization: bearer {access_token}

+ Response 200

    + Headers
            Content-Type: application/json
            
    + Body

        { "id": 1, "name":"sample string", "type": "other", "is_active":true }
  
## Payment Gateways [/payment_gateways]
The available Payment Gateways for company.

### Get Collection [GET /companies/{company_alias}/resources/payment_gateways?page_index={page_index}&page_size={page_size}]
Returns a paged collection of Payment Gateways.

+ Parameters
    + company_alias: limotest1 (required, string)
    + page_index: 1 (optional, int)
    + page_size: 20 (optional, int)

+ Request

+ Headers

        Content-Type: application/json
        Authorization: bearer {access_token}
+ Response 200

    + Headers
        Content-Type: application/json

    + Body
        {"total_count":2,"items":[{"id":1,"name":"sample string 1"},{"id":2,"name": "sample string 2"}]}

### Get By Id [GET /companies/{company_alias}/resources/payment_gateways/{id}]
Returns the Payment Gateway by Id.
+ Parameters
    + company_alias: limotest1 (required, string)
    + id: `1` (required, int)

+ Request

    + Headers

            Content-Type: application/json
            Authorization: bearer {access_token}

+ Response 200

    + Headers
        Content-Type: application/json
        
    + Body
       {"id": 1,"name": "sample string 1","gateway": "sample string 2","parameter1": "sample string 3","parameter2": "sample string 4","parameter3": "sample string 5","parameter4": "sample string 6"}
       
## Vehicle Types [/vehicle_types] 
The available Vehicle Types for company.

### Get Collections [GET /companies/{company_alias}/resources/vehicle_types?is_active={is_active}&is_visible={is_visible}&page_index={page_index}&page_size={page_size}&service_type_id={service_type_id}]
Returns a paged collection of Vehicle Types.

+ Parameters

    + company_alias: limotest1 (required, string)
    + is_active: true (optional, boolean)
    + is_visible: true (optional, boolean)
    + page_index: 1 (optional, int)
    + page_size: 20 (optional, int)
    + service_type_id: 1 (optional, int)

+ Request
    + Headers
            Content-Type: application/json
            Authorization: bearer {access_token}

+ Response 200

    + Headers
            Content-Type: application/json

    + Body
            {"total_count":2,"items":[{"id":1,"images":["http://webapihelppage1.com","http://webapihelppage2.com"],"name":"sample string 1","passenger_capacity":1,"luggage_capacity": 1,"color":"#ee1d24","description":"sample string 2","is_handicap_accessible":true,"is_active":true,"is_visible":true},{"id":2,"images":["http://webapihelppage3.com","http://webapihelppage4.com"],"name": "sample string 3","passenger_capacity":1,"luggage_capacity":1,"color":"#ee1d24","description":"sample string 4","is_handicap_accessible":true,"is_active":true,"is_visible": true}]}
    
### Get By Id [GET /companies/{company_alias}/resources/vehicle_types/{id}]
Returns the Vehicle Type by Id

+ Parameters
    + company_alias: limotest1 (required, string)
    + id: `1` (required, int)

+ Request    
    + Headers 
        Content-Type: application/json 
        Authorization: bearer {access_token}   
        
+ Response 200

    + Headers
        Content-Type: application/json

    + Body
        {"id":1,"images":["http://webapihelppage1.com","http://webapihelppage2.com"],"name":"sample string 1","passenger_capacity":1,"luggage_capacity": 1,"color":"#ee1d24","description":"sample string 2","is_handicap_accessible":true,"is_active":true,"is_visible":true}
    
## Cars [/cars]
The available Cars for company.

### Get Collections [GET /companies/{company_alias}/resources/cars?is_active={is_active}&page_index={page_index}&page_size={page_size}]
Returns a paged collection of Cars.

+ Parameters

    + company_alias: limotest1 (required, string)
    + is_active: true (optional, boolean)
    + page_index: 1 (optional, int)
    + page_size: 20 (optional, int)

+ Request
    + Headers
            Content-Type: application/json
            Authorization: bearer {access_token}

+ Response 200

    + Headers
            Content-Type: application/json

    + Body
            {"total_count":2,"items":[{"id": 1,"name": "sample string 1","vehicle_type_id": 4,"notes": "sample string 2","car_make": "sample string 3","car_model": "sample string 4","car_color": "sample string 5","color": "sample string 6","passenger_capacity": 5,"license_plate": "sample string 7","is_active": true,"cellular_phone": "sample string 8","cellular_phone_wireless_provider": "sample string 9"},{"id": 2,"name": "sample string 10","vehicle_type_id": 4,"notes": "sample string 11","car_make": "sample string 12","car_model": "sample string 13","car_color": "sample string 14","color": "sample string 15","passenger_capacity": 4,"license_plate": "sample string 16","is_active": true,"cellular_phone": "sample string 17","cellular_phone_wireless_provider": "sample string 18"}]}
    
### Get By Id [GET /companies/{company_alias}/resources/cars/{id}]
Returns the Car by Id

+ Parameters
    + company_alias: limotest1 (required, string)
    + id: `1` (required, int)

+ Request    
    + Headers 
        Content-Type: application/json 
        Authorization: bearer {access_token}   
        
+ Response 200

    + Headers
        Content-Type: application/json

    + Body
        {"id": 1,"name": "sample string 1","vehicle_type_id": 4,"notes": "sample string 2","car_make": "sample string 3","car_model": "sample string 4","car_color": "sample string 5","color": "sample string 6","passenger_capacity": 5,"license_plate": "sample string 7","is_active": true,"cellular_phone": "sample string 8","cellular_phone_wireless_provider": "sample string 9"}
    
    
## Drivers [/drivers]
The available Drivers for company.

### Get Collections [GET /companies/{company_alias}/resources/drivers?is_active={is_active}&page_index={page_index}&page_size={page_size}]
Returns a paged collection of Drivers.

+ Parameters

    + company_alias: limotest1 (required, string)
    + is_active: true (optional, boolean)
    + page_index: 1 (optional, int)
    + page_size: 20 (optional, int)

+ Request
    + Headers
            Content-Type: application/json
            Authorization: bearer {access_token}

+ Response 200

    + Headers
            Content-Type: application/json

    + Body
           {"total_count":2,"items":[{"id": 1,"first_name":"sample string 1","last_name":"sample string 2","car_id":2,"portrait":"http://webapihelppage1.com","cellular_phone":"sample string 3","cellular_phone_wireless_provider":"sample string 4","notes":"sample string 5","is_active":true},{"id":3,"first_name":"sample string 6","last_name":"sample string 7","car_id": 4,"portrait":"http://webapihelppage2.com","cellular_phone":"sample string 8","cellular_phone_wireless_provider":"sample string 9","notes":"sample string 10","is_active":true}]}
    
### Get By Id [GET /companies/{company_alias}/resources/drivers/{id}]
Returns the Driver by Id

+ Parameters
    + company_alias: limotest1 (required, string)
    + id: `1` (required, int)

+ Request    
    + Headers 
        Content-Type: application/json 
        Authorization: bearer {access_token}   
        
+ Response 200

    + Headers
        Content-Type: application/json

    + Body
       {"id": 1,"first_name":"sample string 1","last_name":"sample string 2","car_id":2,"portrait":"http://webapihelppage1.com","cellular_phone":"sample string 3","cellular_phone_wireless_provider":"sample string 4","notes":"sample string 5","is_active":true}
    
            
## Service Types [/service_types]
The available Service Types for company.

### Get Collection [GET /companies/{company_alias}/resources/service_types?is_active={is_active}&page_index={page_index}&page_size={page_size}]
Returns a paged collection of Service Types. 

+ Parameters
    + is_active: true (optional, boolean)
    + page_index: 1 (optional, int) 
    + page_size: 20 (optional, int)
    + company_alias: limotest1 (required, string)

+ Request

    + Headers

            Content-Type: application/json
            Authorization: bearer {access_token}

+ Response 200

    + Headers

            Content-Type: application/json

    + Body

            { "total_count": 2, "items": [ { "id"Typ: 1, "name": "Hourly/As Directed", "is_active": true }, { "id": 2, "name": "Airport Arrival", "is_active": true } ] }

### Get By Id [GET /companies/{company_alias}/resources/service_types/{id}]
Returns the Service Type by Id.
+ Parameters
    + id: `1` (required, int)

+ Request

    + Headers

            Content-Type: application/json
            Authorization: bearer {access_token}

+ Response 200

    + Headers

            Content-Type: application/json

    + Body

            { "id": 1, "name": "Hourly/As Directed", "is_active": true }


## Airports [/airports]
Provides read operations for Airports.

### Get By Iata code [GET /companies/{company_alias}/resources/airports?iata={iata}] 
Returns Airport by Iata code.

+ Parameters 
    + iata: (required, string)
    + company_alias: (required, string)

+ Request 

    + Headers 

            Content-Type: application/json 
            Authorization: bearer {access_token}

+ Response 200 

    + Headers 

            Content-Type: application/json 

    + Body 

{
  "iata": "sample string 1",
  "name": "sample string 2",
  "address": {
    "name": "sample string 1",
    "country_code": "sample string 2",
    "state_code": "sample string 3",
    "postal_code": "sample string 4",
    "city": "sample string 5",
    "address_line1": "sample string 6",
    "address_line2": "sample string 7"
  },
  "location": {
    "latitude": 1.1,
    "longitude": 2.1
  }
}

### Get Collecton [GET /companies/{company_alias}/resources/airports?search_for={search_for}&page_index={page_index}&page_size={page_size}] 
Returns a paged collection of Airports.
Use `search_for` parameter to filter results by airport Iata code or name.

+ Parameters 
    + search_for: (optional, string)
    + page_index: 1 (optional, int)
    + page_size: 20 (optional, int)
    + company_alias: (required, string)

+ Request 

    + Headers 

            Content-Type: application/json 
            Authorization: bearer {access_token}

+ Response 200 

    + Headers 

            Content-Type: application/json 

    + Body 

{
  "total_count": 1,
  "items": [
    {
      "iata": "sample string 1",
      "name": "sample string 2",
      "address": {
        "name": "sample string 1",
        "country_code": "sample string 2",
        "state_code": "sample string 3",
        "postal_code": "sample string 4",
        "city": "sample string 5",
        "address_line1": "sample string 6",
        "address_line2": "sample string 7"
      },
      "location": {
        "latitude": 1.1,
        "longitude": 2.1
      }
    },
    {
      "iata": "sample string 1",
      "name": "sample string 2",
      "address": {
        "name": "sample string 1",
        "country_code": "sample string 2",
        "state_code": "sample string 3",
        "postal_code": "sample string 4",
        "city": "sample string 5",
        "address_line1": "sample string 6",
        "address_line2": "sample string 7"
      },
      "location": {
        "latitude": 1.1,
        "longitude": 2.1
      }
    }
  ]
}

## Airlines [/airlines]
Provides read operations for Airlines.

### Get By Iata code [GET /companies/{company_alias}/resources/airlines?iata={iata}] 
Returns Airline by Iata code.

+ Parameters 
    + iata: (required, string)
    + company_alias: (required, string)

+ Request 

    + Headers 

            Content-Type: application/json 
            Authorization: bearer {access_token}

+ Response 200 

    + Headers 

            Content-Type: application/json 

    + Body 

{
  "iata": "sample string 1",
  "name": "sample string 2"
}
 
### Get Collection [GET /companies/{company_alias}/resources/airlines?search_for={search_for}&page_index={page_index}&page_size={page_size}] 
Returns paged collection of Airlines.
Use `search_for` parameter to filter results by airport Iata code or name.

+ Parameters 
    + search_for: (optional, string)
    + page_index: 1 (optional, int)
    + page_size: 20 (optional, int)
    + company_alias: (required, string)

+ Request 

    + Headers 

            Content-Type: application/json 
            Authorization: bearer {access_token}

+ Response 200 

    + Headers 

            Content-Type: application/json 

    + Body 

{
  "total_count": 1,
  "items": [
    {
      "iata": "sample string 1",
      "name": "sample string 2"
    },
    {
      "iata": "sample string 1",
      "name": "sample string 2"
    }
  ]
}


## Seaports [/seaports]
Provides read operations for Seaports.

### Get Collecton [GET /companies/{company_alias}/resources/seaports?search_for={search_for}&page_index={page_index}&page_size={page_size}] 
Returns a paged collection of Seaports.
Use `search_for` parameter to filter results by seaport code or name.

+ Parameters 
    + company_alias: (required, string)
    + search_for: (optional, string)
    + page_index: 1 (optional, int)
    + page_size: 20 (optional, int)

+ Request 

    + Headers 

            Content-Type: application/json 
            Authorization: bearer {access_token}

+ Response 200 

    + Headers 

            Content-Type: application/json 

    + Body 

{"total_count":2,"items":[{"id":1,"code":"sample string 1","name":"sample string 2","address":{"name":"sample string 3","country_code":"sample string 4","state_code":"sample string 5","postal_code": "sample string 6","city":"sample string 7","address_line1":"sample string 8","address_line2":"sample string 9"},"location":{"latitude": 1.1,"longitude": 2.1}},{"id":2,"code": "sample string 10","name": "sample string 11","address":{"name":"sample string 12","country_code":"sample string 13","state_code":"sample string 14","postal_code":"sample string 15","city":"sample string 16","address_line1": "sample string 17","address_line2":"sample string 18"},"location":{"latitude":1.1,"longitude":2.1}}]}


## Private Airlines [/fbos]
Provides read operations for Private Airlines.

### Get Collection [GET /companies/{company_alias}/resources/fbos?is_active={is_active}&search_for={search_for}&page_index={page_index}&page_size={page_size}] 
Returns paged collection of Private Airlines.
Use `search_for` parameter to filter results by Airport Iata code or Airline Name.

+ Parameters 
    + company_alias: (required, string)
    + search_for: (optional, string)
    + is_active: true (optional, boolean)
    + page_index: 1 (optional, int)
    + page_size: 20 (optional, int)

+ Request 

    + Headers 

            Content-Type: application/json 
            Authorization: bearer {access_token}

+ Response 200 

    + Headers 

            Content-Type: application/json 

    + Body 

{"total_count":2,"items":[{"airport_iata":"sample string 1","name":"sample string 2","phone":"sample string 3","instructions":"sample string 4","address":{"name":"sample string 3","country_code":"sample string 4","state_code":"sample string 5","postal_code": "sample string 6","city":"sample string 7","address_line1":"sample string 8","address_line2":"sample string 9"},"location":{"latitude": 1.1,"longitude": 2.1},"is_active":true},{"airport_iata":"sample string 1","name":"sample string 2","phone":"sample string 3","instructions":"sample string 4","address":{"name":"sample string 12","country_code":"sample string 13","state_code":"sample string 14","postal_code":"sample string 15","city":"sample string 16","address_line1": "sample string 17","address_line2":"sample string 18"},"location":{"latitude":1.1,"longitude":2.1},"is_active":true}]}

### Get By Id [GET /companies/{company_alias}/resources/fbos?{id}] 
Returns Private Airline by Id.
 
+ Parameters
    + id: `1` (required, int)

+ Request

    + Headers

            Content-Type: application/json
            Authorization: bearer {access_token}

+ Response 200

    + Headers
            Content-Type: application/json

    + Body
            {"airport_iata":"sample string 1","name":"sample string 2","phone":"sample string 3","instructions":"sample string 4","address":{"name":"sample string 3","country_code":"sample string 4","state_code":"sample string 5","postal_code": "sample string 6","city":"sample string 7","address_line1":"sample string 8","address_line2":"sample string 9"},"location":{"latitude": 1.1,"longitude": 2.1},"is_active":true}


## Group Reservations

## Get Reservations  [/Reservation/get]

### Get Reservation [GET /companies/{company_alias}/reservations/{id}] 

+ Parameters 
    + id: `1` (required, int)
    + company_alias: (required, string)

+ Request 

    + Headers 

            Content-Type: application/json 
            Authorization: bearer {access_token}

+ Response 200 

    + Headers 

            Content-Type: application/json 

    + Body 

{
  "id": 57414239,
  "state": "unassigned",
  "state_reason": "undefined",
  "status_id": 118728,
  "status": {
    "name": "Unassigned",
    "color": "#FFFFCC"
  },
  "created_at": "2017-04-14T18:25:09",
  "created_by": "admin",
  "vehicle_type": {
    "name": "BMW"
  },
  "service_type": {
    "name": "Airport Departure"
  },
  "credit_card": {
    "holder_type": "unknown",
    "card_number_first_digit": "5",
    "card_number_last_digits": "1462",
    "card_network": "master_card",
    "expiration_year": 2020,
    "expiration_month": 11
  },
  "payment_type": {
    "name": "Credit Card",
    "method": "other"
  },
  "primary_agent": {},
  "secondary_agent": {},
  "rental_agreement": {
    "name": "Rental 1"
  },
  "primary_driver": {
    "first_name": "Cleder",
    "last_name": "Cueto"
  },
  "secondary_driver": {
    "first_name": "Richard",
    "last_name": "Goodwin"
  },
  "primary_car": {
    "license_plate": "LAL 44",
    "car_make": "Lincoln",
    "color": "BLACK"
  },
  "secondary_car": {
    "license_plate": "LAL 11",
    "car_make": "Cadillac",
    "color": "BLACK"
  },
  "preferred_vehicle_type": {
    "name": "Tesla Model S"
  },
  "preferred_primary_driver": {
    "first_name": "Alvin",
    "last_name": "Swanson",
    "phone": "+18008679878"
  },
  "preferred_secondary_driver": {
    "first_name": "Vernon",
    "last_name": "Poovey"
  },
  "confirmation_number": "39666",
  "scheduled_pickup_at": "2017-04-14T18:27:00",
  "scheduled_dropoff_at": "2017-04-14T20:16:00",
  "payment_terms": "due_upon_receipt",
  "payment_status": "unpaid",
  "luggage_count": 1,
  "passenger_count": 1,
  "infant_child_seat_count": 2,
  "booster_child_seat_count": 1,
  "toddler_child_seat_count": 1,
  "is_handicap_access_required": true,
  "pickup": {
    "name": "Name of Address",
    "scheduled_arrival_at": "2017-04-15T12:54:00",
    "action": "pickup",
    "notes": "pickup notes",
    "address": {
      "country_code": "US",
      "state_code": "NY",
      "postal_code": "11354",
      "city": "Queens",
      "address_line1": "123 Main St"
    },
    "location": {
      "latitude": 40.7624474,
      "longitude": -73.83165
    }
  },
  "stops": [
    {
      "name": "Amtrak: Back Bay Station",
      "action": "stop",
      "address": {
        "country_code": "US",
        "state_code": "MA",
        "postal_code": "02116",
        "city": "Boston",
        "address_line1": "145 Dartmouth St"
      },
      "location": {
        "latitude": 42.34734,
        "longitude": -71.075386
      }
    }
  ],
  "dropoff": {
    "name": "John F. Kennedy International Airport",
    "scheduled_arrival_at": "2017-04-15T07:03:00",
    "action": "dropoff",
    "address": {
      "state_code": "NY"
    },
    "flight": {
      "airport_code": "JFK",
      "airline_code": "AA",
      "flight_number": "9070",
      "tail_number": "A7-E3",
      "terminal": "4",
      "gateway": "A7",
      "meet_option": "curbside",
      "departure_from_or_arrival_to": "AUH",
      "departure_at_or_arrival_at": "2017-04-15T07:23:00"
    },
    "location": {
      "latitude": 40.63975,
      "longitude": -73.77892
    }
  },
  "booking_contact_account_id": 1003427363,
  "booking_contact": {
    "first_name": "David",
    "last_name": "Stewart",
    "email": "email@sample.com",
    "phone": "+380930000000"
  },
  "billing_contact_account_id": 1001351994,
  "billing_contact": {
    "first_name": "Jerry",
    "last_name": "Harris"
  },
  "passengers": [
    {
      "passenger_account_id": 1002334155,
      "passenger": {
        "first_name": "Christina",
        "last_name": "Brady",
        "email": "email@sample.com",
        "phone": "+380930000000"
      }
    }
  ],
  "vehicle_type_id": 14421,
  "service_type_id": 88301,
  "credit_card_id": 7019493,
  "payment_type_id": 1,
  "paid_amount": 0.0,
  "authorized_amount": 0.0,
  "total_amount": 196.89,
  "primary_agent_id": 2,
  "primary_agent_reward": {
    "type": "amout",
    "amount": 20.0
  },
  "secondary_agent_id": 35,
  "secondary_agent_reward": {
    "type": "percentage",
    "amount": 3.0
  },
  "rental_agreement_id": 16493,
  "primary_driver_id": 138,
  "secondary_driver_id": 158,
  "primary_car_id": 75,
  "secondary_car_id": 73,
  "charges": [
    {
      "rate_id": 2,
      "name": "Per Hour",
      "rate_type": "multiplier",
      "rate_group": "base_rate",
      "is_vat_tax": false,
      "is_primary": true,
      "unit_value": 15.0,
      "unit_count": 1.0,
      "total_value": 15.0
    }
  ],
  "preferred_vehicle_type_id": 49328,
  "preferred_primary_driver_id": 154,
  "preferred_secondary_driver_id": 153,
  "miscellaneous": {
    "is_greeting_sign_required": true,
    "greeting_sign_notes": "Greeting notes",
    "occasion": "Corporate Travel",
    "group_name": "Amabella",
    "referral_source": "Website",
    "arranged_by": "INET",
    "reference_number": "12345",
    "voucher_number": "7789652"
  },
  "confirmation_on_create": "email",
  "confirmation_on_update": "email"
}

### Get New Reservations [GET /companies/{company_alias}/reservations/new?from={from}&to={to}&search_in={search_in}&search_for={search_for}&is_paid={is_paid}&sort_by={sort_by}&sort_order={sort_order}&page_index={page_index}&page_size={page_size}] 

+ Parameters 
    + from: (optional, string)
    + to: (optional, string)
    + search_in: (optional, string)
    + search_for: (optional, string)
    + is_paid: (optional, boolean)
    + sort_by: (optional, string)
    + sort_order: (optional, string)
    + page_index: 1 (optional, int)
    + page_size: 20 (optional, int)
    + company_alias: (required, string)

+ Request 

    + Headers 

            Content-Type: application/json 
            Authorization: bearer {access_token}

+ Response 200 

    + Headers 

            Content-Type: application/json 

    + Body 

            {
              "total_count": 1,
              "items": [
                {
                  "id": 57414239,
                  "confirmation_number": "39666",
                  "scheduled_pickup_at": "2017-04-14T18:27:00",
                  "scheduled_dropoff_at": "2017-04-14T20:16:00",
                  "state": "unassigned",
                  "state_reason": "undefined",
                  "pickup": {
                    "name": "Name of Address",
                    "scheduled_arrival_at": "2017-04-15T12:54:00",
                    "action": "pickup",
                    "notes": "pickup notes",
                    "address": {
                      "country_code": "US",
                      "state_code": "NY",
                      "postal_code": "11354",
                      "city": "Queens",
                      "address_line1": "123 Main St"
                    },
                    "location": {
                      "latitude": 40.7624474,
                      "longitude": -73.83165
                    }
                  },
                  "dropoff": {
                    "name": "John F. Kennedy International Airport",
                    "scheduled_arrival_at": "2017-04-15T07:03:00",
                    "action": "dropoff",
                    "address": {
                      "state_code": "NY"
                    },
                    "flight": {
                      "airport_code": "JFK",
                      "airline_code": "AA",
                      "flight_number": "9070",
                      "tail_number": "A7-E3",
                      "terminal": "4",
                      "gateway": "A7",
                      "meet_option": "curbside",
                      "departs_from_or_arrives_to": "AUH",
                      "departure_at_or_arrival_at": "2017-04-15T07:23:00"
                    },
                    "location": {
                      "latitude": 40.63975,
                      "longitude": -73.77892
                    }
                  },
                  "primary_driver_id": 138,
                  "primary_driver": {
                    "first_name": "William",
                    "last_name": "Vegas"
                  },
                  "primary_car_id": 75,
                  "primary_car": {
                    "license_plate": "LAL 44",
                    "car_make": "Lincoln",
                    "color": "BLACK"
                  },
                  "passenger_account_id": 1002334155,
                  "passenger": {
                    "first_name": "Issue",
                    "last_name": "314",
                    "email": "email@sample.com",
                    "phone": "+380930000000"
                  },
                  "total_amount": 196.89,
                  "payment_type_id": 1,
                  "payment_type": {
                    "name": "Credit Card",
                    "method": "other"
                  },
                  "vehicle_type_id": 14421,
                  "vehicle_type": {
                    "name": "BMW"
                  },
                  "created_at": "2017-04-14T18:25:09",
                  "created_by": "admin"
                }
              ]
            }



### Get In Progress Reservations [GET /companies/{company_alias}/reservations/in_progress?from={from}&to={to}&search_in={search_in}&search_for={search_for}&is_paid={is_paid}&sort_by={sort_by}&sort_order={sort_order}&page_index={page_index}&page_size={page_size}] 

+ Parameters 
    + from: (optional, string)
    + to: (optional, string)
    + search_in: (optional, string)
    + search_for: (optional, string)
    + is_paid: (optional, boolean)
    + sort_by: (optional, string)
    + sort_order: (optional, string)
    + page_index: 1 (optional, int)
    + page_size: 20 (optional, int)
    + company_alias: (required, string)

+ Request 

    + Headers 

            Content-Type: application/json 
            Authorization: bearer {access_token}

+ Response 200 

    + Headers 

            Content-Type: application/json 

    + Body 

            {
              "total_count": 1,
              "items": [
                {
                  "id": 57414239,
                  "confirmation_number": "39666",
                  "scheduled_pickup_at": "2017-04-14T18:27:00",
                  "scheduled_dropoff_at": "2017-04-14T20:16:00",
                  "state": "assigned",
                  "state_reason": "undefined",
                  "pickup": {
                    "name": "Name of Address",
                    "scheduled_arrival_at": "2017-04-15T12:54:00",
                    "action": "pickup",
                    "notes": "pickup notes",
                    "address": {
                      "country_code": "US",
                      "state_code": "NY",
                      "postal_code": "11354",
                      "city": "Queens",
                      "address_line1": "123 Main St"
                    },
                    "location": {
                      "latitude": 40.7624474,
                      "longitude": -73.83165
                    }
                  },
                  "dropoff": {
                    "name": "John F. Kennedy International Airport",
                    "scheduled_arrival_at": "2017-04-15T07:03:00",
                    "action": "dropoff",
                    "address": {
                      "state_code": "NY"
                    },
                    "flight": {
                      "airport_code": "JFK",
                      "airline_code": "AA",
                      "flight_number": "9070",
                      "tail_number": "A7-E3",
                      "terminal": "4",
                      "gateway": "A7",
                      "meet_option": "curbside",
                      "departs_from_or_arrives_to": "AUH",
                      "departure_at_or_arrival_at": "2017-04-15T07:23:00"
                    },
                    "location": {
                      "latitude": 40.63975,
                      "longitude": -73.77892
                    }
                  },
                  "primary_driver_id": 138,
                  "primary_driver": {
                    "first_name": "William",
                    "last_name": "Vegas"
                  },
                  "primary_car_id": 75,
                  "primary_car": {
                    "license_plate": "LAL 44",
                    "car_make": "Lincoln",
                    "color": "BLACK"
                  },
                  "passenger_account_id": 1002334155,
                  "passenger": {
                    "first_name": "Issue",
                    "last_name": "314",
                    "email": "email@sample.com",
                    "phone": "+380930000000"
                  },
                  "total_amount": 196.89,
                  "payment_type_id": 1,
                  "payment_type": {
                    "name": "Credit Card",
                    "method": "other"
                  },
                  "vehicle_type_id": 14421,
                  "vehicle_type": {
                    "name": "BMW"
                  },
                  "created_at": "2017-04-14T18:25:09",
                  "created_by": "admin"
                }
              ]
            }



### Get Done Reservations [GET /companies/{company_alias}/reservations/done?from={from}&to={to}&search_in={search_in}&search_for={search_for}&is_paid={is_paid}&sort_by={sort_by}&sort_order={sort_order}&page_index={page_index}&page_size={page_size}] 

+ Parameters 
    + from: (optional, string)
    + to: (optional, string)
    + search_in: (optional, string)
    + search_for: (optional, string)
    + is_paid: (optional, boolean)
    + sort_by: (optional, string)
    + sort_order: (optional, string)
    + page_index: 1 (optional, int)
    + page_size: 20 (optional, int)
    + company_alias: (required, string)

+ Request 

    + Headers 

            Content-Type: application/json 
            Authorization: bearer {access_token}

+ Response 200 

    + Headers 

            Content-Type: application/json 

    + Body 

            {
              "total_count": 1,
              "items": [
                {
                  "id": 57414239,
                  "confirmation_number": "39666",
                  "scheduled_pickup_at": "2017-04-14T18:27:00",
                  "scheduled_dropoff_at": "2017-04-14T20:16:00",
                  "state": "closed",
                  "state_reason": "undefined",
                  "pickup": {
                    "name": "Name of Address",
                    "scheduled_arrival_at": "2017-04-15T12:54:00",
                    "action": "pickup",
                    "notes": "pickup notes",
                    "address": {
                      "country_code": "US",
                      "state_code": "NY",
                      "postal_code": "11354",
                      "city": "Queens",
                      "address_line1": "123 Main St"
                    },
                    "location": {
                      "latitude": 40.7624474,
                      "longitude": -73.83165
                    }
                  },
                  "dropoff": {
                    "name": "John F. Kennedy International Airport",
                    "scheduled_arrival_at": "2017-04-15T07:03:00",
                    "action": "dropoff",
                    "address": {
                      "state_code": "NY"
                    },
                    "flight": {
                      "airport_code": "JFK",
                      "airline_code": "AA",
                      "flight_number": "9070",
                      "tail_number": "A7-E3",
                      "terminal": "4",
                      "gateway": "A7",
                      "meet_option": "curbside",
                      "departs_from_or_arrives_to": "AUH",
                      "departure_at_or_arrival_at": "2017-04-15T07:23:00"
                    },
                    "location": {
                      "latitude": 40.63975,
                      "longitude": -73.77892
                    }
                  },
                  "primary_driver_id": 138,
                  "primary_driver": {
                    "first_name": "William",
                    "last_name": "Vegas"
                  },
                  "primary_car_id": 75,
                  "primary_car": {
                    "license_plate": "LAL 44",
                    "car_make": "Lincoln",
                    "color": "BLACK"
                  },
                  "passenger_account_id": 1002334155,
                  "passenger": {
                    "first_name": "Issue",
                    "last_name": "314",
                    "email": "email@sample.com",
                    "phone": "+380930000000"
                  },
                  "total_amount": 196.89,
                  "payment_type_id": 1,
                  "payment_type": {
                    "name": "Credit Card",
                    "method": "other"
                  },
                  "vehicle_type_id": 14421,
                  "vehicle_type": {
                    "name": "BMW"
                  },
                  "created_at": "2017-04-14T18:25:09",
                  "created_by": "admin"
                }
              ]
            }



### Get Rejected Reservations [GET /companies/{company_alias}/reservations/rejected?from={from}&to={to}&search_in={search_in}&search_for={search_for}&is_paid={is_paid}&sort_by={sort_by}&sort_order={sort_order}&page_index={page_index}&page_size={page_size}]

+ Parameters
    + from: (optional, string)
    + to: (optional, string)
    + search_in: (optional, string)
    + search_for: (optional, string)
    + is_paid: (optional, boolean)
    + sort_by: (optional, string)
    + sort_order: (optional, string)
    + page_index: 1 (optional, int)
    + page_size: 20 (optional, int)
    + company_alias: (required, string)

+ Request

    + Headers

            Content-Type: application/json
            Authorization: bearer {access_token}

+ Response 200

    + Headers

            Content-Type: application/json

    + Body

            {
              "total_count": 1,
              "items": [
                {
                  "id": 57414239,
                  "confirmation_number": "39666",
                  "scheduled_pickup_at": "2017-04-14T18:27:00",
                  "scheduled_dropoff_at": "2017-04-14T20:16:00",
                  "state": "unassigned",
                  "state_reason": "rejected_by_driver",
                  "pickup": {
                    "name": "Name of Address",
                    "scheduled_arrival_at": "2017-04-15T12:54:00",
                    "action": "pickup",
                    "notes": "pickup notes",
                    "address": {
                      "country_code": "US",
                      "state_code": "NY",
                      "postal_code": "11354",
                      "city": "Queens",
                      "address_line1": "123 Main St"
                    },
                    "location": {
                      "latitude": 40.7624474,
                      "longitude": -73.83165
                    }
                  },
                  "dropoff": {
                    "name": "John F. Kennedy International Airport",
                    "scheduled_arrival_at": "2017-04-15T07:03:00",
                    "action": "dropoff",
                    "address": {
                      "state_code": "NY"
                    },
                    "flight": {
                      "airport_code": "JFK",
                      "airline_code": "AA",
                      "flight_number": "9070",
                      "tail_number": "A7-E3",
                      "terminal": "4",
                      "gateway": "A7",
                      "meet_option": "curbside",
                      "departs_from_or_arrives_to": "AUH",
                      "departure_at_or_arrival_at": "2017-04-15T07:23:00"
                    },
                    "location": {
                      "latitude": 40.63975,
                      "longitude": -73.77892
                    }
                  },
                  "primary_driver_id": 138,
                  "primary_driver": {
                    "first_name": "William",
                    "last_name": "Vegas"
                  },
                  "primary_car_id": 75,
                  "primary_car": {
                    "license_plate": "LAL 44",
                    "car_make": "Lincoln",
                    "color": "BLACK"
                  },
                  "passenger_account_id": 1002334155,
                  "passenger": {
                    "first_name": "Issue",
                    "last_name": "314",
                    "email": "email@sample.com",
                    "phone": "+380930000000"
                  },
                  "total_amount": 196.89,
                  "payment_type_id": 1,
                  "payment_type": {
                    "name": "Credit Card",
                    "method": "other"
                  },
                  "vehicle_type_id": 14421,
                  "vehicle_type": {
                    "name": "BMW"
                  },
                  "created_at": "2017-04-14T18:25:09",
                  "created_by": "admin"
                }
              ]
            }
            

## Create Reservation  [/Reservation/create]

### Create Reservation [POST /companies/{company_alias}/reservations] 

+ Parameters 
    + company_alias: (required, string)

+ Request 

    + `company_alias_id` (string) 
    + `confirmation_prefix` (string) String length: inclusive between 0 and 20. 
    + `confirmation_number` (string) String length: inclusive between 0 and 50. 
    + `confirmation_suffix` (string) String length: inclusive between 0 and 20. 
    + `scheduled_pickup_at` (object) 
    + `actual_pickup_at` (object) 
    + `scheduled_dropoff_at` (object) 
    + `actual_dropoff_at` (object) 
    + `scheduled_duration` (int) Range: inclusive between 60 and 2147483647. 
    + `actual_duration` (int) Range: inclusive between 60 and 2147483647. 
    + `dispatched_at` (object) 
    + `dispatched_by` (string) 
    + `closed_at` (object) 
    + `closed_by` (string) 
    + `payment_terms` (object) 
    + `payment_status` (object) 
    + `luggage_count` (int) Range: inclusive between 0 and 2147483647. 
    + `passenger_count` (int) Range: inclusive between 1 and 2147483647. 
    + `infant_child_seat_count` (int) Range: inclusive between 0 and 2147483647. 
    + `booster_child_seat_count` (int) Range: inclusive between 0 and 2147483647. 
    + `toddler_child_seat_count` (int) Range: inclusive between 0 and 2147483647. 
    + `is_handicap_access_required` (boolean) 
    + `pickup` (object) Required. 
    + `pickup.name` (string) String length: inclusive between 0 and 500. 
    + `pickup.scheduled_arrival_at` (object) 
    + `pickup.actual_arrival_at` (object) 
    + `pickup.action` (object) 
    + `pickup.notes` (string) String length: inclusive between 0 and 4000. 
    + `pickup.one_line_address` (string) 
    + `pickup.address` (object) 
    + `pickup.address.country_code` (string) String length: inclusive between 0 and 5. 
    + `pickup.address.state_code` (string) String length: inclusive between 0 and 5. 
    + `pickup.address.postal_code` (string) String length: inclusive between 0 and 15. 
    + `pickup.address.county` (string) String length: inclusive between 0 and 250. 
    + `pickup.address.city` (string) String length: inclusive between 0 and 250. 
    + `pickup.address.address_line1` (string) String length: inclusive between 0 and 250. 
    + `pickup.address.address_line2` (string) String length: inclusive between 0 and 250. 
    + `flight` (object) 
    + `flight.airport_code` (string) Max length: 3. Min length: 3. 
    + `flight.airline_code` (string) Max length: 2. Min length: 2. 
    + `flight.flight_number` (string) Max length: 4. Min length: 1. 
    + `flight.tail_number` (string) String length: inclusive between 0 and 10. 
    + `flight.terminal` (string) String length: inclusive between 0 and 50. 
    + `flight.gateway` (string) String length: inclusive between 0 and 50. 
    + `flight.meet_option` (object) 
    + `flight.departure_from_or_arrival_to` (string) String length: inclusive between 0 and 250. 
    + `flight.departure_at_or_arrival_at` (object) 
    + `cruise` (object) 
    + `cruise.seaport_code` (string) Required. String length: inclusive between 0 and 10. 
    + `cruise.cruise_ship_name` (string) String length: inclusive between 0 and 250. 
    + `cruise.cruise_line_name` (string) String length: inclusive between 0 and 250. 
    + `cruise.departure_from_or_arrival_to` (string) String length: inclusive between 0 and 250. 
    + `cruise.departure_at_or_arrival_at` (object) 
    + `location` (object) Required. 
    + `location.latitude` (float) 
    + `location.longitude` (float) 
    + `stops` (object) Required. 
    + `dropoff` (object) 
    + `dropoff.name` (string) String length: inclusive between 0 and 500. 
    + `dropoff.scheduled_arrival_at` (object) 
    + `dropoff.actual_arrival_at` (object) 
    + `dropoff.action` (object) 
    + `dropoff.notes` (string) String length: inclusive between 0 and 4000. 
    + `dropoff.one_line_address` (string) 
    + `dropoff.address` (object) 
    + `dropoff.address.country_code` (string) String length: inclusive between 0 and 5. 
    + `dropoff.address.state_code` (string) String length: inclusive between 0 and 5. 
    + `dropoff.address.postal_code` (string) String length: inclusive between 0 and 15. 
    + `dropoff.address.county` (string) String length: inclusive between 0 and 250. 
    + `dropoff.address.city` (string) String length: inclusive between 0 and 250. 
    + `dropoff.address.address_line1` (string) String length: inclusive between 0 and 250. 
    + `dropoff.address.address_line2` (string) String length: inclusive between 0 and 250. 
    + `flight` (object) 
    + `flight.airport_code` (string) Max length: 3. Min length: 3. 
    + `flight.airline_code` (string) Max length: 2. Min length: 2. 
    + `flight.flight_number` (string) Max length: 4. Min length: 1. 
    + `flight.tail_number` (string) String length: inclusive between 0 and 10. 
    + `flight.terminal` (string) String length: inclusive between 0 and 50. 
    + `flight.gateway` (string) String length: inclusive between 0 and 50. 
    + `flight.meet_option` (object) 
    + `flight.departure_from_or_arrival_to` (string) String length: inclusive between 0 and 250. 
    + `flight.departure_at_or_arrival_at` (object) 
    + `cruise` (object) 
    + `cruise.seaport_code` (string) Required. String length: inclusive between 0 and 10. 
    + `cruise.cruise_ship_name` (string) String length: inclusive between 0 and 250. 
    + `cruise.cruise_line_name` (string) String length: inclusive between 0 and 250. 
    + `cruise.departure_from_or_arrival_to` (string) String length: inclusive between 0 and 250. 
    + `cruise.departure_at_or_arrival_at` (object) 
    + `location` (object) Required. 
    + `location.latitude` (float) 
    + `location.longitude` (float) 
    + `booking_contact_account_id` (int) Range: inclusive between 1 and 2147483647. 
    + `booking_contact` (object) 
    + `booking_contact.first_name` (string) String length: inclusive between 0 and 50. 
    + `booking_contact.last_name` (string) String length: inclusive between 0 and 50. 
    + `booking_contact.email` (string) Email address. String length: inclusive between 0 and 255. 
    + `booking_contact.phone` (string) Phone number. String length: inclusive between 0 and 50. 
    + `billing_contact_account_id` (int) Range: inclusive between 1 and 2147483647. 
    + `billing_contact` (object) 
    + `billing_contact.first_name` (string) String length: inclusive between 0 and 50. 
    + `billing_contact.last_name` (string) String length: inclusive between 0 and 50. 
    + `billing_contact.email` (string) Email address. String length: inclusive between 0 and 255. 
    + `billing_contact.phone` (string) Phone number. String length: inclusive between 0 and 50. 
    + `passengers` (object) 
    + `vehicle_type_id` (int) Range: inclusive between 1 and 2147483647. 
    + `service_type_id` (int) Range: inclusive between 1 and 2147483647. 
    + `credit_card_id` (int) Range: inclusive between 1 and 2147483647. 
    + `payment_type_id` (int) Range: inclusive between 1 and 2147483647. 
    + `paid_amount` (object) Non-negative. 
    + `authorized_amount` (object) Non-negative. 
    + `total_amount` (object) Non-negative. 
    + `primary_agent_id` (int) Range: inclusive between 1 and 2147483647. 
    + `primary_agent_reward` (object) 
    + `primary_agent_reward.type` (object) 
    + `primary_agent_reward.amount` (object) Non-negative. 
    + `secondary_agent_id` (int) Range: inclusive between 1 and 2147483647. 
    + `secondary_agent_reward` (object) 
    + `secondary_agent_reward.type` (object) 
    + `secondary_agent_reward.amount` (object) Non-negative. 
    + `rental_agreement_id` (int) Range: inclusive between 1 and 2147483647. 
    + `primary_driver_id` (int) Range: inclusive between 1 and 2147483647. 
    + `secondary_driver_id` (int) Range: inclusive between 1 and 2147483647. 
    + `primary_car_id` (int) Range: inclusive between 1 and 2147483647. 
    + `secondary_car_id` (int) Range: inclusive between 1 and 2147483647. 
    + `charges` (object) Required. 
    + `preferred_vehicle_type_id` (int) Range: inclusive between 1 and 2147483647. 
    + `preferred_primary_driver_id` (int) Range: inclusive between 1 and 2147483647. 
    + `preferred_secondary_driver_id` (int) Range: inclusive between 1 and 2147483647. 
    + `affiliate_account_id` (int) Range: inclusive between 1 and 2147483647. 
    + `miscellaneous` (object) 
    + `miscellaneous.is_greeting_sign_required` (boolean) 
    + `miscellaneous.greeting_sign_notes` (string) String length: inclusive between 0 and 2000. 
    + `miscellaneous.occasion` (string) String length: inclusive between 0 and 50. 
    + `miscellaneous.group_name` (string) String length: inclusive between 0 and 50. 
    + `miscellaneous.referral_source` (string) String length: inclusive between 0 and 50. 
    + `miscellaneous.arranged_by` (string) String length: inclusive between 0 and 50. 
    + `miscellaneous.reference_number` (string) String length: inclusive between 0 and 50. 
    + `miscellaneous.voucher_number` (string) String length: inclusive between 0 and 50. 
    + `confirmation_on_create` (object) 
    + `confirmation_on_update` (object)  

    + Headers 

            Content-Type: application/json 
            Authorization: bearer {access_token} 

    + Body 

{
  "confirmation_number": "39666",
  "scheduled_pickup_at": "2017-04-14T18:27:00",
  "scheduled_dropoff_at": "2017-04-14T20:16:00",
  "payment_terms": "due_upon_receipt",
  "payment_status": "unpaid",
  "luggage_count": 1,
  "passenger_count": 1,
  "infant_child_seat_count": 2,
  "booster_child_seat_count": 1,
  "toddler_child_seat_count": 1,
  "is_handicap_access_required": true,
  "pickup": {
    "name": "Name of Address",
    "scheduled_arrival_at": "2017-04-15T12:54:00",
    "action": "pickup",
    "notes": "pickup notes",
    "address": {
      "country_code": "US",
      "state_code": "NY",
      "postal_code": "11354",
      "city": "Queens",
      "address_line1": "123 Main St"
    },
    "location": {
      "latitude": 40.7624474,
      "longitude": -73.83165
    }
  },
  "stops": [
    {
      "name": "Amtrak: Back Bay Station",
      "action": "stop",
      "address": {
        "country_code": "US",
        "state_code": "MA",
        "postal_code": "02116",
        "city": "Boston",
        "address_line1": "145 Dartmouth St"
      },
      "location": {
        "latitude": 42.34734,
        "longitude": -71.075386
      }
    }
  ],
  "dropoff": {
    "name": "John F. Kennedy International Airport",
    "scheduled_arrival_at": "2017-04-15T07:03:00",
    "action": "dropoff",
    "address": {
      "state_code": "NY"
    },
    "flight": {
      "airport_code": "JFK",
      "airline_code": "AA",
      "flight_number": "9070",
      "tail_number": "A7-E3",
      "terminal": "4",
      "gateway": "A7",
      "meet_option": "curbside",
      "departure_from_or_arrival_to": "AUH",
      "departure_at_or_arrival_at": "2017-04-15T07:23:00"
    },
    "location": {
      "latitude": 40.63975,
      "longitude": -73.77892
    }
  },
  "booking_contact_account_id": 1003427363,
  "booking_contact": {
    "first_name": "David",
    "last_name": "Stewart",
    "email": "email@sample.com",
    "phone": "+380930000000"
  },
  "billing_contact_account_id": 1001351994,
  "billing_contact": {
    "first_name": "Jerry",
    "last_name": "Harris"
  },
  "passengers": [
    {
      "passenger_account_id": 1002334155,
      "passenger": {
        "first_name": "Christina",
        "last_name": "Brady",
        "email": "email@sample.com",
        "phone": "+380930000000"
      }
    }
  ],
  "vehicle_type_id": 14421,
  "service_type_id": 88301,
  "credit_card_id": 7019493,
  "payment_type_id": 1,
  "paid_amount": 0.0,
  "authorized_amount": 0.0,
  "total_amount": 196.89,
  "primary_agent_id": 2,
  "primary_agent_reward": {
    "type": "amout",
    "amount": 20.0
  },
  "secondary_agent_id": 35,
  "secondary_agent_reward": {
    "type": "percentage",
    "amount": 3.0
  },
  "rental_agreement_id": 16493,
  "primary_driver_id": 138,
  "secondary_driver_id": 158,
  "primary_car_id": 75,
  "secondary_car_id": 73,
  "charges": [
    {
      "rate_id": 2,
      "name": "Per Hour",
      "rate_type": "multiplier",
      "rate_group": "base_rate",
      "is_vat_tax": false,
      "is_primary": true,
      "unit_value": 15.0,
      "unit_count": 1.0,
      "total_value": 15.0
    }
  ],
  "preferred_vehicle_type_id": 49328,
  "preferred_primary_driver_id": 154,
  "preferred_secondary_driver_id": 153,
  "miscellaneous": {
    "is_greeting_sign_required": true,
    "greeting_sign_notes": "Greeting notes",
    "occasion": "Corporate Travel",
    "group_name": "Amabella",
    "referral_source": "Website",
    "arranged_by": "INET",
    "reference_number": "12345",
    "voucher_number": "7789652"
  },
  "confirmation_on_create": "email",
  "confirmation_on_update": "email"
}

+ Response 200 

    + Headers 

            Content-Type: application/json 

    + Body 

{
  "id": 57414239,
  "state": "unassigned",
  "state_reason": "undefined",
  "status_id": 118728,
  "status": {
    "name": "Unassigned",
    "color": "#FFFFCC"
  },
  "created_at": "2017-04-14T18:25:09",
  "created_by": "admin",
  "vehicle_type": {
    "name": "BMW"
  },
  "service_type": {
    "name": "Airport Departure"
  },
  "credit_card": {
    "holder_type": "unknown",
    "card_number_first_digit": "5",
    "card_number_last_digits": "1462",
    "card_network": "master_card",
    "expiration_year": 2020,
    "expiration_month": 11
  },
  "payment_type": {
    "name": "Credit Card",
    "method": "other"
  },
  "primary_agent": {},
  "secondary_agent": {},
  "rental_agreement": {
    "name": "Rental 1"
  },
  "primary_driver": {
    "first_name": "Cleder",
    "last_name": "Cueto"
  },
  "secondary_driver": {
    "first_name": "Richard",
    "last_name": "Goodwin"
  },
  "primary_car": {
    "license_plate": "LAL 44",
    "car_make": "Lincoln",
    "color": "BLACK"
  },
  "secondary_car": {
    "license_plate": "LAL 11",
    "car_make": "Cadillac",
    "color": "BLACK"
  },
  "preferred_vehicle_type": {
    "name": "Tesla Model S"
  },
  "preferred_primary_driver": {
    "first_name": "Alvin",
    "last_name": "Swanson",
    "phone": "+18008679878"
  },
  "preferred_secondary_driver": {
    "first_name": "Vernon",
    "last_name": "Poovey"
  },
  "confirmation_number": "39666",
  "scheduled_pickup_at": "2017-04-14T18:27:00",
  "scheduled_dropoff_at": "2017-04-14T20:16:00",
  "payment_terms": "due_upon_receipt",
  "payment_status": "unpaid",
  "luggage_count": 1,
  "passenger_count": 1,
  "infant_child_seat_count": 2,
  "booster_child_seat_count": 1,
  "toddler_child_seat_count": 1,
  "is_handicap_access_required": true,
  "pickup": {
    "name": "Name of Address",
    "scheduled_arrival_at": "2017-04-15T12:54:00",
    "action": "pickup",
    "notes": "pickup notes",
    "address": {
      "country_code": "US",
      "state_code": "NY",
      "postal_code": "11354",
      "city": "Queens",
      "address_line1": "123 Main St"
    },
    "location": {
      "latitude": 40.7624474,
      "longitude": -73.83165
    }
  },
  "stops": [
    {
      "name": "Amtrak: Back Bay Station",
      "action": "stop",
      "address": {
        "country_code": "US",
        "state_code": "MA",
        "postal_code": "02116",
        "city": "Boston",
        "address_line1": "145 Dartmouth St"
      },
      "location": {
        "latitude": 42.34734,
        "longitude": -71.075386
      }
    }
  ],
  "dropoff": {
    "name": "John F. Kennedy International Airport",
    "scheduled_arrival_at": "2017-04-15T07:03:00",
    "action": "dropoff",
    "address": {
      "state_code": "NY"
    },
    "flight": {
      "airport_code": "JFK",
      "airline_code": "AA",
      "flight_number": "9070",
      "tail_number": "A7-E3",
      "terminal": "4",
      "gateway": "A7",
      "meet_option": "curbside",
      "departure_from_or_arrival_to": "AUH",
      "departure_at_or_arrival_at": "2017-04-15T07:23:00"
    },
    "location": {
      "latitude": 40.63975,
      "longitude": -73.77892
    }
  },
  "booking_contact_account_id": 1003427363,
  "booking_contact": {
    "first_name": "David",
    "last_name": "Stewart",
    "email": "email@sample.com",
    "phone": "+380930000000"
  },
  "billing_contact_account_id": 1001351994,
  "billing_contact": {
    "first_name": "Jerry",
    "last_name": "Harris"
  },
  "passengers": [
    {
      "passenger_account_id": 1002334155,
      "passenger": {
        "first_name": "Christina",
        "last_name": "Brady",
        "email": "email@sample.com",
        "phone": "+380930000000"
      }
    }
  ],
  "vehicle_type_id": 14421,
  "service_type_id": 88301,
  "credit_card_id": 7019493,
  "payment_type_id": 1,
  "paid_amount": 0.0,
  "authorized_amount": 0.0,
  "total_amount": 196.89,
  "primary_agent_id": 2,
  "primary_agent_reward": {
    "type": "amout",
    "amount": 20.0
  },
  "secondary_agent_id": 35,
  "secondary_agent_reward": {
    "type": "percentage",
    "amount": 3.0
  },
  "rental_agreement_id": 16493,
  "primary_driver_id": 138,
  "secondary_driver_id": 158,
  "primary_car_id": 75,
  "secondary_car_id": 73,
  "charges": [
    {
      "rate_id": 2,
      "name": "Per Hour",
      "rate_type": "multiplier",
      "rate_group": "base_rate",
      "is_vat_tax": false,
      "is_primary": true,
      "unit_value": 15.0,
      "unit_count": 1.0,
      "total_value": 15.0
    }
  ],
  "preferred_vehicle_type_id": 49328,
  "preferred_primary_driver_id": 154,
  "preferred_secondary_driver_id": 153,
  "miscellaneous": {
    "is_greeting_sign_required": true,
    "greeting_sign_notes": "Greeting notes",
    "occasion": "Corporate Travel",
    "group_name": "Amabella",
    "referral_source": "Website",
    "arranged_by": "INET",
    "reference_number": "12345",
    "voucher_number": "7789652"
  },
  "confirmation_on_create": "email",
  "confirmation_on_update": "email"
}

## Update Reservation  [/Reservation/update]

### Update Reservation [PUT /companies/{company_alias}/reservations/{id}] 

+ Parameters 
    + id: `1` (required, int)
    + company_alias: (required, string)

+ Request 

    + `company_alias_id` (string) 
    + `confirmation_prefix` (string) String length: inclusive between 0 and 20. 
    + `confirmation_number` (string) String length: inclusive between 0 and 50. 
    + `confirmation_suffix` (string) String length: inclusive between 0 and 20. 
    + `scheduled_pickup_at` (object) 
    + `actual_pickup_at` (object) 
    + `scheduled_dropoff_at` (object) 
    + `actual_dropoff_at` (object) 
    + `scheduled_duration` (int) Range: inclusive between 60 and 2147483647. 
    + `actual_duration` (int) Range: inclusive between 60 and 2147483647. 
    + `dispatched_at` (object) 
    + `dispatched_by` (string) 
    + `closed_at` (object) 
    + `closed_by` (string) 
    + `payment_terms` (object) 
    + `payment_status` (object) 
    + `luggage_count` (int) Range: inclusive between 0 and 2147483647. 
    + `passenger_count` (int) Range: inclusive between 1 and 2147483647. 
    + `infant_child_seat_count` (int) Range: inclusive between 0 and 2147483647. 
    + `booster_child_seat_count` (int) Range: inclusive between 0 and 2147483647. 
    + `toddler_child_seat_count` (int) Range: inclusive between 0 and 2147483647. 
    + `is_handicap_access_required` (boolean) 
    + `pickup` (object) Required. 
    + `pickup.name` (string) String length: inclusive between 0 and 500. 
    + `pickup.scheduled_arrival_at` (object) 
    + `pickup.actual_arrival_at` (object) 
    + `pickup.action` (object) 
    + `pickup.notes` (string) String length: inclusive between 0 and 4000. 
    + `pickup.one_line_address` (string) 
    + `pickup.address` (object) 
    + `pickup.address.country_code` (string) String length: inclusive between 0 and 5. 
    + `pickup.address.state_code` (string) String length: inclusive between 0 and 5. 
    + `pickup.address.postal_code` (string) String length: inclusive between 0 and 15. 
    + `pickup.address.county` (string) String length: inclusive between 0 and 250. 
    + `pickup.address.city` (string) String length: inclusive between 0 and 250. 
    + `pickup.address.address_line1` (string) String length: inclusive between 0 and 250. 
    + `pickup.address.address_line2` (string) String length: inclusive between 0 and 250. 
    + `flight` (object) 
    + `flight.airport_code` (string) Max length: 3. Min length: 3. 
    + `flight.airline_code` (string) Max length: 2. Min length: 2. 
    + `flight.flight_number` (string) Max length: 4. Min length: 1. 
    + `flight.tail_number` (string) String length: inclusive between 0 and 10. 
    + `flight.terminal` (string) String length: inclusive between 0 and 50. 
    + `flight.gateway` (string) String length: inclusive between 0 and 50. 
    + `flight.meet_option` (object) 
    + `flight.departure_from_or_arrival_to` (string) String length: inclusive between 0 and 250. 
    + `flight.departure_at_or_arrival_at` (object) 
    + `cruise` (object) 
    + `cruise.seaport_code` (string) Required. String length: inclusive between 0 and 10. 
    + `cruise.cruise_ship_name` (string) String length: inclusive between 0 and 250. 
    + `cruise.cruise_line_name` (string) String length: inclusive between 0 and 250. 
    + `cruise.departure_from_or_arrival_to` (string) String length: inclusive between 0 and 250. 
    + `cruise.departure_at_or_arrival_at` (object) 
    + `location` (object) Required. 
    + `location.latitude` (float) 
    + `location.longitude` (float) 
    + `stops` (object) Required. 
    + `dropoff` (object) 
    + `dropoff.name` (string) String length: inclusive between 0 and 500. 
    + `dropoff.scheduled_arrival_at` (object) 
    + `dropoff.actual_arrival_at` (object) 
    + `dropoff.action` (object) 
    + `dropoff.notes` (string) String length: inclusive between 0 and 4000. 
    + `dropoff.one_line_address` (string) 
    + `dropoff.address` (object) 
    + `dropoff.address.country_code` (string) String length: inclusive between 0 and 5. 
    + `dropoff.address.state_code` (string) String length: inclusive between 0 and 5. 
    + `dropoff.address.postal_code` (string) String length: inclusive between 0 and 15. 
    + `dropoff.address.county` (string) String length: inclusive between 0 and 250. 
    + `dropoff.address.city` (string) String length: inclusive between 0 and 250. 
    + `dropoff.address.address_line1` (string) String length: inclusive between 0 and 250. 
    + `dropoff.address.address_line2` (string) String length: inclusive between 0 and 250. 
    + `flight` (object) 
    + `flight.airport_code` (string) Max length: 3. Min length: 3. 
    + `flight.airline_code` (string) Max length: 2. Min length: 2. 
    + `flight.flight_number` (string) Max length: 4. Min length: 1. 
    + `flight.tail_number` (string) String length: inclusive between 0 and 10. 
    + `flight.terminal` (string) String length: inclusive between 0 and 50. 
    + `flight.gateway` (string) String length: inclusive between 0 and 50. 
    + `flight.meet_option` (object) 
    + `flight.departure_from_or_arrival_to` (string) String length: inclusive between 0 and 250. 
    + `flight.departure_at_or_arrival_at` (object) 
    + `cruise` (object) 
    + `cruise.seaport_code` (string) Required. String length: inclusive between 0 and 10. 
    + `cruise.cruise_ship_name` (string) String length: inclusive between 0 and 250. 
    + `cruise.cruise_line_name` (string) String length: inclusive between 0 and 250. 
    + `cruise.departure_from_or_arrival_to` (string) String length: inclusive between 0 and 250. 
    + `cruise.departure_at_or_arrival_at` (object) 
    + `location` (object) Required. 
    + `location.latitude` (float) 
    + `location.longitude` (float) 
    + `booking_contact_account_id` (int) Range: inclusive between 1 and 2147483647. 
    + `booking_contact` (object) 
    + `booking_contact.first_name` (string) String length: inclusive between 0 and 50. 
    + `booking_contact.last_name` (string) String length: inclusive between 0 and 50. 
    + `booking_contact.email` (string) Email address. String length: inclusive between 0 and 255. 
    + `booking_contact.phone` (string) Phone number. String length: inclusive between 0 and 50. 
    + `billing_contact_account_id` (int) Range: inclusive between 1 and 2147483647. 
    + `billing_contact` (object) 
    + `billing_contact.first_name` (string) String length: inclusive between 0 and 50. 
    + `billing_contact.last_name` (string) String length: inclusive between 0 and 50. 
    + `billing_contact.email` (string) Email address. String length: inclusive between 0 and 255. 
    + `billing_contact.phone` (string) Phone number. String length: inclusive between 0 and 50. 
    + `passengers` (object) 
    + `vehicle_type_id` (int) Range: inclusive between 1 and 2147483647. 
    + `service_type_id` (int) Range: inclusive between 1 and 2147483647. 
    + `credit_card_id` (int) Range: inclusive between 1 and 2147483647. 
    + `payment_type_id` (int) Range: inclusive between 1 and 2147483647. 
    + `paid_amount` (object) Non-negative. 
    + `authorized_amount` (object) Non-negative. 
    + `total_amount` (object) Non-negative. 
    + `primary_agent_id` (int) Range: inclusive between 1 and 2147483647. 
    + `primary_agent_reward` (object) 
    + `primary_agent_reward.type` (object) 
    + `primary_agent_reward.amount` (object) Non-negative. 
    + `secondary_agent_id` (int) Range: inclusive between 1 and 2147483647. 
    + `secondary_agent_reward` (object) 
    + `secondary_agent_reward.type` (object) 
    + `secondary_agent_reward.amount` (object) Non-negative. 
    + `rental_agreement_id` (int) Range: inclusive between 1 and 2147483647. 
    + `primary_driver_id` (int) Range: inclusive between 1 and 2147483647. 
    + `secondary_driver_id` (int) Range: inclusive between 1 and 2147483647. 
    + `primary_car_id` (int) Range: inclusive between 1 and 2147483647. 
    + `secondary_car_id` (int) Range: inclusive between 1 and 2147483647. 
    + `charges` (object) Required. 
    + `preferred_vehicle_type_id` (int) Range: inclusive between 1 and 2147483647. 
    + `preferred_primary_driver_id` (int) Range: inclusive between 1 and 2147483647. 
    + `preferred_secondary_driver_id` (int) Range: inclusive between 1 and 2147483647. 
    + `affiliate_account_id` (int) Range: inclusive between 1 and 2147483647. 
    + `miscellaneous` (object) 
    + `miscellaneous.is_greeting_sign_required` (boolean) 
    + `miscellaneous.greeting_sign_notes` (string) String length: inclusive between 0 and 2000. 
    + `miscellaneous.occasion` (string) String length: inclusive between 0 and 50. 
    + `miscellaneous.group_name` (string) String length: inclusive between 0 and 50. 
    + `miscellaneous.referral_source` (string) String length: inclusive between 0 and 50. 
    + `miscellaneous.arranged_by` (string) String length: inclusive between 0 and 50. 
    + `miscellaneous.reference_number` (string) String length: inclusive between 0 and 50. 
    + `miscellaneous.voucher_number` (string) String length: inclusive between 0 and 50. 
    + `confirmation_on_create` (object) 
    + `confirmation_on_update` (object)

    + Headers 

            Content-Type: application/json 
            Authorization: bearer {access_token} 

    + Body 

{
  "confirmation_number": "39666",
  "scheduled_pickup_at": "2017-04-14T18:27:00",
  "scheduled_dropoff_at": "2017-04-14T20:16:00",
  "payment_terms": "due_upon_receipt",
  "payment_status": "unpaid",
  "luggage_count": 1,
  "passenger_count": 1,
  "infant_child_seat_count": 2,
  "booster_child_seat_count": 1,
  "toddler_child_seat_count": 1,
  "is_handicap_access_required": true,
  "pickup": {
    "name": "Name of Address",
    "scheduled_arrival_at": "2017-04-15T12:54:00",
    "action": "pickup",
    "notes": "pickup notes",
    "address": {
      "country_code": "US",
      "state_code": "NY",
      "postal_code": "11354",
      "city": "Queens",
      "address_line1": "123 Main St"
    },
    "location": {
      "latitude": 40.7624474,
      "longitude": -73.83165
    }
  },
  "stops": [
    {
      "name": "Amtrak: Back Bay Station",
      "action": "stop",
      "address": {
        "country_code": "US",
        "state_code": "MA",
        "postal_code": "02116",
        "city": "Boston",
        "address_line1": "145 Dartmouth St"
      },
      "location": {
        "latitude": 42.34734,
        "longitude": -71.075386
      }
    }
  ],
  "dropoff": {
    "name": "John F. Kennedy International Airport",
    "scheduled_arrival_at": "2017-04-15T07:03:00",
    "action": "dropoff",
    "address": {
      "state_code": "NY"
    },
    "flight": {
      "airport_code": "JFK",
      "airline_code": "AA",
      "flight_number": "9070",
      "tail_number": "A7-E3",
      "terminal": "4",
      "gateway": "A7",
      "meet_option": "curbside",
      "departure_from_or_arrival_to": "AUH",
      "departure_at_or_arrival_at": "2017-04-15T07:23:00"
    },
    "location": {
      "latitude": 40.63975,
      "longitude": -73.77892
    }
  },
  "booking_contact_account_id": 1003427363,
  "booking_contact": {
    "first_name": "David",
    "last_name": "Stewart",
    "email": "email@sample.com",
    "phone": "+380930000000"
  },
  "billing_contact_account_id": 1001351994,
  "billing_contact": {
    "first_name": "Jerry",
    "last_name": "Harris"
  },
  "passengers": [
    {
      "passenger_account_id": 1002334155,
      "passenger": {
        "first_name": "Christina",
        "last_name": "Brady",
        "email": "email@sample.com",
        "phone": "+380930000000"
      }
    }
  ],
  "vehicle_type_id": 14421,
  "service_type_id": 88301,
  "credit_card_id": 7019493,
  "payment_type_id": 1,
  "paid_amount": 0.0,
  "authorized_amount": 0.0,
  "total_amount": 196.89,
  "primary_agent_id": 2,
  "primary_agent_reward": {
    "type": "amout",
    "amount": 20.0
  },
  "secondary_agent_id": 35,
  "secondary_agent_reward": {
    "type": "percentage",
    "amount": 3.0
  },
  "rental_agreement_id": 16493,
  "primary_driver_id": 138,
  "secondary_driver_id": 158,
  "primary_car_id": 75,
  "secondary_car_id": 73,
  "charges": [
    {
      "rate_id": 2,
      "name": "Per Hour",
      "rate_type": "multiplier",
      "rate_group": "base_rate",
      "is_vat_tax": false,
      "is_primary": true,
      "unit_value": 15.0,
      "unit_count": 1.0,
      "total_value": 15.0
    }
  ],
  "preferred_vehicle_type_id": 49328,
  "preferred_primary_driver_id": 154,
  "preferred_secondary_driver_id": 153,
  "miscellaneous": {
    "is_greeting_sign_required": true,
    "greeting_sign_notes": "Greeting notes",
    "occasion": "Corporate Travel",
    "group_name": "Amabella",
    "referral_source": "Website",
    "arranged_by": "INET",
    "reference_number": "12345",
    "voucher_number": "7789652"
  },
  "confirmation_on_create": "email",
  "confirmation_on_update": "email"
}

## Reservation Credit Card [/Reservation/credit_card]

Methods to add or get credit card that was not assosiated with specific customer account and should be assosiated only with specific reservation.
In case you want to have credit card that will be assosiated only with specific reservation you need create such CC using POST method described bellow and then Create or Update specific reservation using currently created CC Id

### Create Credit Card [POST /companies/{company_alias}/credit_cards] 

Creates credit card without assosiation with existing customer account. 

+ Parameters 
    + company_alias: (required, string)

+ Request 

    + `card_number` (string) Required. String length: inclusive between 0 and 20. 
    + `holder_name` (string) String length: inclusive between 0 and 250. 
    + `holder_type` (object) 
    + `expiration_year` (int) Range: inclusive between 1 and 9999. 
    + `expiration_month` (int) Range: inclusive between 1 and 12. 
    + `billing_address` (object) 
    + `billing_address.country_code` (string) String length: inclusive between 0 and 5. 
    + `billing_address.state_code` (string) String length: inclusive between 0 and 5. 
    + `billing_address.postal_code` (string) String length: inclusive between 0 and 15. 
    + `billing_address.county` (string) String length: inclusive between 0 and 250. 
    + `billing_address.city` (string) String length: inclusive between 0 and 250. 
    + `billing_address.address_line1` (string) String length: inclusive between 0 and 250. 
    + `billing_address.address_line2` (string) String length: inclusive between 0 and 250. 
    + `notes` (string) String length: inclusive between 0 and 500. 

    + Headers 

            Content-Type: application/json 
            Authorization: bearer {access_token} 

    + Body 

Failed to generate the sample for media type 'application/x-www-form-urlencoded'. Cannot use formatter 'TraceableFormFormatter' to write type 'CreditCardCreateDTO'.

+ Response 200 

    + Headers 

            Content-Type: application/json 

    + Body 

{
  "id": 1422,
  "card_number_first_digit": "4",
  "card_number_last_digits": "1111",
  "card_network": "visa",
  "holder_name": "Josh Smith",
  "holder_type": "personal",
  "expiration_year": 2017,
  "expiration_month": 11,
  "billing_address": {
    "country_code": "US",
    "state_code": "TX",
    "postal_code": "12345",
    "county": "County",
    "city": "Dallas",
    "address_line1": "12 Some Street",
    "address_line2": "14 ste"
  },
  "notes": "Some notes"
}

### Get Credit Card [GET /companies/{company_alias}/credit_cards/{id}] 

Returns credit card by spesified `id` if this card does not assosiated with any stored customer account. 

+ Parameters 
    + id: `1` (required, int)
    + company_alias: (required, string)

+ Request 

    + Headers 

            Content-Type: application/json 
            Authorization: bearer {access_token}

+ Response 200 

    + Headers 

            Content-Type: application/json 

    + Body 

{
  "id": 1422,
  "card_number_first_digit": "4",
  "card_number_last_digits": "1111",
  "card_network": "visa",
  "holder_name": "Josh Smith",
  "holder_type": "personal",
  "expiration_year": 2017,
  "expiration_month": 11,
  "billing_address": {
    "country_code": "US",
    "state_code": "TX",
    "postal_code": "12345",
    "county": "County",
    "city": "Dallas",
    "address_line1": "12 Some Street",
    "address_line2": "14 ste"
  },
  "notes": "Some notes"
}

## Group Transitions by Reservation States

Next endpoints allow transitioning by reservation states and managing reservation statuses for Operator and Driver flow. 
All transition responses, except `keep_state`, contain information about current state, permitted states and transition. 

For returning information about reservation statuses user must pass into URL parameter `include_statuses` with one of the next values: `all`, `mapped`, `unmapped`, `none` (default).

To change status on specific, while performing state transition, make sure that the desired status is mapped to the final state and pass corresponding `status_id` parameter into URI.

If `status_id` parameter for desired status is not specified in URL then first from the list of mapped  to the final state statuses will be set.

* For `Keep State` transition parameter `status_id` is required.

In tables bellow described request/response fields:

<b>Request:</b>
| Parameter         |Type   |Required                   |Description                                                |
|-------------------|-------|---------------------------|-----------------------------------------------------------|
| company_alias     | String|Yes                        | The Alias of you company. Example: `limotes1`             |
| id                | Int   |Yes                        | ID of reservation                                         |                          |
| status_id         | Int   |Yes (for Keep State only)  | ID of reservation status that will set after transition   |                                                |
| inclusde_statuses | String|No                         | Allow returns reservation statuses in response. Possible values: `none` - (by default) statuses not returns in response, `all` - statuses returns in response, `mapped` - returns mapped statuses, `unmapped` - returns umpapped statues. | 

<b>Response:</b>
| Parameter                         |Type   |Description                         |
|-----------------------------------|-------|------------------------------------|
| state                             |String |Current state after transition      |
| transitions                       |Array  |List of permitted transitions       |                          |
| transitions[i].state              |String |State name                          |
| transitions[i].transition         |String |Transition name                     | 
| transitions[i].statuses           |Array  |List of mapped reservation statuses |
| transitions[i].statuses[j].id     |Int    |Reservation status ID               |                  
| transitions[i].statuses[j].name   |Int    |Reservation status Name             | 
| transitions[i].statuses[j].color  |String |Status color                        | 

### Get Permitted Transitions [GET /companies/{company_alias}/reservations/{id}/transitions]

Returns collection of available triggers for Operator Reservation by specified ID

+ Parameters
    + company_alias: limotest1 (required, string)
    + id: 1 (int, required)

+ Request

    + Headers

            Content-Type: application/json
            Authorization: bearer {access_token}

+ Response 200

    + Headers

            Content-Type: application/json

    + Body

            {"state":"sample string 1","transitions":[{"state":"sample string 2","transition":"sample string 3","statuses":[{"id": 1,"name": "sample string 5","color":"sample string 6"},{"id": 2,"name":"sample string 7","color":"sample string 7" }]},{"state":"sample string 8","transition":"sample string 9","statuses":[{"id":3,"name":"sample string 10","color":"sample string 11"},{"id":4,"name":"sample string 12","color":"sample string 13"}]}]}
            
## Do Transition [/companies/{company_alias}/reservations/{id}/{trigger}]
            
### Offer [POST /companies/{company_alias}/reservations/{id}/offer]

Make new reservation offer 

+ Parameters
    + company_alias: limotest1 (required, string)
    + id: 1 (int, required)

+ Request

    + `status_id` (Int). Inclusive between 1 and Int Max value.
    + `include_statuses` (String). Possible values: 'mapped', 'unmapped', 'all', 'none'. Default value: 'none'.

    + Headers

            Content-Type: application/json
            Authorization: bearer {access_token}

+ Response 200

    + Headers

            Content-Type: application/json

    + Body

            {"state":"sample string 1","transitions":[{"state":"sample string 2","transition":"sample string 3","statuses":[{"id": 1,"name": "sample string 5","color":"sample string 6"},{"id": 2,"name":"sample string 7","color":"sample string 7" }]},{"state":"sample string 8","transition":"sample string 9","statuses":[{"id":3,"name":"sample string 10","color":"sample string 11"},{"id":4,"name":"sample string 12","color":"sample string 13"}]}]}
            
### Accept [POST /companies/{company_alias}/reservations/{id}/accept]

Accept offered reservation

+ Parameters
    + company_alias: limotest1 (required, string)
    + id: 1 (int, required)

+ Request

    + `status_id` (Int). Inclusive between 1 and Int Max value.
    + `include_statuses` (String). Possible values: 'mapped', 'unmapped', 'all', 'none'. Default value: 'none'.

    + Headers

            Content-Type: application/json
            Authorization: bearer {access_token}

+ Response 200

    + Headers

            Content-Type: application/json

    + Body

            {"state":"sample string 1","transitions":[{"state":"sample string 2","transition":"sample string 3","statuses":[{"id": 1,"name": "sample string 5","color":"sample string 6"},{"id": 2,"name":"sample string 7","color":"sample string 7" }]},{"state":"sample string 8","transition":"sample string 9","statuses":[{"id":3,"name":"sample string 10","color":"sample string 11"},{"id":4,"name":"sample string 12","color":"sample string 13"}]}]}
            
### Reject [POST /companies/{company_alias}/reservations/{id}/reject]

Reject offered reservation

+ Parameters
    + company_alias: limotest1 (required, string)
    + id: 1 (int, required)

+ Request

    + `status_id` (Int). Inclusive between 1 and Int Max value.
    + `include_statuses` (String). Possible values: 'mapped', 'unmapped', 'all', 'none'. Default value: 'none'.

    + Headers

            Content-Type: application/json
            Authorization: bearer {access_token}

+ Response 200

    + Headers

            Content-Type: application/json

    + Body
            
            {"state":"sample string 1","transitions":[{"state":"sample string 2","transition":"sample string 3","statuses":[{"id": 1,"name": "sample string 5","color":"sample string 6"},{"id": 2,"name":"sample string 7","color":"sample string 7" }]},{"state":"sample string 8","transition":"sample string 9","statuses":[{"id":3,"name":"sample string 10","color":"sample string 11"},{"id":4,"name":"sample string 12","color":"sample string 13"}]}]}

### Assign [POST /companies/{company_alias}/reservations/{id}/assign]

Assign reservation to driver

+ Parameters
    + company_alias: limotest1 (required, string)
    + id: 1 (int, required)

+ Request

    + `status_id` (Int). Inclusive between 1 and Int Max value.
    + `include_statuses` (String). Possible values: 'mapped', 'unmapped', 'all', 'none'. Default value: 'none'.

    + Headers

            Content-Type: application/json
            Authorization: bearer {access_token}

+ Response 200

    + Headers

            Content-Type: application/json

    + Body

            {"state":"sample string 1","transitions":[{"state":"sample string 2","transition":"sample string 3","statuses":[{"id": 1,"name": "sample string 5","color":"sample string 6"},{"id": 2,"name":"sample string 7","color":"sample string 7" }]},{"state":"sample string 8","transition":"sample string 9","statuses":[{"id":3,"name":"sample string 10","color":"sample string 11"},{"id":4,"name":"sample string 12","color":"sample string 13"}]}]}
            
### Unassign [POST /companies/{company_alias}/reservations/{id}/unassign]

Unassigns reservation from driver

+ Parameters
    + company_alias: limotest1 (required, string)
    + id: 1 (int, required)

+ Request

    + `status_id` (Int). Inclusive between 1 and Int Max value.
    + `include_statuses` (String). Possible values: 'mapped', 'unmapped', 'all', 'none'. Default value: 'none'.

    + Headers

            Content-Type: application/json
            Authorization: bearer {access_token}

+ Response 200

    + Headers

            Content-Type: application/json

    + Body

            {"state":"sample string 1","transitions":[{"state":"sample string 2","transition":"sample string 3","statuses":[{"id": 1,"name": "sample string 5","color":"sample string 6"},{"id": 2,"name":"sample string 7","color":"sample string 7" }]},{"state":"sample string 8","transition":"sample string 9","statuses":[{"id":3,"name":"sample string 10","color":"sample string 11"},{"id":4,"name":"sample string 12","color":"sample string 13"}]}]}
         
### Go to Pickup [POST /companies/{company_alias}/reservations/{id}/go_to_pickup]

Shows that the driver is on the way to pickup location

+ Parameters

    + company_alias: limotest1 (required, string)
    + id: 1 (int, required)

+ Request

    + `status_id` (Int). Inclusive between 1 and Int Max value.
    + `include_statuses` (String). Possible values: 'mapped', 'unmapped', 'all', 'none'. Default value: 'none'.

    + Headers

            Content-Type: application/json
            Authorization: bearer {access_token}

+ Response 200

    + Headers

            Content-Type: application/json

    + Body

            {"state":"sample string 1","transitions":[{"state":"sample string 2","transition":"sample string 3","statuses":[{"id": 1,"name": "sample string 5","color":"sample string 6"},{"id": 2,"name":"sample string 7","color":"sample string 7" }]},{"state":"sample string 8","transition":"sample string 9","statuses":[{"id":3,"name":"sample string 10","color":"sample string 11"},{"id":4,"name":"sample string 12","color":"sample string 13"}]}]}
         
### Arrive at Pickup [POST /companies/{company_alias}/reservations/{id}/arrive_at_pickup]

Shows that the driver has arrived at pickup location

+ Parameters
    + company_alias: limotest1 (required, string)
    + id: 1 (int, required)

+ Request
    + `status_id` (Int). Inclusive between 1 and Int Max value.
    + `include_statuses` (String). Possible values: 'mapped', 'unmapped', 'all', 'none'. Default value: 'none'.

    + Headers

            Content-Type: application/json
            Authorization: bearer {access_token}

+ Response 200

    + Headers

            Content-Type: application/json

    + Body

            {"state":"sample string 1","transitions":[{"state":"sample string 2","transition":"sample string 3","statuses":[{"id": 1,"name": "sample string 5","color":"sample string 6"},{"id": 2,"name":"sample string 7","color":"sample string 7" }]},{"state":"sample string 8","transition":"sample string 9","statuses":[{"id":3,"name":"sample string 10","color":"sample string 11"},{"id":4,"name":"sample string 12","color":"sample string 13"}]}]}
         
### Circle [POST /companies/{company_alias}/reservations/{id}/circle]

Shows that the driver is circling on pickup location

+ Parameters
    + company_alias: limotest1 (required, string)
    + id: 1 (int, required)

+ Request
    + `status_id` (Int). Inclusive between 1 and Int Max value.
    + `include_statuses` (String). Possible values: 'mapped', 'unmapped', 'all', 'none'. Default value: 'none'.

    + Headers

            Content-Type: application/json
            Authorization: bearer {access_token}

+ Response 200

    + Headers

            Content-Type: application/json

    + Body

            {"state":"sample string 1","transitions":[{"state":"sample string 2","transition":"sample string 3","statuses":[{"id": 1,"name": "sample string 5","color":"sample string 6"},{"id": 2,"name":"sample string 7","color":"sample string 7" }]},{"state":"sample string 8","transition":"sample string 9","statuses":[{"id":3,"name":"sample string 10","color":"sample string 11"},{"id":4,"name":"sample string 12","color":"sample string 13"}]}]}
         
### Start Wait [POST /companies/{company_alias}/reservations/{id}/start_wait]

Shows that the Driver started waiting for the passenger

+ Parameters
    + company_alias: limotest1 (required, string)
    + id: 1 (int, required)

+ Request
    + `status_id` (Int). Inclusive between 1 and Int Max value.
    + `include_statuses` (String). Possible values: 'mapped', 'unmapped', 'all', 'none'. Default value: 'none'.

    + Headers

            Content-Type: application/json
            Authorization: bearer {access_token}

+ Response 200

    + Headers

            Content-Type: application/json

    + Body

            {"state":"sample string 1","transitions":[{"state":"sample string 2","transition":"sample string 3","statuses":[{"id": 1,"name": "sample string 5","color":"sample string 6"},{"id": 2,"name":"sample string 7","color":"sample string 7" }]},{"state":"sample string 8","transition":"sample string 9","statuses":[{"id":3,"name":"sample string 10","color":"sample string 11"},{"id":4,"name":"sample string 12","color":"sample string 13"}]}]}

### End Wait [POST /companies/{company_alias}/reservations/{id}/end_wait]

Shows that the Driver driver stopped waiting for the passenger.

+ Parameters
    + company_alias: limotest1 (required, string)
    + id: 1 (int, required)

+ Request
    + `status_id` (Int). Inclusive between 1 and Int Max value.
    + `include_statuses` (String). Possible values: 'mapped', 'unmapped', 'all', 'none'. Default value: 'none'.

    + Headers

            Content-Type: application/json
            Authorization: bearer {access_token}

+ Response 200

    + Headers

            Content-Type: application/json

    + Body

            {"state":"sample string 1","transitions":[{"state":"sample string 2","transition":"sample string 3","statuses":[{"id": 1,"name": "sample string 5","color":"sample string 6"},{"id": 2,"name":"sample string 7","color":"sample string 7" }]},{"state":"sample string 8","transition":"sample string 9","statuses":[{"id":3,"name":"sample string 10","color":"sample string 11"},{"id":4,"name":"sample string 12","color":"sample string 13"}]}]}

### PickUp Passenger [POST /companies/{company_alias}/reservations/{id}/pick_up_passenger]

Shows that the driver picked up the passenger

+ Parameters
    + company_alias: limotest1 (required, string)
    + id: 1 (int, required)

+ Request
    + `status_id` (Int). Inclusive between 1 and Int Max value.
    + `include_statuses` (String). Possible values: 'mapped', 'unmapped', 'all', 'none'. Default value: 'none'.

    + Headers

            Content-Type: application/json
            Authorization: bearer {access_token}

+ Response 200

    + Headers

            Content-Type: application/json

    + Body

            {"state":"sample string 1","transitions":[{"state":"sample string 2","transition":"sample string 3","statuses":[{"id": 1,"name": "sample string 5","color":"sample string 6"},{"id": 2,"name":"sample string 7","color":"sample string 7" }]},{"state":"sample string 8","transition":"sample string 9","statuses":[{"id":3,"name":"sample string 10","color":"sample string 11"},{"id":4,"name":"sample string 12","color":"sample string 13"}]}]}

### DropOff Passenger [POST /companies/{company_alias}/reservations/{id}/drop_off_passenger]

Shows that the driver delivered the passenger to the destination

+ Parameters
    + company_alias: limotest1 (required, string)
    + id: 1 (int, required)

+ Request
    + `status_id` (Int). Inclusive between 1 and Int Max value.
    + `include_statuses` (String). Possible values: 'mapped', 'unmapped', 'all', 'none'. Default value: 'none'.

    + Headers

            Content-Type: application/json
            Authorization: bearer {access_token}

+ Response 200

    + Headers

            Content-Type: application/json

    + Body

            {"state":"sample string 1","transitions":[{"state":"sample string 2","transition":"sample string 3","statuses":[{"id": 1,"name": "sample string 5","color":"sample string 6"},{"id": 2,"name":"sample string 7","color":"sample string 7" }]},{"state":"sample string 8","transition":"sample string 9","statuses":[{"id":3,"name":"sample string 10","color":"sample string 11"},{"id":4,"name":"sample string 12","color":"sample string 13"}]}]}
  
   
### Restore [POST /companies/{company_alias}/reservations/{id}/restore]

Restore reservation after deleting 

+ Parameters
    + company_alias: limotest1 (required, string)
    + id: 1 (int, required)

+ Request
    + `status_id` (Int). Inclusive between 1 and Int Max value.
    + `include_statuses` (String). Possible values: 'mapped', 'unmapped', 'all', 'none'. Default value: 'none'.

    + Headers

            Content-Type: application/json
            Authorization: bearer {access_token}

+ Response 200

    + Headers

            Content-Type: application/json

    + Body

            {"state":"sample string 1","transitions":[{"state":"sample string 2","transition":"sample string 3","statuses":[{"id": 1,"name": "sample string 5","color":"sample string 6"},{"id": 2,"name":"sample string 7","color":"sample string 7" }]},{"state":"sample string 8","transition":"sample string 9","statuses":[{"id":3,"name":"sample string 10","color":"sample string 11"},{"id":4,"name":"sample string 12","color":"sample string 13"}]}]}
            
### Cancel [POST /companies/{company_alias}/reservations/{id}/cancel]

Cancel reservation 

+ Parameters
    + company_alias: limotest1 (required, string)
    + id: 1 (int, required)

+ Request
    + `status_id` (Int). Inclusive between 1 and Int Max value.
    + `include_statuses` (String). Possible values: 'mapped', 'unmapped', 'all', 'none'. Default value: 'none'.

    + Headers

            Content-Type: application/json
            Authorization: bearer {access_token}

+ Response 200

    + Headers

            Content-Type: application/json

    + Body

            {"state":"sample string 1","transitions":[{"state":"sample string 2","transition":"sample string 3","statuses":[{"id": 1,"name": "sample string 5","color":"sample string 6"},{"id": 2,"name":"sample string 7","color":"sample string 7" }]},{"state":"sample string 8","transition":"sample string 9","statuses":[{"id":3,"name":"sample string 10","color":"sample string 11"},{"id":4,"name":"sample string 12","color":"sample string 13"}]}]}
            
### Cancel by Passenger [POST /companies/{company_alias}/reservations/{id}/cancel_by_passenger]

Cancel reservation by passenger

+ Parameters
    + company_alias: limotest1 (required, string)
    + id: 1 (int, required)

+ Request
    + `status_id` (Int). Inclusive between 1 and Int Max value.
    + `include_statuses` (String). Possible values: 'mapped', 'unmapped', 'all', 'none'. Default value: 'none'.

    + Headers

            Content-Type: application/json
            Authorization: bearer {access_token}

+ Response 200

    + Headers

            Content-Type: application/json

    + Body

            {"state":"sample string 1","transitions":[{"state":"sample string 2","transition":"sample string 3","statuses":[{"id": 1,"name": "sample string 5","color":"sample string 6"},{"id": 2,"name":"sample string 7","color":"sample string 7" }]},{"state":"sample string 8","transition":"sample string 9","statuses":[{"id":3,"name":"sample string 10","color":"sample string 11"},{"id":4,"name":"sample string 12","color":"sample string 13"}]}]}
            
### Cancel by Affiliate [POST /companies/{company_alias}/reservations/{id}/cancel_by_affiliate]

Cancel reservation by affiliate

+ Parameters
    + company_alias: limotest1 (required, string)
    + id: 1 (int, required)

+ Request
    + `status_id` (Int). Inclusive between 1 and Int Max value.
    + `include_statuses` (String). Possible values: 'mapped', 'unmapped', 'all', 'none'. Default value: 'none'.

    + Headers

            Content-Type: application/json
            Authorization: bearer {access_token}

+ Response 200

    + Headers

            Content-Type: application/json

    + Body

            {"state":"sample string 1","transitions":[{"state":"sample string 2","transition":"sample string 3","statuses":[{"id": 1,"name": "sample string 5","color":"sample string 6"},{"id": 2,"name":"sample string 7","color":"sample string 7" }]},{"state":"sample string 8","transition":"sample string 9","statuses":[{"id":3,"name":"sample string 10","color":"sample string 11"},{"id":4,"name":"sample string 12","color":"sample string 13"}]}]}
            
### Close [POST /companies/{company_alias}/reservations/{id}/close]

Close reservation

+ Parameters
    + company_alias: limotest1 (required, string)
    + id: 1 (int, required)

+ Request
    + `status_id` (Int). Inclusive between 1 and Int Max value.
    + `include_statuses` (String). Possible values: 'mapped', 'unmapped', 'all', 'none'. Default value: 'none'.

    + Headers

            Content-Type: application/json
            Authorization: bearer {access_token}

+ Response 200

    + Headers

            Content-Type: application/json

    + Body

            {"state":"sample string 1","transitions":[{"state":"sample string 2","transition":"sample string 3","statuses":[{"id": 1,"name": "sample string 5","color":"sample string 6"},{"id": 2,"name":"sample string 7","color":"sample string 7" }]},{"state":"sample string 8","transition":"sample string 9","statuses":[{"id":3,"name":"sample string 10","color":"sample string 11"},{"id":4,"name":"sample string 12","color":"sample string 13"}]}]}
        
### No Show [POST /companies/{company_alias}/reservations/{id}/no_show]

Sets when passenger did not arrive to pickup location

+ Parameters
    + company_alias: limotest1 (required, string)
    + id: 1 (int, required)

+ Request
    + `status_id` (Int). Inclusive between 1 and Int Max value.
    + `include_statuses` (String). Possible values: 'mapped', 'unmapped', 'all', 'none'. Default value: 'none'.

    + Headers

            Content-Type: application/json
            Authorization: bearer {access_token}

+ Response 200

    + Headers

            Content-Type: application/json

    + Body

            {"state":"sample string 1","transitions":[{"state":"sample string 2","transition":"sample string 3","statuses":[{"id": 1,"name": "sample string 5","color":"sample string 6"},{"id": 2,"name":"sample string 7","color":"sample string 7" }]},{"state":"sample string 8","transition":"sample string 9","statuses":[{"id":3,"name":"sample string 10","color":"sample string 11"},{"id":4,"name":"sample string 12","color":"sample string 13"}]}]}
            
### Keep State [POST /companies/{company_alias}/reservations/{id}/keep_state]

Change reservation status without changing reservation state  

+ Parameters
    + company_alias: limotest1 (required, string)
    + id: 1 (int, required)

+ Request
    + `status_id` (Int). Required. Inclusive between 1 and Int Max value.
    + `include_statuses` (String). Possible values: 'mapped', 'unmapped', 'all', 'none'. Default value: 'none'.

    + Headers

            Content-Type: application/json
            Authorization: bearer {access_token}
            
## Group Customer Accounts 
Provides operations with Customer Accounts. 

## Get Customer Account [/GetCustomerAccountAsync]

### Get By Id [GET /companies/{company_alias}/customers/{id}] 

+ Parameters 
    + id: `1` (required, int)
    + company_alias: (required, string)

+ Request 

    + Headers 

            Content-Type: application/json 
            Authorization: bearer {access_token}

+ Response 200 

    + Headers 

            Content-Type: application/json 

    + Body 

{
  "id": 1002334155,
  "account_number": "30257",
  "email": "email@sample.com",
  "partner_consumer_id": 1,
  "prefix": "Mr.",
  "first_name": "Jerry",
  "last_name": "Harris",
  "billing_contact_account_id": 1002333256,
  "billing_contact_account": {
    "first_name": "David",
    "last_name": "Stewart",
    "email": "email@sample.com",
    "phone": "+380930000000"
  },
  "department": "communications",
  "position": "office manager",
  "billing_address": {
    "country_code": "US",
    "state_code": "NY",
    "postal_code": "11354",
    "county": "Nassau",
    "city": "Queens",
    "address_line1": "123 Main St",
    "address_line2": "apt. 26"
  },
  "home_phone": "+380930000045",
  "office_phone": "+380930000034",
  "cellular_phone1": "+380930000012",
  "cellular_phone2": "+380930000001",
  "cellular_phone3": "+380930000056",
  "fax1": "+380930000123",
  "fax2": "+380930000124",
  "is_billing_contact": true,
  "is_booking_contact": true,
  "is_passenger": true,
  "is_active": true,
  "is_locked": false,
  "default_credit_card_id": 12341235,
    "default_credit_card": {
    "holder_name": "Jerry Harris",
    "holder_type": "personal",
    "card_number_first_digit": "1",
    "card_number_last_digits": "4556",
    "card_network": "other",
    "expiration_year": 2020,
    "expiration_month": 5
  },
  "default_payment_type_id": 1,
  "default_payment_type": {
    "name": "Credit Card",
    "code": "CC",
    "method": "other"
  },
  "payment_terms": "10.00:00:00",
  "internal_notes": "sample notes",
  "preferences_notes": "sample notes",
  "driver_notes": "sample notes",
  "default_rental_agreement_id": 145,
  "default_rental_agreement": {
    "name": "Default rental agreement"
  },
  "default_primary_agent_id": 1,
  "default_primary_agent_reward": {
    "type": "percentage",
    "amount": 1.0
  },
  "default_primary_agent": {
    "first_name": "Richard",
    "last_name": "Goodwin",
    "email": "email@sample.com",
    "phone": "+380990000367"
  },
  "default_secondary_agent_id": 1,
  "default_secondary_agent_reward": {
    "type": "percentage",
    "amount": 1.0
  },
    "default_secondary_agent": {
    "first_name": "Christina",
    "last_name": "Brady",
    "email": "email@sample.com",
    "phone": "+380950000382"
  },
  "created_at": "2017-06-08T16:19:34+03:00",
  "created_by": "admin",
  "updated_at": "2017-08-10T18:10:34+03:00",
  "updated_by": "admin"
}

## Search Customer Accounts [/GetCustomerAccountsAsync]
Returns Paged Collection of Customer Accounts. 

### Get Customer Accounts [GET /companies/{company_alias}/customers?billing_contact_id={billing_contact_id}&search_for={search_for}&page_index={page_index}&page_size={page_size}&is_active={is_active}] 

+ Parameters 
    + billing_contact_id: (optional, int)
    + search_in: (optional, string)
    + search_for: (optional, string)
    + page_index: 1 (optional, int)
    + page_size: 20 (optional, int)
    + is_active: true (optional, boolean)
    + sort_by: (optional, string)
    + sort_order: (optional, string)
    + company_alias: (required, string)

+ Request 

    + Headers 

            Content-Type: application/json 
            Authorization: bearer {access_token}

+ Response 200 

    + Headers 

            Content-Type: application/json 

    + Body 

{
  "total_count": 1,
  "items": [
    {
      "id": 1002334155,
      "account_number": "30257",
      "prefix": "Mr.",
      "first_name": "Jerry",
      "last_name": "Harris",
      "email": "email@sample.com",
      "billing_contact_account_id": 1002333256,
      "billing_contact_account": {
        "first_name": "David",
        "last_name": "Stewart",
        "email": "email@sample.com",
        "phone": "+380930000000"
      },
      "is_billing_contact": true,
      "is_booking_contact": true,
      "is_passenger": true,
      "is_active": true,
      "is_locked": false,
      "created_at": "2017-06-08T16:19:34+03:00",
      "created_by": "admin"
    },
    {
      "id": 1002334156,
      "account_number": "30258",
      "prefix": "Mrs.",
      "first_name": "Christina",
      "last_name": "Brady",
      "email": "email@sample.com",
      "billing_contact_account_id": 1002333256,
      "billing_contact_account": {
        "first_name": "David",
        "last_name": "Stewart",
        "email": "email@sample.com",
        "phone": "+380930000000"
      },
      "is_billing_contact": true,
      "is_booking_contact": true,
      "is_passenger": true,
      "is_active": true,
      "is_locked": false,
      "created_at": "2017-08-10T18:21:34+03:00",
      "created_by": "admin"
    }
  ]
}

### Get Billing Contacts [GET /companies/{company_alias}/customers/billing_contacts?billing_contact_id={billing_contact_id}&search_for={search_for}&page_index={page_index}&page_size={page_size}&is_active={is_active}] 

+ Parameters 
    + billing_contact_id: (optional, int)
    + search_in: (optional, string)
    + search_for: (optional, string)
    + page_index: 1 (optional, int)
    + page_size: 20 (optional, int)
    + is_active: true (optional, boolean)
    + sort_by: (optional, string)
    + sort_order: (optional, string)
    + company_alias: (required, string)

+ Request 

    + Headers 

            Content-Type: application/json 
            Authorization: bearer {access_token}

+ Response 200 

    + Headers 

            Content-Type: application/json 

    + Body 

{
  "total_count": 1,
  "items": [
    {
      "id": 1002334155,
      "account_number": "30257",
      "prefix": "Mr.",
      "first_name": "Jerry",
      "last_name": "Harris",
      "email": "email@sample.com",
      "billing_contact_account_id": 1002333256,
      "billing_contact_account": {
        "first_name": "David",
        "last_name": "Stewart",
        "email": "email@sample.com",
        "phone": "+380930000000"
      },
      "is_billing_contact": true,
      "is_booking_contact": true,
      "is_passenger": true,
      "is_active": true,
      "is_locked": false,
      "created_at": "2017-06-08T16:19:34+03:00",
      "created_by": "admin"
    },
    {
      "id": 1002334156,
      "account_number": "30258",
      "prefix": "Mrs.",
      "first_name": "Christina",
      "last_name": "Brady",
      "email": "email@sample.com",
      "billing_contact_account_id": 1002333256,
      "billing_contact_account": {
        "first_name": "David",
        "last_name": "Stewart",
        "email": "email@sample.com",
        "phone": "+380930000000"
      },
      "is_billing_contact": true,
      "is_booking_contact": true,
      "is_passenger": true,
      "is_active": true,
      "is_locked": false,
      "created_at": "2017-08-10T18:21:34+03:00",
      "created_by": "admin"
    }
  ]
}

### Get Booking Contacts [GET /companies/{company_alias}/customers/booking_contacts?billing_contact_id={billing_contact_id}&search_for={search_for}&page_index={page_index}&page_size={page_size}&is_active={is_active}] 

+ Parameters 
    + billing_contact_id: (optional, int)
    + search_in: (optional, string)
    + search_for: (optional, string)
    + page_index: 1 (optional, int)
    + page_size: 20 (optional, int)
    + is_active: true (optional, boolean)
    + sort_by: (optional, string)
    + sort_order: (optional, string)
    + company_alias: (required, string)

+ Request 

    + Headers 

            Content-Type: application/json 
            Authorization: bearer {access_token}

+ Response 200 

    + Headers 

            Content-Type: application/json 

    + Body 

{
  "total_count": 1,
  "items": [
    {
      "id": 1002334155,
      "account_number": "30257",
      "prefix": "Mr.",
      "first_name": "Jerry",
      "last_name": "Harris",
      "email": "email@sample.com",
      "billing_contact_account_id": 1002333256,
      "billing_contact_account": {
        "first_name": "David",
        "last_name": "Stewart",
        "email": "email@sample.com",
        "phone": "+380930000000"
      },
      "is_billing_contact": true,
      "is_booking_contact": true,
      "is_passenger": true,
      "is_active": true,
      "is_locked": false,
      "created_at": "2017-06-08T16:19:34+03:00",
      "created_by": "admin"
    },
    {
      "id": 1002334156,
      "account_number": "30258",
      "prefix": "Mrs.",
      "first_name": "Christina",
      "last_name": "Brady",
      "email": "email@sample.com",
      "billing_contact_account_id": 1002333256,
      "billing_contact_account": {
        "first_name": "David",
        "last_name": "Stewart",
        "email": "email@sample.com",
        "phone": "+380930000000"
      },
      "is_billing_contact": true,
      "is_booking_contact": true,
      "is_passenger": true,
      "is_active": true,
      "is_locked": false,
      "created_at": "2017-08-10T18:21:34+03:00",
      "created_by": "admin"
    }
  ]
}

### Get Booking Contact's Passengers [GET /companies/{company_alias}/customers/booking_contacts/{booking_contact_id}/passengers?search_for={search_for}&page_index={page_index}&page_size={page_size}&is_active={is_active}] 

+ Parameters 
    + booking_contact_id: (required, int)
    + search_in: (optional, string)
    + search_for: (optional, string)
    + page_index: 1 (optional, int)
    + page_size: 20 (optional, int)
    + is_active: true (optional, boolean)
    + sort_by: (optional, string)
    + sort_order: (optional, string)
    + company_alias: (required, string)

+ Request 

    + Headers 

            Content-Type: application/json 
            Authorization: bearer {access_token}

+ Response 200 

    + Headers 

            Content-Type: application/json 

    + Body 

{
  "total_count": 1,
  "items": [
    {
      "id": 1002334155,
      "account_number": "30257",
      "prefix": "Mr.",
      "first_name": "Jerry",
      "last_name": "Harris",
      "email": "email@sample.com",
      "billing_contact_account_id": 1002333256,
      "billing_contact_account": {
        "first_name": "David",
        "last_name": "Stewart",
        "email": "email@sample.com",
        "phone": "+380930000000"
      },
      "is_billing_contact": true,
      "is_booking_contact": true,
      "is_passenger": true,
      "is_active": true,
      "is_locked": false,
      "created_at": "2017-06-08T16:19:34+03:00",
      "created_by": "admin"
    },
    {
      "id": 1002334156,
      "account_number": "30258",
      "prefix": "Mrs.",
      "first_name": "Christina",
      "last_name": "Brady",
      "email": "email@sample.com",
      "billing_contact_account_id": 1002333256,
      "billing_contact_account": {
        "first_name": "David",
        "last_name": "Stewart",
        "email": "email@sample.com",
        "phone": "+380930000000"
      },
      "is_billing_contact": true,
      "is_booking_contact": true,
      "is_passenger": true,
      "is_active": true,
      "is_locked": false,
      "created_at": "2017-08-10T18:21:34+03:00",
      "created_by": "admin"
    }
  ]
}

### Get Booking Contact's Billing Contacts [GET /companies/{company_alias}/customers/booking_contacts/{booking_contact_id}/billing_contacts?search_for={search_for}&page_index={page_index}&page_size={page_size}&is_active={is_active}] 

+ Parameters 
    + booking_contact_id: (required, int)
    + search_in: (optional, string)
    + search_for: (optional, string)
    + page_index: 1 (optional, int)
    + page_size: 20 (optional, int)
    + is_active: true (optional, boolean)
    + sort_by: (optional, string)
    + sort_order: (optional, string)
    + company_alias: (required, string)

+ Request 

    + Headers 

            Content-Type: application/json 
            Authorization: bearer {access_token}

+ Response 200 

    + Headers 

            Content-Type: application/json 

    + Body 

{
  "total_count": 1,
  "items": [
    {
      "id": 1002334155,
      "account_number": "30257",
      "prefix": "Mr.",
      "first_name": "Jerry",
      "last_name": "Harris",
      "email": "email@sample.com",
      "billing_contact_account_id": 1002333256,
      "billing_contact_account": {
        "first_name": "David",
        "last_name": "Stewart",
        "email": "email@sample.com",
        "phone": "+380930000000"
      },
      "is_billing_contact": true,
      "is_booking_contact": true,
      "is_passenger": true,
      "is_active": true,
      "is_locked": false,
      "created_at": "2017-06-08T16:19:34+03:00",
      "created_by": "admin"
    },
    {
      "id": 1002334156,
      "account_number": "30258",
      "prefix": "Mrs.",
      "first_name": "Christina",
      "last_name": "Brady",
      "email": "email@sample.com",
      "billing_contact_account_id": 1002333256,
      "billing_contact_account": {
        "first_name": "David",
        "last_name": "Stewart",
        "email": "email@sample.com",
        "phone": "+380930000000"
      },
      "is_billing_contact": true,
      "is_booking_contact": true,
      "is_passenger": true,
      "is_active": true,
      "is_locked": false,
      "created_at": "2017-08-10T18:21:34+03:00",
      "created_by": "admin"
    }
  ]
}

### Get Passengers [GET /companies/{company_alias}/customers/passengers?billing_contact_id={billing_contact_id}&search_for={search_for}&page_index={page_index}&page_size={page_size}&is_active={is_active}] 

+ Parameters 
    + billing_contact_id: (optional, int)
    + search_in: (optional, string)
    + search_for: (optional, string)
    + page_index: 1 (optional, int)
    + page_size: 20 (optional, int)
    + is_active: true (optional, boolean)
    + sort_by: (optional, string)
    + sort_order: (optional, string)
    + company_alias: (required, string)

+ Request 

    + Headers 

            Content-Type: application/json 
            Authorization: bearer {access_token}

+ Response 200 

    + Headers 

            Content-Type: application/json 

    + Body 

{
  "total_count": 1,
  "items": [
    {
      "id": 1002334155,
      "account_number": "30257",
      "prefix": "Mr.",
      "first_name": "Jerry",
      "last_name": "Harris",
      "email": "email@sample.com",
      "billing_contact_account_id": 1002333256,
      "billing_contact_account": {
        "first_name": "David",
        "last_name": "Stewart",
        "email": "email@sample.com",
        "phone": "+380930000000"
      },
      "is_billing_contact": true,
      "is_booking_contact": true,
      "is_passenger": true,
      "is_active": true,
      "is_locked": false,
      "created_at": "2017-06-08T16:19:34+03:00",
      "created_by": "admin"
    },
    {
      "id": 1002334156,
      "account_number": "30258",
      "prefix": "Mrs.",
      "first_name": "Christina",
      "last_name": "Brady",
      "email": "email@sample.com",
      "billing_contact_account_id": 1002333256,
      "billing_contact_account": {
        "first_name": "David",
        "last_name": "Stewart",
        "email": "email@sample.com",
        "phone": "+380930000000"
      },
      "is_billing_contact": true,
      "is_booking_contact": true,
      "is_passenger": true,
      "is_active": true,
      "is_locked": false,
      "created_at": "2017-08-10T18:21:34+03:00",
      "created_by": "admin"
    }
  ]
}

### Get Passenger's Booking Contacts [GET /companies/{company_alias}/customers/passengers/{passenger_id}/booking_contacts?search_for={search_for}&page_index={page_index}&page_size={page_size}&is_active={is_active}] 

+ Parameters 
    + passenger_id: (required, int)
    + search_in: (optional, string)
    + search_for: (optional, string)
    + page_index: 1 (optional, int)
    + page_size: 20 (optional, int)
    + is_active: true (optional, boolean)
    + sort_by: (optional, string)
    + sort_order: (optional, string)
    + company_alias: (required, string)

+ Request 

    + Headers 

            Content-Type: application/json 
            Authorization: bearer {access_token}

+ Response 200 

    + Headers 

            Content-Type: application/json 

    + Body 

{
  "total_count": 1,
  "items": [
    {
      "id": 1002334155,
      "account_number": "30257",
      "prefix": "Mr.",
      "first_name": "Jerry",
      "last_name": "Harris",
      "email": "email@sample.com",
      "billing_contact_account_id": 1002333256,
      "billing_contact_account": {
        "first_name": "David",
        "last_name": "Stewart",
        "email": "email@sample.com",
        "phone": "+380930000000"
      },
      "is_billing_contact": true,
      "is_booking_contact": true,
      "is_passenger": true,
      "is_active": true,
      "is_locked": false,
      "created_at": "2017-06-08T16:19:34+03:00",
      "created_by": "admin"
    },
    {
      "id": 1002334156,
      "account_number": "30258",
      "prefix": "Mrs.",
      "first_name": "Christina",
      "last_name": "Brady",
      "email": "email@sample.com",
      "billing_contact_account_id": 1002333256,
      "billing_contact_account": {
        "first_name": "David",
        "last_name": "Stewart",
        "email": "email@sample.com",
        "phone": "+380930000000"
      },
      "is_billing_contact": true,
      "is_booking_contact": true,
      "is_passenger": true,
      "is_active": true,
      "is_locked": false,
      "created_at": "2017-08-10T18:21:34+03:00",
      "created_by": "admin"
    }
  ]
}

### Get Passenger's Billing Contacts [GET /companies/{company_alias}/customers/passengers/{passenger_id}/billing_contacts?search_for={search_for}&page_index={page_index}&page_size={page_size}&is_active={is_active}] 

+ Parameters 
    + passenger_id: (required, int)
    + search_in: (optional, string)
    + search_for: (optional, string)
    + page_index: 1 (optional, int)
    + page_size: 20 (optional, int)
    + is_active: true (optional, boolean)
    + sort_by: (optional, string)
    + sort_order: (optional, string)
    + company_alias: (required, string)

+ Request 

    + Headers 

            Content-Type: application/json 
            Authorization: bearer {access_token}

+ Response 200 

    + Headers 

            Content-Type: application/json 

    + Body 

{
  "total_count": 1,
  "items": [
    {
      "id": 1002334155,
      "account_number": "30257",
      "prefix": "Mr.",
      "first_name": "Jerry",
      "last_name": "Harris",
      "email": "email@sample.com",
      "billing_contact_account_id": 1002333256,
      "billing_contact_account": {
        "first_name": "David",
        "last_name": "Stewart",
        "email": "email@sample.com",
        "phone": "+380930000000"
      },
      "is_billing_contact": true,
      "is_booking_contact": true,
      "is_passenger": true,
      "is_active": true,
      "is_locked": false,
      "created_at": "2017-06-08T16:19:34+03:00",
      "created_by": "admin"
    },
    {
      "id": 1002334156,
      "account_number": "30258",
      "prefix": "Mrs.",
      "first_name": "Christina",
      "last_name": "Brady",
      "email": "email@sample.com",
      "billing_contact_account_id": 1002333256,
      "billing_contact_account": {
        "first_name": "David",
        "last_name": "Stewart",
        "email": "email@sample.com",
        "phone": "+380930000000"
      },
      "is_billing_contact": true,
      "is_booking_contact": true,
      "is_passenger": true,
      "is_active": true,
      "is_locked": false,
      "created_at": "2017-08-10T18:21:34+03:00",
      "created_by": "admin"
    }
  ]
}

## Customer Account Credit Cards [/CustomerAccount/credit_card]

### Get Credit Card [GET /companies/{company_alias}/customers/{customer_id}/credit_cards/{id}] 

+ Parameters 
    + customer_id: (required, int)
    + id: `1` (required, int)
    + company_alias: (required, string)

+ Request 

    + Headers 

            Content-Type: application/json 
            Authorization: bearer {access_token}

+ Response 200 

    + Headers 

            Content-Type: application/json 

    + Body 

{
  "id": 1422,
  "card_number_first_digit": "4",
  "card_number_last_digits": "1111",
  "card_network": "visa",
  "holder_name": "Josh Smith",
  "holder_type": "personal",
  "expiration_year": 2017,
  "expiration_month": 11,
  "billing_address": {
    "country_code": "US",
    "state_code": "TX",
    "postal_code": "12345",
    "county": "County",
    "city": "Dallas",
    "address_line1": "12 Some Street",
    "address_line2": "14 ste"
  },
  "notes": "Some notes"
}

### Get Credit Cards [GET /companies/{company_alias}/customers/{customer_id}/credit_cards?sortBy={sortBy}&sortOrder={sortOrder}&page_index={page_index}&page_size={page_size}] 

+ Parameters 
    + customer_id: (required, int)
    + sort_by: (optional, string)
    + sort_order: (optional, string)
    + page_index: 1 (optional, int)
    + page_size: 20 (optional, int)
    + company_alias: (required, string)

+ Request 

    + Headers 

            Content-Type: application/json 
            Authorization: bearer {access_token}

+ Response 200 

    + Headers 

            Content-Type: application/json 

    + Body 

{
  "total_count": 1,
  "items": [
    {
      "id": 1422,
      "holder_name": "Josh Smith",
      "holder_type": "personal",
      "card_number_first_digit": "4",
      "card_number_last_digits": "1111",
      "card_network": "visa",
      "expiration_year": 2017,
      "expiration_month": 11
    }
  ]
}

### Create Credit Card [POST /companies/{company_alias}/customers/{customer_id}/credit_cards] 

+ Parameters 
    + customer_id: (required, int)
    + company_alias: (required, string)

+ Request 

    + `card_number` (string) Required. String length: inclusive between 0 and 20. 
    + `holder_name` (string) String length: inclusive between 0 and 250. 
    + `holder_type` (object) 
    + `expiration_year` (int) Range: inclusive between 1 and 9999. 
    + `expiration_month` (int) Range: inclusive between 1 and 12. 
    + `billing_address` (object) 
    + `billing_address.country_code` (string) String length: inclusive between 0 and 5. 
    + `billing_address.state_code` (string) String length: inclusive between 0 and 5. 
    + `billing_address.postal_code` (string) String length: inclusive between 0 and 15. 
    + `billing_address.county` (string) String length: inclusive between 0 and 250. 
    + `billing_address.city` (string) String length: inclusive between 0 and 250. 
    + `billing_address.address_line1` (string) String length: inclusive between 0 and 250. 
    + `billing_address.address_line2` (string) String length: inclusive between 0 and 250. 
    + `notes` (string) String length: inclusive between 0 and 500. 

    + Headers 

            Content-Type: application/json 
            Authorization: bearer {access_token} 

    + Body 

Failed to generate the sample for media type 'application/x-www-form-urlencoded'. Cannot use formatter 'TraceableFormFormatter' to write type 'CreditCardCreateDTO'.

+ Response 200 

    + Headers 

            Content-Type: application/json 

    + Body 

{
  "id": 1422,
  "card_number_first_digit": "4",
  "card_number_last_digits": "1111",
  "card_network": "visa",
  "holder_name": "Josh Smith",
  "holder_type": "personal",
  "expiration_year": 2017,
  "expiration_month": 11,
  "billing_address": {
    "country_code": "US",
    "state_code": "TX",
    "postal_code": "12345",
    "county": "County",
    "city": "Dallas",
    "address_line1": "12 Some Street",
    "address_line2": "14 ste"
  },
  "notes": "Some notes"
}

### Update Credit Card [PUT /companies/{company_alias}/customers/{customer_id}/credit_cards/{id}] 

+ Parameters 
    + customer_id: (required, int)
    + id: `1` (required, int)
    + company_alias: (required, string)

+ Request 

    + `holder_name` (string) String length: inclusive between 0 and 250. 
    + `holder_type` (object) 
    + `expiration_year` (int) Range: inclusive between 1 and 9999. 
    + `expiration_month` (int) Range: inclusive between 1 and 12. 
    + `billing_address` (object) 
    + `billing_address.country_code` (string) String length: inclusive between 0 and 5. 
    + `billing_address.state_code` (string) String length: inclusive between 0 and 5. 
    + `billing_address.postal_code` (string) String length: inclusive between 0 and 15. 
    + `billing_address.county` (string) String length: inclusive between 0 and 250. 
    + `billing_address.city` (string) String length: inclusive between 0 and 250. 
    + `billing_address.address_line1` (string) String length: inclusive between 0 and 250. 
    + `billing_address.address_line2` (string) String length: inclusive between 0 and 250. 
    + `notes` (string) String length: inclusive between 0 and 500. 

    + Headers 

            Content-Type: application/json 
            Authorization: bearer {access_token} 

    + Body 

Failed to generate the sample for media type 'application/x-www-form-urlencoded'. Cannot use formatter 'TraceableFormFormatter' to write type 'CreditCardEditDTO'.